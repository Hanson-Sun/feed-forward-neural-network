Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  2.12      0.16     0.16  8094142     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  1.59      0.28     0.12   751464     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
  1.46      0.39     0.11  1729716     0.00     0.00  std::function<void ()>::function(std::function<void ()>&&)
  1.39      0.49     0.10  4875641     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  1.32      0.59     0.10  1137859     0.00     0.00  std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})
  1.19      0.69     0.09  1723479     0.00     0.00  std::packaged_task<void ()>::operator()()
  1.06      0.77     0.08  5408717     0.00     0.00  std::unique_lock<std::mutex>::unique_lock(std::mutex&)
  1.06      0.84     0.08  5092084     0.00     0.00  std::function<void ()>::~function()
  1.06      0.93     0.08   559627     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)
  0.99      1.00     0.07  6609718     0.00     0.00  std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
  0.99      1.07     0.07  1601628     0.00     0.00  std::__future_base::_State_baseV2::_M_set_retrieved_flag()
  0.93      1.15     0.07 11494414     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.93      1.22     0.07        4     0.02     0.38  Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const
  0.79      1.27     0.06  1651327     0.00     0.00  std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const
  0.79      1.33     0.06  1165563     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const
  0.79      1.40     0.06                             _init
  0.73      1.45     0.06 21191045     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()
  0.73      1.50     0.06  3305259     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const
  0.66      1.55     0.05  6191835     0.00     0.00  std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long)
  0.66      1.60     0.05  5199570     0.00     0.00  double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  0.66      1.66     0.05  4864122     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.66      1.71     0.05  4087017     0.00     0.00  Math::Matrix::Matrix(Math::Matrix const&)
  0.66      1.75     0.05  1714822     0.00     0.00  std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool)
  0.66      1.80     0.05  1157065     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.66      1.85     0.05   260246     0.00     0.00  Math::operator*(Math::Matrix, Math::Matrix const&)
  0.60      1.90     0.04 42275828     0.00     0.00  std::is_constant_evaluated()
  0.60      1.95     0.04 12369113     0.00     0.00  void std::_Destroy<double*>(double*, double*)
  0.60      1.99     0.04  7082906     0.00     0.00  double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*)
  0.60      2.04     0.04  6636216     0.00     0.00  std::vector<double, std::allocator<double> >::capacity() const
  0.60      2.08     0.04  5615318     0.00     0.00  std::unique_lock<std::mutex>::~unique_lock()
  0.60      2.12     0.04  3429962     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const
  0.53      2.17     0.04 11506648     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr()
  0.53      2.21     0.04  8242539     0.00     0.00  std::_Function_base::_M_empty() const
  0.53      2.25     0.04  7091476     0.00     0.00  double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*)
  0.53      2.29     0.04  6189801     0.00     0.00  __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  0.53      2.33     0.04  5551531     0.00     0.00  std::vector<double, std::allocator<double> >::vector()
  0.53      2.37     0.04  3375200     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const
  0.53      2.40     0.04  3348331     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.53      2.44     0.04  1716866     0.00     0.00  void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.53      2.48     0.04  1706161     0.00     0.00  std::allocator<int>::allocator()
  0.53      2.52     0.04  1645149     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const
  0.53      2.56     0.04  1175071     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()
  0.53      2.60     0.04  1158811     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.53      2.65     0.04   549493     0.00     0.00  std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&)
  0.53      2.69     0.04   382030     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
  0.46      2.72     0.04 12378430     0.00     0.00  void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  0.46      2.75     0.04 10436871     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&)
  0.46      2.79     0.04  9297560     0.00     0.00  std::allocator<double>::~allocator()
  0.46      2.83     0.04  9009094     0.00     0.00  Math::Matrix::operator[](int) const
  0.46      2.86     0.04  7165318     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::~_Vector_base()
  0.46      2.90     0.04  7092191     0.00     0.00  double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*)
  0.46      2.93     0.04  6755659     0.00     0.00  std::allocator<std::packaged_task<void ()> >::~allocator()
  0.46      2.96     0.04  5633450     0.00     0.00  double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
  0.46      3.00     0.04  1724751     0.00     0.00  std::function<void ()>::operator()() const
  0.46      3.04     0.04  1535987     0.00     0.00  void std::condition_variable::wait<Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1})
  0.40      3.06     0.03 12773250     0.00     0.00  __gthread_active_p()
  0.40      3.10     0.03  9549935     0.00     0.00  std::vector<double, std::allocator<double> >::size() const
  0.40      3.12     0.03  9015715     0.00     0.00  std::vector<double, std::allocator<double> >::operator[](unsigned long) const
  0.40      3.15     0.03  8398530     0.00     0.00  std::allocator<int>::~allocator()
  0.40      3.19     0.03  7366779     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr()
  0.40      3.21     0.03  7151775     0.00     0.00  std::vector<double, std::allocator<double> >::~vector()
  0.40      3.25     0.03  7063746     0.00     0.00  std::vector<double, std::allocator<double> >::end() const
  0.40      3.27     0.03  6186170     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)
  0.40      3.31     0.03  5603723     0.00     0.00  std::unique_lock<std::mutex>::unlock()
  0.40      3.33     0.03  3992437     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr()
  0.40      3.37     0.03  3320731     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr()
  0.40      3.40     0.03  2911210     0.00     0.00  Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const
  0.40      3.42     0.03  2386598     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_deleter()
  0.40      3.46     0.03  1708371     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.40      3.48     0.03  1701323     0.00     0.00  std::once_flag::once_flag()
  0.40      3.52     0.03  1695640     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<void>*)
  0.40      3.54     0.03  1668431     0.00     0.00  std::once_flag::_Prepare_execution::~_Prepare_execution()
  0.40      3.58     0.03  1638007     0.00     0.00  std::__future_base::_Result<void>::_M_destroy()
  0.40      3.60     0.03  1618001     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.40      3.63     0.03  1600709     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const
  0.40      3.67     0.03  1177044     0.00     0.00  std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&)
  0.40      3.69     0.03  1175384     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
  0.40      3.73     0.03  1170609     0.00     0.00  void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.40      3.75     0.03  1161866     0.00     0.00  std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.40      3.79     0.03  1157883     0.00     0.00  std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.40      3.81     0.03  1154738     0.00     0.00  decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.40      3.85     0.03  1126787     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.40      3.88     0.03    99887     0.00     0.00  FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&)
  0.33      3.90     0.03 11511086     0.00     0.00  std::tuple_element<0ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
  0.33      3.92     0.03  6195440     0.00     0.00  std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long)
  0.33      3.95     0.03  5604932     0.00     0.00  __gthread_mutex_unlock(pthread_mutex_t*)
  0.33      3.98     0.03  5034204     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.33      4.00     0.03  3407164     0.00     0.00  std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.33      4.03     0.03  2026739     0.00     0.00  Math::Matrix::operator=(Math::Matrix const&)
  0.33      4.05     0.03  1698718     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&)
  0.33      4.08     0.03  1166786     0.00     0.00  std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
  0.33      4.10     0.03   577554     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
  0.26      4.12     0.02 14295698     0.00     0.00  std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&)
  0.26      4.14     0.02 14128896     0.00     0.00  __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&)
  0.26      4.16     0.02 12385191     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)
  0.26      4.18     0.02  7687065     0.00     0.00  std::_Function_base::~_Function_base()
  0.26      4.20     0.02  7385433     0.00     0.00  std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&)
  0.26      4.22     0.02  6521323     0.00     0.00  std::_Any_data::_M_access() const
  0.26      4.24     0.02  6133985     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator()
  0.26      4.26     0.02  5151404     0.00     0.00  std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&)
  0.26      4.28     0.02  4855539     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr()
  0.26      4.30     0.02  3599661     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_copy_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data const&)
  0.26      4.32     0.02  3261261     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.26      4.34     0.02  3171298     0.00     0.00  std::allocator<double>::allocator(std::allocator<double> const&)
  0.26      4.36     0.02  2881368     0.00     0.00  double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.26      4.38     0.02  2864677     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const
  0.26      4.40     0.02  2844969     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const
  0.26      4.42     0.02  2385212     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&)
  0.26      4.44     0.02  2293341     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
  0.26      4.46     0.02  1727985     0.00     0.00  std::function<void ()>::operator=(std::function<void ()>&&)
  0.26      4.48     0.02  1718734     0.00     0.00  std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
  0.26      4.50     0.02  1718563     0.00     0.00  __gthread_once(int*, void (*)())
  0.26      4.52     0.02  1711317     0.00     0.00  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const
  0.26      4.54     0.02  1708714     0.00     0.00  __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator()
  0.26      4.56     0.02  1705686     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.26      4.58     0.02  1702583     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end()
  0.26      4.60     0.02  1702561     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back()
  0.26      4.62     0.02  1701220     0.00     0.00  std::__future_base::_State_baseV2::_State_baseV2()
  0.26      4.64     0.02  1700342     0.00     0.00  std::atomic<unsigned int>::atomic(unsigned int)
  0.26      4.66     0.02  1700331     0.00     0.00  std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&)
  0.26      4.68     0.02  1697188     0.00     0.00  std::remove_reference<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
  0.26      4.70     0.02  1681583     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
  0.26      4.72     0.02  1639363     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function()
  0.26      4.74     0.02  1635174     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.26      4.76     0.02  1588993     0.00     0.00  std::__basic_future<void>::~__basic_future()
  0.26      4.78     0.02  1584486     0.00     0.00  std::packaged_task<void ()>::get_future()
  0.26      4.80     0.02  1577806     0.00     0.00  std::function<void ()>::function()
  0.26      4.82     0.02  1174419     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const
  0.26      4.84     0.02  1166184     0.00     0.00  std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&)
  0.26      4.86     0.02  1163862     0.00     0.00  decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.26      4.88     0.02  1152134     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.26      4.90     0.02  1140659     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.26      4.92     0.02  1139744     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.26      4.94     0.02  1138357     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.26      4.96     0.02   686263     0.00     0.00  std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.26      4.98     0.02   686256     0.00     0.00  std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>)
  0.26      5.00     0.02   637856     0.00     0.00  Math::Matrix::operator+=(Math::Matrix const&)
  0.26      5.02     0.02   559632     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::size() const
  0.26      5.04     0.02   559569     0.00     0.00  double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
  0.26      5.06     0.02   550754     0.00     0.00  void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.26      5.08     0.02   549150     0.00     0.00  std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})
  0.26      5.10     0.02   546333     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.26      5.12     0.02   536772     0.00     0.00  void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.26      5.14     0.02   393703     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() const
  0.26      5.16     0.02   299949     0.00     0.00  Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long)
  0.26      5.18     0.02   260247     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)
  0.26      5.20     0.02   194172     0.00     0.00  Math::Matrix::hProd(Math::Matrix, Math::Matrix const&)
  0.26      5.22     0.02   101080     0.00     0.00  void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.26      5.24     0.02                             std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.26      5.26     0.02                             std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::_FUN()
  0.20      5.28     0.01 21992229     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&)
  0.20      5.29     0.01 14211546     0.00     0.00  std::vector<double, std::allocator<double> >::operator[](unsigned long)
  0.20      5.30     0.01 14164397     0.00     0.00  double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  0.20      5.32     0.01  7147746     0.00     0.00  std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&)
  0.20      5.33     0.01  7061657     0.00     0.00  std::vector<double, std::allocator<double> >::begin() const
  0.20      5.35     0.01  5560921     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base()
  0.20      5.37     0.01  5425038     0.00     0.00  std::mutex* std::__addressof<std::mutex>(std::mutex&)
  0.20      5.38     0.01  5050189     0.00     0.00  __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_ptr()
  0.20      5.39     0.01  3286582     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.20      5.41     0.01  3175478     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.20      5.42     0.01  2385051     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&)
  0.20      5.44     0.01  2312872     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future()
  0.20      5.46     0.01  1735133     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop()
  0.20      5.47     0.01  1697403     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&)
  0.20      5.49     0.01  1644240     0.00     0.00  std::packaged_task<void ()>::~packaged_task()
  0.20      5.50     0.01  1639796     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::~_Sp_ebo_helper()
  0.20      5.51     0.01  1593605     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2> const&)
  0.20      5.53     0.01  1583888     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.20      5.54     0.01  1543003     0.00     0.00  std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.20      5.56     0.01  1443181     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const
  0.20      5.58     0.01  1438742     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)
  0.20      5.59     0.01  1167853     0.00     0.00  void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>)
  0.20      5.61     0.01  1166729     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
  0.20      5.62     0.01  1163219     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const
  0.20      5.63     0.01  1162959     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&)
  0.20      5.65     0.01  1160388     0.00     0.00  void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.20      5.67     0.01  1160281     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.20      5.68     0.01   559591     0.00     0.00  Math::ThreadPool::getPoolSize() const
  0.20      5.70     0.01   559555     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double>(double*, double*, double const&)
  0.20      5.71     0.01   559510     0.00     0.00  std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&)
  0.20      5.72     0.01   105306     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long)
  0.20      5.74     0.01                             _GLOBAL__sub_I__ZN10Activation7Sigmoid2fnEN4Math6MatrixE
  0.13      5.75     0.01 12671680     0.00     0.00  operator new(unsigned long, void*)
  0.13      5.76     0.01 11514948     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
  0.13      5.77     0.01 11499939     0.00     0.00  std::__future_base::_Result<void>*& std::__get_helper<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
  0.13      5.78     0.01  8355772     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data()
  0.13      5.79     0.01  8157253     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&)
  0.13      5.80     0.01  7371176     0.00     0.00  std::__future_base::_Result_base*& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.13      5.81     0.01  6807381     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.13      5.82     0.01  6698503     0.00     0.00  std::remove_reference<std::__future_base::_Result_base*&>::type&& std::move<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&)
  0.13      5.83     0.01  6198286     0.00     0.00  __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long)
  0.13      5.84     0.01  6191998     0.00     0.00  __gnu_cxx::new_allocator<double>::_M_max_size() const
  0.13      5.85     0.01  5637526     0.00     0.00  double* std::__niter_wrap<double*>(double* const&, double*)
  0.13      5.86     0.01  5626333     0.00     0.00  double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
  0.13      5.87     0.01  5623370     0.00     0.00  double* std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
  0.13      5.88     0.01  5621186     0.00     0.00  double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&)
  0.13      5.89     0.01  5561687     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()
  0.13      5.90     0.01  5444392     0.00     0.00  std::unique_lock<std::mutex>::lock()
  0.13      5.91     0.01  5424194     0.00     0.00  std::mutex::lock()
  0.13      5.92     0.01  5191221     0.00     0.00  std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  0.13      5.93     0.01  5154885     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&)
  0.13      5.94     0.01  5033794     0.00     0.00  std::remove_reference<std::__future_base::_Result_base::_Deleter&>::type&& std::move<std::__future_base::_Result_base::_Deleter&>(std::__future_base::_Result_base::_Deleter&)
  0.13      5.95     0.01  5006930     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter()
  0.13      5.96     0.01  4993293     0.00     0.00  std::tuple_element<1ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.13      5.97     0.01  4879967     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.13      5.98     0.01  3837245     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&)
  0.13      5.99     0.01  3577640     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long)
  0.13      6.00     0.01  3525659     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&)
  0.13      6.01     0.01  3438702     0.00     0.00  void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
  0.13      6.02     0.01  3426395     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.13      6.03     0.01  3423469     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const
  0.13      6.04     0.01  3400513     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.13      6.05     0.01  3299481     0.00     0.00  std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.13      6.06     0.01  3171980     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)
  0.13      6.07     0.01  3097361     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const
  0.13      6.08     0.01  3096185     0.00     0.00  std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.13      6.09     0.01  2868174     0.00     0.00  std::operator==(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.13      6.10     0.01  2385053     0.00     0.00  std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&)
  0.13      6.11     0.01  2384251     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release()
  0.13      6.12     0.01  2383471     0.00     0.00  std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&)
  0.13      6.13     0.01  2379984     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&)
  0.13      6.14     0.01  2374057     0.00     0.00  std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&)
  0.13      6.15     0.01  2311911     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.13      6.16     0.01  2298292     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.13      6.17     0.01  2295267     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&)
  0.13      6.18     0.01  1734501     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front()
  0.13      6.19     0.01  1733312     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
  0.13      6.20     0.01  1727164     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
  0.13      6.21     0.01  1725899     0.00     0.00  std::function<void ()>::swap(std::function<void ()>&)
  0.13      6.22     0.01  1715014     0.00     0.00  bool* std::__addressof<bool>(bool&)
  0.13      6.23     0.01  1712821     0.00     0.00  std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator()() const
  0.13      6.24     0.01  1712625     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&)
  0.13      6.25     0.01  1712564     0.00     0.00  std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
  0.13      6.26     0.01  1712243     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const
  0.13      6.27     0.01  1710287     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >)
  0.13      6.28     0.01  1708662     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.13      6.29     0.01  1705635     0.00     0.00  std::function<void (int, int)>::operator()(int, int) const
  0.13      6.30     0.01  1704791     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&)
  0.13      6.31     0.01  1704006     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>()
  0.13      6.32     0.01  1702008     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl()
  0.13      6.33     0.01  1701575     0.00     0.00  std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int)
  0.13      6.34     0.01  1699957     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.13      6.35     0.01  1699843     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*)
  0.13      6.36     0.01  1699511     0.00     0.00  std::atomic_flag::atomic_flag(bool)
  0.13      6.37     0.01  1698289     0.00     0.00  std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>()
  0.13      6.38     0.01  1686676     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base*> >, std::is_move_constructible<std::__future_base::_Result_base*>, std::is_move_assignable<std::__future_base::_Result_base*> >::value, void>::type std::swap<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&, std::__future_base::_Result_base*&)
  0.13      6.39     0.01  1651097     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr()
  0.13      6.40     0.01  1650548     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const
  0.13      6.41     0.01  1647923     0.00     0.00  void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*)
  0.13      6.42     0.01  1643196     0.00     0.00  std::__future_base::_Result<void>::~_Result()
  0.13      6.43     0.01  1642249     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.13      6.44     0.01  1641489     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.13      6.45     0.01  1638241     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper()
  0.13      6.46     0.01  1633713     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.13      6.47     0.01  1631442     0.00     0.00  std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.13      6.48     0.01  1610650     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.13      6.49     0.01  1582031     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.13      6.50     0.01  1581313     0.00     0.00  std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.13      6.51     0.01  1549664     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>::type&)
  0.13      6.52     0.01  1536439     0.00     0.00  void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.13      6.53     0.01  1500824     0.00     0.00  std::vector<double, std::allocator<double> >::begin()
  0.13      6.54     0.01  1470787     0.00     0.00  std::vector<double, std::allocator<double> >::end()
  0.13      6.55     0.01  1443286     0.00     0.00  void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::allocator<double>&)
  0.13      6.56     0.01  1441894     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.13      6.57     0.01  1438466     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.13      6.58     0.01  1398295     0.00     0.00  void std::destroy_at<Math::Matrix>(Math::Matrix*)
  0.13      6.59     0.01  1176023     0.00     0.00  void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&)
  0.13      6.60     0.01  1173132     0.00     0.00  bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
  0.13      6.61     0.01  1169777     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::future({lambda()#1}&&)
  0.13      6.62     0.01  1167574     0.00     0.00  std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*)
  0.13      6.63     0.01  1166561     0.00     0.00  std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.13      6.64     0.01  1165419     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&)
  0.13      6.65     0.01  1162488     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.66     0.01  1159782     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.67     0.01  1158693     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.68     0.01  1157361     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.69     0.01  1157194     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.70     0.01  1156185     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.13      6.71     0.01  1155545     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.72     0.01  1153883     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.13      6.73     0.01  1152409     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.13      6.74     0.01  1149605     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.13      6.75     0.01  1146657     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.13      6.76     0.01  1143754     0.00     0.00  std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.13      6.77     0.01  1141199     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.13      6.78     0.01  1141128     0.00     0.00  std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
  0.13      6.79     0.01  1133185     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.13      6.80     0.01   774828     0.00     0.00  double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&)
  0.13      6.81     0.01   773503     0.00     0.00  std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&)
  0.13      6.82     0.01   699191     0.00     0.00  __gnu_cxx::new_allocator<Math::Matrix>::deallocate(Math::Matrix*, unsigned long)
  0.13      6.83     0.01   699185     0.00     0.00  std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long)
  0.13      6.84     0.01   692030     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.13      6.85     0.01   686247     0.00     0.00  std::__future_base::_Result_base* const& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.13      6.86     0.01   599950     0.00     0.00  std::remove_reference<std::vector<double, std::allocator<double> >&>::type&& std::move<std::vector<double, std::allocator<double> >&>(std::vector<double, std::allocator<double> >&)
  0.13      6.87     0.01   599932     0.00     0.00  void std::_Construct<Math::Matrix>(Math::Matrix*)
  0.13      6.88     0.01   593613     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&)
  0.13      6.89     0.01   576469     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() const
  0.13      6.90     0.01   576329     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&)
  0.13      6.91     0.01   564087     0.00     0.00  std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&)
  0.13      6.92     0.01   559707     0.00     0.00  int const* std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>(int const*, int const*, __gnu_cxx::__ops::_Iter_less_iter)
  0.13      6.93     0.01   559565     0.00     0.00  std::iterator_traits<double*>::iterator_category std::__iterator_category<double*>(double* const&)
  0.13      6.94     0.01   550372     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.13      6.95     0.01   550283     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.13      6.96     0.01   550240     0.00     0.00  std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.13      6.97     0.01   549215     0.00     0.00  void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&)
  0.13      6.98     0.01   549096     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&)
  0.13      6.99     0.01   548925     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const
  0.13      7.00     0.01   547789     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>)
  0.13      7.01     0.01   547056     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.13      7.02     0.01   546966     0.00     0.00  void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.13      7.03     0.01   546872     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
  0.13      7.04     0.01   546064     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
  0.13      7.05     0.01   545330     0.00     0.00  std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*)
  0.13      7.06     0.01   535306     0.00     0.00  std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.13      7.07     0.01   531673     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::future({lambda()#1}&&)
  0.13      7.08     0.01   493327     0.00     0.00  std::function<void (int, int)>::~function()
  0.13      7.09     0.01   487124     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.13      7.10     0.01   449189     0.00     0.00  void std::condition_variable::wait<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}>(std::unique_lock<std::mutex>&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3})
  0.13      7.11     0.01   382042     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() const
  0.13      7.12     0.01   258728     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>()
  0.13      7.13     0.01   227749     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.13      7.14     0.01   199436     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.13      7.15     0.01   166650     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.13      7.16     0.01    99880     0.00     0.00  std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base()
  0.13      7.17     0.01    92596     0.00     0.00  std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.13      7.18     0.01    30232     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const
  0.13      7.19     0.01      100     0.00     0.04  FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double)
  0.13      7.20     0.01        3     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.13      7.21     0.01        1     0.01     0.01  void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&)
  0.13      7.22     0.01                             bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> const&)
  0.13      7.23     0.01                             std::function<void ()>** std::__copy_move_backward_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.13      7.24     0.01                             frame_dummy
  0.07      7.25     0.01 12385172     0.00     0.00  void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)
  0.07      7.25     0.01  7143205     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()
  0.07      7.25     0.01  5482947     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.07      7.26     0.01  5448160     0.00     0.00  __gthread_mutex_lock(pthread_mutex_t*)
  0.07      7.26     0.01  5199985     0.00     0.00  std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
  0.07      7.27     0.01  5196530     0.00     0.00  std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.07      7.28     0.01  5115127     0.00     0.00  std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&)
  0.07      7.28     0.01  3414022     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.07      7.29     0.01  3343559     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&)
  0.07      7.29     0.01  3129693     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const
  0.07      7.29     0.01  2384341     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release()
  0.07      7.30     0.01  1722945     0.00     0.00  std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const
  0.07      7.30     0.01  1706254     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.07      7.31     0.01  1703820     0.00     0.00  std::allocator<std::packaged_task<void ()> >::allocator()
  0.07      7.32     0.01  1703137     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.07      7.32     0.01  1700264     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>()
  0.07      7.33     0.01  1699637     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--()
  0.07      7.33     0.01  1699429     0.00     0.00  std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl()
  0.07      7.33     0.01  1680003     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base::_Deleter> >, std::is_move_constructible<std::__future_base::_Result_base::_Deleter>, std::is_move_assignable<std::__future_base::_Result_base::_Deleter> >::value, void>::type std::swap<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&, std::__future_base::_Result_base::_Deleter&)
  0.07      7.34     0.01  1647684     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const
  0.07      7.34     0.01  1643897     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter()
  0.07      7.35     0.01  1641787     0.00     0.00  void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*)
  0.07      7.36     0.01  1580357     0.00     0.00  std::future<void>::~future()
  0.07      7.36     0.01  1408266     0.00     0.00  Math::Matrix::operator[](int)
  0.07      7.37     0.01  1178668     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&)
  0.07      7.37     0.01  1176926     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
  0.07      7.38     0.01  1171336     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
  0.07      7.38     0.01  1166415     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
  0.07      7.38     0.01  1159412     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.07      7.39     0.01  1152096     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
  0.07      7.39     0.01  1041067     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.07      7.40     0.01  1008979     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.07      7.41     0.01  1008023     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>()
  0.07      7.41     0.01   787514     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix const* const&)
  0.07      7.42     0.01   686260     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.07      7.42     0.01   550698     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.07      7.42     0.01   549245     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&)
  0.07      7.43     0.01   547215     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()
  0.07      7.43     0.01   543686     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const
  0.07      7.44     0.01   543585     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::~shared_ptr()
  0.07      7.45     0.01   393767     0.00     0.00  Math::Matrix* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*)
  0.07      7.45     0.01   299959     0.00     0.00  std::allocator_traits<std::allocator<Math::Matrix> >::max_size(std::allocator<Math::Matrix> const&)
  0.07      7.46     0.01   260219     0.00     0.00  std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.07      7.46     0.01   256326     0.00     0.00  std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&)
  0.07      7.46     0.01   109459     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*)
  0.07      7.47     0.01   105068     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const
  0.07      7.47     0.01    99778     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)
  0.07      7.48     0.01    93008     0.00     0.00  std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.07      7.49     0.01    91645     0.00     0.00  bool __gnu_cxx::operator==<double*, double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)
  0.07      7.49     0.01    61099     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const
  0.07      7.50     0.01    50016     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.07      7.50     0.01    26321     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool)
  0.07      7.50     0.01      202     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix> const* const&)
  0.07      7.51     0.01      200     0.00     0.00  std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const
  0.07      7.51     0.01      100     0.00     0.00  std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >)
  0.07      7.52     0.01        2     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const
  0.07      7.53     0.01        1     0.01     0.02  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&)
  0.07      7.53     0.01                             Activation::LeakyRelu::fnDerv(Math::Matrix)
  0.07      7.54     0.01                             std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> const&)
  0.07      7.54     0.01                             double* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<double const*, double*>(double const*, double const*, double*)
  0.07      7.54     0.01                             void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&>(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
  0.07      7.55     0.01                             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.07      7.55     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned long)
  0.07      7.56     0.01                             double* std::copy<double*, double*>(double*, double*, double*)
  0.00      7.56     0.00 14168029     0.00     0.00  __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base() const
  0.00      7.56     0.00 14146436     0.00     0.00  __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  0.00      7.56     0.00 13672235     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      7.56     0.00 11927243     0.00     0.00  std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&)
  0.00      7.56     0.00 11516179     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result<void>*, false>&)
  0.00      7.56     0.00  8646925     0.00     0.00  std::_Any_data::_M_access()
  0.00      7.56     0.00  7726071     0.00     0.00  std::_Function_base::_Function_base()
  0.00      7.56     0.00  7400096     0.00     0.00  std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>&)
  0.00      7.56     0.00  7397073     0.00     0.00  std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  7380871     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false>&)
  0.00      7.56     0.00  7379425     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  7366301     0.00     0.00  std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  6814124     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
  0.00      7.56     0.00  6618956     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_propagate_on_copy_assign()
  0.00      7.56     0.00  6129898     0.00     0.00  std::allocator<double>::allocator()
  0.00      7.56     0.00  5636922     0.00     0.00  double* std::__niter_base<double*>(double*)
  0.00      7.56     0.00  5620890     0.00     0.00  double* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
  0.00      7.56     0.00  5595315     0.00     0.00  std::mutex::unlock()
  0.00      7.56     0.00  5144272     0.00     0.00  bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&)
  0.00      7.56     0.00  5121650     0.00     0.00  __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<void ()> > const&)
  0.00      7.56     0.00  5057570     0.00     0.00  __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_addr()
  0.00      7.56     0.00  5015028     0.00     0.00  Math::Matrix::~Matrix()
  0.00      7.56     0.00  4414338     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)
  0.00      7.56     0.00  3462322     0.00     0.00  __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_addr()
  0.00      7.56     0.00  3458918     0.00     0.00  __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_ptr()
  0.00      7.56     0.00  3450865     0.00     0.00  std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
  0.00      7.56     0.00  3448951     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00      7.56     0.00  3411759     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00      7.56     0.00  3410044     0.00     0.00  std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base()
  0.00      7.56     0.00  3344406     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00      7.56     0.00  3327922     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      7.56     0.00  3327561     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*)
  0.00      7.56     0.00  3299112     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00      7.56     0.00  3276753     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>&)
  0.00      7.56     0.00  3270631     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&)
  0.00      7.56     0.00  3175631     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr()
  0.00      7.56     0.00  3095516     0.00     0.00  std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00      7.56     0.00  2790156     0.00     0.00  Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&)
  0.00      7.56     0.00  2386523     0.00     0.00  std::tuple_element<1ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  2383583     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&)
  0.00      7.56     0.00  2383347     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::get_deleter()
  0.00      7.56     0.00  2382249     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&)
  0.00      7.56     0.00  2381037     0.00     0.00  std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&)
  0.00      7.56     0.00  2380933     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const
  0.00      7.56     0.00  2352727     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>::type&)
  0.00      7.56     0.00  2330923     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&)
  0.00      7.56     0.00  2326409     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&)
  0.00      7.56     0.00  2304955     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>()
  0.00      7.56     0.00  2294960     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00      7.56     0.00  2290016     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      7.56     0.00  2277962     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00      7.56     0.00  1734994     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator()
  0.00      7.56     0.00  1731035     0.00     0.00  void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*)
  0.00      7.56     0.00  1730916     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.00      7.56     0.00  1729869     0.00     0.00  void std::destroy_at<std::function<void ()> >(std::function<void ()>*)
  0.00      7.56     0.00  1724464     0.00     0.00  void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<void ()> >(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&)
  0.00      7.56     0.00  1722890     0.00     0.00  std::function<void ()>::operator bool() const
  0.00      7.56     0.00  1720645     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  1720633     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin()
  0.00      7.56     0.00  1720426     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&)
  0.00      7.56     0.00  1718796     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front()
  0.00      7.56     0.00  1718001     0.00     0.00  std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator void (*)()() const
  0.00      7.56     0.00  1716630     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front()
  0.00      7.56     0.00  1716218     0.00     0.00  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
  0.00      7.56     0.00  1715204     0.00     0.00  void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.00      7.56     0.00  1714511     0.00     0.00  std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.00      7.56     0.00  1708700     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_Head_base()
  0.00      7.56     0.00  1707410     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00      7.56     0.00  1704211     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<void ()> > const&)
  0.00      7.56     0.00  1703960     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base()
  0.00      7.56     0.00  1703885     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.00      7.56     0.00  1703542     0.00     0.00  std::enable_if<!std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<void ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<void ()>, std::packaged_task<void ()> >(std::packaged_task<void ()>*)
  0.00      7.56     0.00  1702664     0.00     0.00  std::remove_reference<std::shared_ptr<std::packaged_task<void ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<void ()> >&>(std::shared_ptr<std::packaged_task<void ()> >&)
  0.00      7.56     0.00  1701726     0.00     0.00  std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      7.56     0.00  1701144     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&)
  0.00      7.56     0.00  1701114     0.00     0.00  std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&&)
  0.00      7.56     0.00  1701058     0.00     0.00  std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      7.56     0.00  1700577     0.00     0.00  std::__atomic_base<unsigned int>::__atomic_base(unsigned int)
  0.00      7.56     0.00  1700338     0.00     0.00  std::atomic_flag::_S_init(bool)
  0.00      7.56     0.00  1698315     0.00     0.00  std::__future_base::_Result<void>::_Result()
  0.00      7.56     0.00  1698189     0.00     0.00  std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl(std::__future_base::_Result<void>*)
  0.00      7.56     0.00  1697445     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&)
  0.00      7.56     0.00  1697145     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*)
  0.00      7.56     0.00  1695735     0.00     0.00  std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>&&)
  0.00      7.56     0.00  1695672     0.00     0.00  std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      7.56     0.00  1694589     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&)
  0.00      7.56     0.00  1693355     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&)
  0.00      7.56     0.00  1692170     0.00     0.00  std::allocator<Math::Matrix>::~allocator()
  0.00      7.56     0.00  1685826     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
  0.00      7.56     0.00  1649552     0.00     0.00  std::__future_base::_Result<void>::~_Result()
  0.00      7.56     0.00  1649445     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::unique() const
  0.00      7.56     0.00  1644081     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      7.56     0.00  1642678     0.00     0.00  std::__future_base::_Task_state_base<void ()>::~_Task_state_base()
  0.00      7.56     0.00  1639180     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&)
  0.00      7.56     0.00  1630723     0.00     0.00  std::__future_base::_State_baseV2::~_State_baseV2()
  0.00      7.56     0.00  1591020     0.00     0.00  __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_ptr()
  0.00      7.56     0.00  1591013     0.00     0.00  __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_addr()
  0.00      7.56     0.00  1587219     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      7.56     0.00  1585582     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)
  0.00      7.56     0.00  1581679     0.00     0.00  std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00      7.56     0.00  1578449     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&)
  0.00      7.56     0.00  1550811     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const
  0.00      7.56     0.00  1538971     0.00     0.00  std::future<void>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.00      7.56     0.00  1501176     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
  0.00      7.56     0.00  1447848     0.00     0.00  void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.00      7.56     0.00  1443141     0.00     0.00  void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.00      7.56     0.00  1398295     0.00     0.00  void std::_Destroy<Math::Matrix>(Math::Matrix*)
  0.00      7.56     0.00  1392409     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator()
  0.00      7.56     0.00  1391236     0.00     0.00  Math::Matrix::getCols() const
  0.00      7.56     0.00  1385657     0.00     0.00  __gnu_cxx::new_allocator<Math::Matrix>::new_allocator(__gnu_cxx::new_allocator<Math::Matrix> const&)
  0.00      7.56     0.00  1385247     0.00     0.00  std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00  1368646     0.00     0.00  std::function<double (double)>::operator()(double) const
  0.00      7.56     0.00  1199882     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&)
  0.00      7.56     0.00  1193876     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>::type&)
  0.00      7.56     0.00  1192189     0.00     0.00  Math::Matrix::getRows() const
  0.00      7.56     0.00  1190102     0.00     0.00  bool __gnu_cxx::operator==<Math::Matrix const*, Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&)
  0.00      7.56     0.00  1177454     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() const
  0.00      7.56     0.00  1177139     0.00     0.00  void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
  0.00      7.56     0.00  1175118     0.00     0.00  void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>)
  0.00      7.56     0.00  1174841     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
  0.00      7.56     0.00  1170048     0.00     0.00  std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&)
  0.00      7.56     0.00  1167567     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      7.56     0.00  1166044     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const
  0.00      7.56     0.00  1165780     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      7.56     0.00  1165226     0.00     0.00  void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.00      7.56     0.00  1165012     0.00     0.00  bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1} const&)
  0.00      7.56     0.00  1163955     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00      7.56     0.00  1163893     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::~shared_ptr()
  0.00      7.56     0.00  1162580     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const
  0.00      7.56     0.00  1161975     0.00     0.00  void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
  0.00      7.56     0.00  1161290     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
  0.00      7.56     0.00  1157284     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      7.56     0.00  1156571     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>)
  0.00      7.56     0.00  1156242     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.00      7.56     0.00  1154893     0.00     0.00  decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
  0.00      7.56     0.00  1154115     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
  0.00      7.56     0.00  1152127     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00      7.56     0.00  1150542     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
  0.00      7.56     0.00  1150238     0.00     0.00  decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.00      7.56     0.00  1149505     0.00     0.00  std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00  1148769     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00      7.56     0.00  1148469     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      7.56     0.00  1144997     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >()
  0.00      7.56     0.00  1142485     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00      7.56     0.00  1140518     0.00     0.00  void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*)
  0.00      7.56     0.00  1139515     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.00      7.56     0.00  1138498     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::~_Impl()
  0.00      7.56     0.00  1138110     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state()
  0.00      7.56     0.00  1137840     0.00     0.00  void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*)
  0.00      7.56     0.00  1119344     0.00     0.00  std::initializer_list<int>::begin() const
  0.00      7.56     0.00  1098392     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>::type&)
  0.00      7.56     0.00  1089054     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&)
  0.00      7.56     0.00  1088605     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&)
  0.00      7.56     0.00  1040779     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&)
  0.00      7.56     0.00  1039520     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
  0.00      7.56     0.00  1038526     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      7.56     0.00  1037019     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00      7.56     0.00  1020775     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const
  0.00      7.56     0.00  1008520     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future()
  0.00      7.56     0.00   982841     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00      7.56     0.00   981503     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long)
  0.00      7.56     0.00   981313     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&)
  0.00      7.56     0.00   969352     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      7.56     0.00   850683     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&)
  0.00      7.56     0.00   796189     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator++()
  0.00      7.56     0.00   792181     0.00     0.00  Math::Matrix const& std::forward<Math::Matrix const&>(std::remove_reference<Math::Matrix const&>::type&)
  0.00      7.56     0.00   792030     0.00     0.00  void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&)
  0.00      7.56     0.00   791843     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const
  0.00      7.56     0.00   780704     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&)
  0.00      7.56     0.00   775295     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}::operator()(double) const
  0.00      7.56     0.00   774374     0.00     0.00  std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&)
  0.00      7.56     0.00   774171     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&)
  0.00      7.56     0.00   773836     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() const
  0.00      7.56     0.00   773652     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   769366     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&)
  0.00      7.56     0.00   763599     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
  0.00      7.56     0.00   750237     0.00     0.00  void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   750112     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&)
  0.00      7.56     0.00   749971     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() const
  0.00      7.56     0.00   749560     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   749272     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   699181     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long)
  0.00      7.56     0.00   699171     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base()
  0.00      7.56     0.00   699150     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::~_Vector_impl()
  0.00      7.56     0.00   699123     0.00     0.00  void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*)
  0.00      7.56     0.00   699115     0.00     0.00  void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&)
  0.00      7.56     0.00   699108     0.00     0.00  void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*)
  0.00      7.56     0.00   699099     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector()
  0.00      7.56     0.00   693314     0.00     0.00  __gnu_cxx::new_allocator<Math::Matrix>::_M_max_size() const
  0.00      7.56     0.00   693272     0.00     0.00  std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long)
  0.00      7.56     0.00   693191     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl_data::_Vector_impl_data()
  0.00      7.56     0.00   693176     0.00     0.00  __gnu_cxx::new_allocator<Math::Matrix>::allocate(unsigned long, void const*)
  0.00      7.56     0.00   693150     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long)
  0.00      7.56     0.00   692988     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_create_storage(unsigned long)
  0.00      7.56     0.00   692583     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   692568     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   686276     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const
  0.00      7.56     0.00   686276     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const
  0.00      7.56     0.00   686272     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const
  0.00      7.56     0.00   686256     0.00     0.00  std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false> const&)
  0.00      7.56     0.00   604528     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&)
  0.00      7.56     0.00   599964     0.00     0.00  void std::__alloc_on_move<std::allocator<double> >(std::allocator<double>&, std::allocator<double>&)
  0.00      7.56     0.00   599958     0.00     0.00  std::remove_reference<std::allocator<double>&>::type&& std::move<std::allocator<double>&>(std::allocator<double>&)
  0.00      7.56     0.00   599953     0.00     0.00  std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   599951     0.00     0.00  std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&)
  0.00      7.56     0.00   599939     0.00     0.00  Math::Matrix::Matrix()
  0.00      7.56     0.00   599937     0.00     0.00  std::vector<double, std::allocator<double> >::vector(std::allocator<double> const&)
  0.00      7.56     0.00   599936     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::get_allocator() const
  0.00      7.56     0.00   599707     0.00     0.00  std::remove_reference<Math::Matrix&>::type&& std::move<Math::Matrix&>(Math::Matrix&)
  0.00      7.56     0.00   598858     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&)
  0.00      7.56     0.00   597157     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}::operator()(double) const
  0.00      7.56     0.00   596959     0.00     0.00  double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&)
  0.00      7.56     0.00   596752     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&)
  0.00      7.56     0.00   596751     0.00     0.00  std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&)
  0.00      7.56     0.00   596555     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() const
  0.00      7.56     0.00   596477     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   596335     0.00     0.00  std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&)
  0.00      7.56     0.00   591003     0.00     0.00  std::__atomic_base<int>::operator int() const
  0.00      7.56     0.00   590242     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      7.56     0.00   585072     0.00     0.00  std::operator&(std::memory_order, std::__memory_order_modifier)
  0.00      7.56     0.00   576886     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}::operator()() const
  0.00      7.56     0.00   576619     0.00     0.00  void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   576010     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   575736     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   564077     0.00     0.00  std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)
  0.00      7.56     0.00   564050     0.00     0.00  std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&)
  0.00      7.56     0.00   559689     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int const*, int const*>(int const*, int const*) const
  0.00      7.56     0.00   559688     0.00     0.00  int const& std::max<int>(int const&, int const&)
  0.00      7.56     0.00   559686     0.00     0.00  int const* std::min_element<int const*>(int const*, int const*)
  0.00      7.56     0.00   559672     0.00     0.00  std::initializer_list<int>::size() const
  0.00      7.56     0.00   559644     0.00     0.00  std::initializer_list<int>::end() const
  0.00      7.56     0.00   559624     0.00     0.00  int std::min<int>(std::initializer_list<int>)
  0.00      7.56     0.00   559595     0.00     0.00  double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      7.56     0.00   559588     0.00     0.00  void std::_Construct<double>(double*)
  0.00      7.56     0.00   559585     0.00     0.00  double* std::__addressof<double>(double&)
  0.00      7.56     0.00   559578     0.00     0.00  double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
  0.00      7.56     0.00   559567     0.00     0.00  double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long)
  0.00      7.56     0.00   559567     0.00     0.00  std::__size_to_integer(unsigned long)
  0.00      7.56     0.00   559555     0.00     0.00  double* std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag)
  0.00      7.56     0.00   559535     0.00     0.00  void std::__fill_a<double*, double>(double*, double*, double const&)
  0.00      7.56     0.00   559527     0.00     0.00  std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long)
  0.00      7.56     0.00   550728     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   550684     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.00      7.56     0.00   550606     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.00      7.56     0.00   550603     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   550516     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   550319     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   550227     0.00     0.00  decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.00      7.56     0.00   550158     0.00     0.00  std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
  0.00      7.56     0.00   550068     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      7.56     0.00   549736     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   549482     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long)
  0.00      7.56     0.00   549322     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00      7.56     0.00   549310     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const
  0.00      7.56     0.00   549252     0.00     0.00  std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
  0.00      7.56     0.00   548935     0.00     0.00  Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() const
  0.00      7.56     0.00   548071     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
  0.00      7.56     0.00   547844     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00      7.56     0.00   547315     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
  0.00      7.56     0.00   546905     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   546875     0.00     0.00  void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
  0.00      7.56     0.00   546521     0.00     0.00  decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
  0.00      7.56     0.00   546310     0.00     0.00  void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   545801     0.00     0.00  bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
  0.00      7.56     0.00   545667     0.00     0.00  std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&)
  0.00      7.56     0.00   545655     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00      7.56     0.00   545114     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      7.56     0.00   545063     0.00     0.00  std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
  0.00      7.56     0.00   544951     0.00     0.00  Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const
  0.00      7.56     0.00   544872     0.00     0.00  std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
  0.00      7.56     0.00   544753     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
  0.00      7.56     0.00   544614     0.00     0.00  std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&)
  0.00      7.56     0.00   544587     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const
  0.00      7.56     0.00   544563     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&)
  0.00      7.56     0.00   544295     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   544173     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const
  0.00      7.56     0.00   544039     0.00     0.00  void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
  0.00      7.56     0.00   543969     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      7.56     0.00   543588     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
  0.00      7.56     0.00   535025     0.00     0.00  void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>)
  0.00      7.56     0.00   534302     0.00     0.00  void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.00      7.56     0.00   533521     0.00     0.00  decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.00      7.56     0.00   533454     0.00     0.00  bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1} const&)
  0.00      7.56     0.00   533015     0.00     0.00  std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.00      7.56     0.00   527365     0.00     0.00  decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
  0.00      7.56     0.00   500477     0.00     0.00  void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*)
  0.00      7.56     0.00   499999     0.00     0.00  std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   499812     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state()
  0.00      7.56     0.00   499296     0.00     0.00  std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::~_Impl()
  0.00      7.56     0.00   498433     0.00     0.00  void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*)
  0.00      7.56     0.00   492630     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      7.56     0.00   491178     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00      7.56     0.00   489396     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long)
  0.00      7.56     0.00   489383     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00      7.56     0.00   489266     0.00     0.00  std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >()
  0.00      7.56     0.00   487354     0.00     0.00  Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>()
  0.00      7.56     0.00   485291     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   485213     0.00     0.00  std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   482815     0.00     0.00  std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   481650     0.00     0.00  std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      7.56     0.00   476174     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size()
  0.00      7.56     0.00   474107     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   469081     0.00     0.00  std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      7.56     0.00   458327     0.00     0.00  std::function<double (double)>::~function()
  0.00      7.56     0.00   454544     0.00     0.00  Math::Matrix::applyFnHere(std::function<double (double)>)
  0.00      7.56     0.00   421686     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_select_on_copy(std::allocator<double> const&)
  0.00      7.56     0.00   421420     0.00     0.00  std::allocator_traits<std::allocator<double> >::select_on_container_copy_construction(std::allocator<double> const&)
  0.00      7.56     0.00   420726     0.00     0.00  std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&)
  0.00      7.56     0.00   420488     0.00     0.00  Math::Matrix::getVals() const
  0.00      7.56     0.00   393862     0.00     0.00  Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*)
  0.00      7.56     0.00   393813     0.00     0.00  Math::Matrix* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, std::allocator<Math::Matrix>&)
  0.00      7.56     0.00   393786     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() const
  0.00      7.56     0.00   392757     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Math::Matrix>, Math::Matrix>::_S_select_on_copy(std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   392478     0.00     0.00  std::allocator_traits<std::allocator<Math::Matrix> >::select_on_container_copy_construction(std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   392340     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() const
  0.00      7.56     0.00   392285     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&)
  0.00      7.56     0.00   382140     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&)
  0.00      7.56     0.00   381767     0.00     0.00  std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   381617     0.00     0.00  void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
  0.00      7.56     0.00   381552     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&)
  0.00      7.56     0.00   371557     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**)
  0.00      7.56     0.00   369402     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>()
  0.00      7.56     0.00   299959     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   299952     0.00     0.00  Math::Matrix* std::__uninitialized_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long)
  0.00      7.56     0.00   299950     0.00     0.00  Math::Matrix* std::__uninitialized_default_n_a<Math::Matrix*, unsigned long, Math::Matrix>(Math::Matrix*, unsigned long, std::allocator<Math::Matrix>&)
  0.00      7.56     0.00   299949     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long)
  0.00      7.56     0.00   299945     0.00     0.00  __gnu_cxx::new_allocator<Math::Matrix>::new_allocator()
  0.00      7.56     0.00   299942     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   299938     0.00     0.00  std::allocator<Math::Matrix>::allocator()
  0.00      7.56     0.00   299934     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&)
  0.00      7.56     0.00   299283     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&)
  0.00      7.56     0.00   260453     0.00     0.00  Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&)
  0.00      7.56     0.00   260238     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>)
  0.00      7.56     0.00   260237     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.00      7.56     0.00   260229     0.00     0.00  bool std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1} const&)
  0.00      7.56     0.00   258879     0.00     0.00  std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   258802     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   258770     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   256562     0.00     0.00  void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&)
  0.00      7.56     0.00   256513     0.00     0.00  Activation::Sigmoid::fn(Math::Matrix)
  0.00      7.56     0.00   256497     0.00     0.00  void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   256209     0.00     0.00  bool std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&)
  0.00      7.56     0.00   241472     0.00     0.00  Math::operator+(Math::Matrix, Math::Matrix const&)
  0.00      7.56     0.00   230136     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false>&)
  0.00      7.56     0.00   230133     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00   230094     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false>&)
  0.00      7.56     0.00   230093     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&)
  0.00      7.56     0.00   225064     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   223515     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      7.56     0.00   205094     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&)
  0.00      7.56     0.00   202200     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const
  0.00      7.56     0.00   200388     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const
  0.00      7.56     0.00   199983     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::base() const
  0.00      7.56     0.00   199900     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&)
  0.00      7.56     0.00   199800     0.00     0.00  unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&)
  0.00      7.56     0.00   199633     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>)
  0.00      7.56     0.00   199622     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.00      7.56     0.00   199585     0.00     0.00  bool std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1} const&)
  0.00      7.56     0.00   199576     0.00     0.00  std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.00      7.56     0.00   199458     0.00     0.00  std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   199440     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>()
  0.00      7.56     0.00   199439     0.00     0.00  std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   199362     0.00     0.00  Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)
  0.00      7.56     0.00   197955     0.00     0.00  void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>)
  0.00      7.56     0.00   197845     0.00     0.00  void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&)
  0.00      7.56     0.00   197622     0.00     0.00  bool std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&)
  0.00      7.56     0.00   197586     0.00     0.00  Activation::Sigmoid::fnDerv(Math::Matrix)
  0.00      7.56     0.00   197575     0.00     0.00  std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&)
  0.00      7.56     0.00   192324     0.00     0.00  Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>()
  0.00      7.56     0.00   170824     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   167299     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00   115196     0.00     0.00  Math::Matrix::operator-=(Math::Matrix const&)
  0.00      7.56     0.00   114796     0.00     0.00  Math::operator-(Math::Matrix, Math::Matrix const&)
  0.00      7.56     0.00   109570     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux()
  0.00      7.56     0.00   109404     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long)
  0.00      7.56     0.00   109365     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long)
  0.00      7.56     0.00   105236     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long)
  0.00      7.56     0.00   105233     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&)
  0.00      7.56     0.00   105186     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node()
  0.00      7.56     0.00   105168     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::max_size(std::allocator<std::function<void ()> > const&)
  0.00      7.56     0.00   105120     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const
  0.00      7.56     0.00   104915     0.00     0.00  std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00      7.56     0.00   104815     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::_M_max_size() const
  0.00      7.56     0.00   104762     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*)
  0.00      7.56     0.00   104657     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const
  0.00      7.56     0.00   100200     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const
  0.00      7.56     0.00   100000     0.00     0.00  std::uniform_int_distribution<unsigned long>::param_type::a() const
  0.00      7.56     0.00    99989     0.00     0.00  bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&)
  0.00      7.56     0.00    99950     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++(int)
  0.00      7.56     0.00    99950     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    99950     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_tail(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    99950     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&)
  0.00      7.56     0.00    99950     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>::swap(std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    99950     0.00     0.00  std::enable_if<std::__and_<std::__is_swappable<Math::Matrix>, std::__is_swappable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&, std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    99950     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >)
  0.00      7.56     0.00    99895     0.00     0.00  Math::Matrix const& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix> const&)
  0.00      7.56     0.00    99895     0.00     0.00  std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    99894     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator++()
  0.00      7.56     0.00    99892     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator*() const
  0.00      7.56     0.00    99891     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix> const&)
  0.00      7.56     0.00    99890     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false> const&)
  0.00      7.56     0.00    99890     0.00     0.00  Math::Matrix const& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    99889     0.00     0.00  std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    99887     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false> const&)
  0.00      7.56     0.00    99887     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    99883     0.00     0.00  std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl()
  0.00      7.56     0.00    99881     0.00     0.00  std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base()
  0.00      7.56     0.00    99879     0.00     0.00  std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~tuple()
  0.00      7.56     0.00    99878     0.00     0.00  std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl()
  0.00      7.56     0.00    99862     0.00     0.00  std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
  0.00      7.56     0.00    99862     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>&)
  0.00      7.56     0.00    99859     0.00     0.00  std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&)
  0.00      7.56     0.00    99859     0.00     0.00  std::tuple_element<1ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
  0.00      7.56     0.00    99842     0.00     0.00  Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix)
  0.00      7.56     0.00    99832     0.00     0.00  std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
  0.00      7.56     0.00    99831     0.00     0.00  std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&)
  0.00      7.56     0.00    99829     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
  0.00      7.56     0.00    99827     0.00     0.00  std::tuple_element<0ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
  0.00      7.56     0.00    99772     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.00      7.56     0.00    99759     0.00     0.00  bool std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1} const&)
  0.00      7.56     0.00    99758     0.00     0.00  void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>)
  0.00      7.56     0.00    99735     0.00     0.00  std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&)
  0.00      7.56     0.00    99265     0.00     0.00  std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.00      7.56     0.00    93472     0.00     0.00  std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.00      7.56     0.00    93432     0.00     0.00  std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.00      7.56     0.00    93404     0.00     0.00  std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
  0.00      7.56     0.00    91783     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.00      7.56     0.00    91643     0.00     0.00  std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00    91615     0.00     0.00  std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
  0.00      7.56     0.00    78992     0.00     0.00  std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**)
  0.00      7.56     0.00    61097     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()
  0.00      7.56     0.00    60667     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const
  0.00      7.56     0.00    52536     0.00     0.00  std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**)
  0.00      7.56     0.00    50122     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
  0.00      7.56     0.00    50050     0.00     0.00  bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
  0.00      7.56     0.00    50016     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.00      7.56     0.00    50016     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00      7.56     0.00    50000     0.00     0.00  std::uniform_int_distribution<unsigned long>::param_type::b() const
  0.00      7.56     0.00    50000     0.00     0.00  std::uniform_int_distribution<unsigned long>::param_type::param_type(unsigned long, unsigned long)
  0.00      7.56     0.00    50000     0.00     0.00  std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long)
  0.00      7.56     0.00    50000     0.00     0.00  unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      7.56     0.00    50000     0.00     0.00  unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&)
  0.00      7.56     0.00    49950     0.00     0.00  std::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, true>(unsigned long&&, unsigned long&&)
  0.00      7.56     0.00    49950     0.00     0.00  std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      7.56     0.00    49950     0.00     0.00  std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&)
  0.00      7.56     0.00    44857     0.00     0.00  Math::Matrix::getSize() const
  0.00      7.56     0.00    37390     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::~_Head_base()
  0.00      7.56     0.00    37388     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl()
  0.00      7.56     0.00    37388     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>::~tuple()
  0.00      7.56     0.00    37387     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::~_Tuple_impl()
  0.00      7.56     0.00    37385     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::~_Head_base()
  0.00      7.56     0.00    32790     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    32788     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00    32788     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix> const&)
  0.00      7.56     0.00    32786     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false> const&)
  0.00      7.56     0.00    32783     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false> const&)
  0.00      7.56     0.00    30550     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)
  0.00      7.56     0.00    30550     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::random_access_iterator_tag)
  0.00      7.56     0.00    30549     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.00      7.56     0.00    30548     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const
  0.00      7.56     0.00    30547     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)
  0.00      7.56     0.00    30547     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.00      7.56     0.00    30546     0.00     0.00  __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      7.56     0.00    30331     0.00     0.00  bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
  0.00      7.56     0.00    30233     0.00     0.00  Math::Matrix& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    30233     0.00     0.00  std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    30229     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++()
  0.00      7.56     0.00    30227     0.00     0.00  FFNN::feedForward(Math::Matrix)
  0.00      7.56     0.00    30194     0.00     0.00  Math::Matrix& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix>&)
  0.00      7.56     0.00    30191     0.00     0.00  std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00    26335     0.00     0.00  std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00    26317     0.00     0.00  std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00    26251     0.00     0.00  std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**)
  0.00      7.56     0.00    26218     0.00     0.00  std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00    26208     0.00     0.00  std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00    26189     0.00     0.00  std::function<void ()>** std::__niter_wrap<std::function<void ()>**>(std::function<void ()>** const&, std::function<void ()>**)
  0.00      7.56     0.00    20700     0.00     0.00  Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&)
  0.00      7.56     0.00    14952     0.00     0.00  Cost::L2Cost::func(Math::Matrix, Math::Matrix)
  0.00      7.56     0.00     9200     0.00     0.00  std::initializer_list<double>::begin() const
  0.00      7.56     0.00     9200     0.00     0.00  double const* std::__miter_base<double const*>(double const*)
  0.00      7.56     0.00     9200     0.00     0.00  double const* std::__niter_base<double const*>(double const*)
  0.00      7.56     0.00     7416     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::__addressof<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00     6922     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&)
  0.00      7.56     0.00     4858     0.00     0.00  void std::destroy_at<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00     4858     0.00     0.00  void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00     4600     0.00     0.00  Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool)
  0.00      7.56     0.00     4600     0.00     0.00  std::initializer_list<double>::end() const
  0.00      7.56     0.00     4600     0.00     0.00  std::initializer_list<double>::size() const
  0.00      7.56     0.00     4600     0.00     0.00  double* std::__uninitialized_copy<true>::__uninit_copy<double const*, double*>(double const*, double const*, double*)
  0.00      7.56     0.00     4600     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag)
  0.00      7.56     0.00     4600     0.00     0.00  std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&)
  0.00      7.56     0.00     4600     0.00     0.00  std::iterator_traits<double const*>::difference_type std::__distance<double const*>(double const*, double const*, std::random_access_iterator_tag)
  0.00      7.56     0.00     4600     0.00     0.00  double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*)
  0.00      7.56     0.00     4600     0.00     0.00  double* std::uninitialized_copy<double const*, double*>(double const*, double const*, double*)
  0.00      7.56     0.00     4600     0.00     0.00  std::iterator_traits<double const*>::iterator_category std::__iterator_category<double const*>(double const* const&)
  0.00      7.56     0.00     4600     0.00     0.00  double* std::__uninitialized_copy_a<double const*, double*, double>(double const*, double const*, double*, std::allocator<double>&)
  0.00      7.56     0.00     4600     0.00     0.00  std::abs(double)
  0.00      7.56     0.00     4600     0.00     0.00  double* std::copy<double const*, double*>(double const*, double const*, double*)
  0.00      7.56     0.00     4600     0.00     0.00  std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*)
  0.00      7.56     0.00     3653     0.00     0.00  void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
  0.00      7.56     0.00     2558     0.00     0.00  void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&)
  0.00      7.56     0.00     2558     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix> const& std::forward<std::tuple<Math::Matrix, Math::Matrix> const&>(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> const&>::type&)
  0.00      7.56     0.00     2422     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end()
  0.00      7.56     0.00     2300     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator-(long) const
  0.00      7.56     0.00     2300     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back()
  0.00      7.56     0.00     2300     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&)
  0.00      7.56     0.00     2300     0.00     0.00  decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00     2300     0.00     0.00  std::remove_reference<std::tuple<Math::Matrix, Math::Matrix>&>::type&& std::move<std::tuple<Math::Matrix, Math::Matrix>&>(std::tuple<Math::Matrix, Math::Matrix>&)
  0.00      7.56     0.00      400     0.00     0.00  Math::Matrix::operator*=(double const&)
  0.00      7.56     0.00      222     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin()
  0.00      7.56     0.00      200     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&)
  0.00      7.56     0.00      200     0.00     0.00  std::__detail::__extent_storage<18446744073709551615ul>::_M_extent() const
  0.00      7.56     0.00      142     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const
  0.00      7.56     0.00      101     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const
  0.00      7.56     0.00      101     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const
  0.00      7.56     0.00      100     0.00     0.00  __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator->() const
  0.00      7.56     0.00      100     0.00     0.00  std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const
  0.00      7.56     0.00      100     0.00     0.00  std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::begin() const
  0.00      7.56     0.00      100     0.00     0.00  std::__detail::__extent_storage<18446744073709551615ul>::__extent_storage(unsigned long)
  0.00      7.56     0.00      100     0.00     0.00  auto std::to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
  0.00      7.56     0.00      100     0.00     0.00  auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
  0.00      7.56     0.00      100     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::__to_address<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       88     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix> const* std::__make_move_if_noexcept_iterator<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const*>(std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       68     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator()
  0.00      7.56     0.00       51     0.00     0.00  FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&)
  0.00      7.56     0.00       50     0.00     0.00  FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&)
  0.00      7.56     0.00       50     0.00     0.00  void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      7.56     0.00       47     0.00     0.00  Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&)
  0.00      7.56     0.00       44     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() const
  0.00      7.56     0.00       44     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const
  0.00      7.56     0.00       44     0.00     0.00  std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&)
  0.00      7.56     0.00       44     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       44     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&)
  0.00      7.56     0.00       44     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::uninitialized_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       44     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy_a<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
  0.00      7.56     0.00       44     0.00     0.00  std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
  0.00      7.56     0.00       33     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      7.56     0.00       28     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&)
  0.00      7.56     0.00       28     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const
  0.00      7.56     0.00       28     0.00     0.00  Math::Matrix const* std::__make_move_if_noexcept_iterator<Math::Matrix, Math::Matrix const*>(Math::Matrix*)
  0.00      7.56     0.00       28     0.00     0.00  Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&)
  0.00      7.56     0.00       24     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       24     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long)
  0.00      7.56     0.00       24     0.00     0.00  void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*)
  0.00      7.56     0.00       24     0.00     0.00  void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
  0.00      7.56     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long)
  0.00      7.56     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocate(unsigned long, void const*)
  0.00      7.56     0.00       22     0.00     0.00  __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::_M_max_size() const
  0.00      7.56     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const
  0.00      7.56     0.00       22     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const
  0.00      7.56     0.00       22     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_allocate(unsigned long)
  0.00      7.56     0.00       22     0.00     0.00  std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long)
  0.00      7.56     0.00       22     0.00     0.00  std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long)
  0.00      7.56     0.00       22     0.00     0.00  void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&)
  0.00      7.56     0.00       18     0.00     0.00  std::thread* std::__niter_base<std::thread*>(std::thread*)
  0.00      7.56     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&)
  0.00      7.56     0.00       14     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const
  0.00      7.56     0.00       14     0.00     0.00  Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*)
  0.00      7.56     0.00       14     0.00     0.00  std::thread::id::id()
  0.00      7.56     0.00       14     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end()
  0.00      7.56     0.00       14     0.00     0.00  Math::Matrix* std::uninitialized_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*)
  0.00      7.56     0.00       14     0.00     0.00  Math::Matrix* std::__uninitialized_copy_a<Math::Matrix const*, Math::Matrix*, Math::Matrix>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*, std::allocator<Math::Matrix>&)
  0.00      7.56     0.00       14     0.00     0.00  Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&)
  0.00      7.56     0.00       13     0.00     0.00  std::thread* std::__addressof<std::thread>(std::thread&)
  0.00      7.56     0.00        9     0.00     0.00  std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)
  0.00      7.56     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const
  0.00      7.56     0.00        8     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      7.56     0.00        8     0.00     0.00  std::_Head_base<0ul, std::thread::_State*, false>::_M_head(std::_Head_base<0ul, std::thread::_State*, false>&)
  0.00      7.56     0.00        8     0.00     0.00  std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      7.56     0.00        8     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr()
  0.00      7.56     0.00        8     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::end()
  0.00      7.56     0.00        8     0.00     0.00  std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      7.56     0.00        8     0.00     0.00  std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      7.56     0.00        7     0.00     0.00  Math::Matrix::generateRandom(int, int, double)
  0.00      7.56     0.00        7     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::difference_type __gnu_cxx::operator-<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&)
  0.00      7.56     0.00        7     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const
  0.00      7.56     0.00        7     0.00     0.00  __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator-(long) const
  0.00      7.56     0.00        7     0.00     0.00  std::thread::joinable() const
  0.00      7.56     0.00        7     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const
  0.00      7.56     0.00        7     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator()
  0.00      7.56     0.00        7     0.00     0.00  void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&)
  0.00      7.56     0.00        7     0.00     0.00  double* std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      7.56     0.00        7     0.00     0.00  std::thread::~thread()
  0.00      7.56     0.00        7     0.00     0.00  Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&)
  0.00      7.56     0.00        7     0.00     0.00  void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&)
  0.00      7.56     0.00        7     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back()
  0.00      7.56     0.00        7     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin()
  0.00      7.56     0.00        7     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&)
  0.00      7.56     0.00        7     0.00     0.00  std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&)
  0.00      7.56     0.00        7     0.00     0.00  std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&)
  0.00      7.56     0.00        7     0.00     0.00  void std::destroy_at<std::thread>(std::thread*)
  0.00      7.56     0.00        7     0.00     0.00  decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&)
  0.00      7.56     0.00        7     0.00     0.00  double* std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      7.56     0.00        7     0.00     0.00  double* std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&)
  0.00      7.56     0.00        7     0.00     0.00  std::operator==(std::thread::id, std::thread::id)
  0.00      7.56     0.00        6     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const
  0.00      7.56     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::max_size() const
  0.00      7.56     0.00        6     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      7.56     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&)
  0.00      7.56     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&)
  0.00      7.56     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      7.56     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>)
  0.00      7.56     0.00        6     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      7.56     0.00        6     0.00     0.00  std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      7.56     0.00        6     0.00     0.00  std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      7.56     0.00        6     0.00     0.00  std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&)
  0.00      7.56     0.00        5     0.00     0.00  bool __gnu_cxx::operator==<std::thread*, std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00      7.56     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++()
  0.00      7.56     0.00        4     0.00     0.00  bool __gnu_cxx::operator==<int*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
  0.00      7.56     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const
  0.00      7.56     0.00        4     0.00     0.00  std::_Head_base<0ul, std::thread::_State*, false>::_Head_base()
  0.00      7.56     0.00        4     0.00     0.00  std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_M_head(std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>&)
  0.00      7.56     0.00        4     0.00     0.00  std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_Head_base<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::_Head_base<1ul, std::default_delete<std::thread::_State>, true>::_Head_base()
  0.00      7.56     0.00        4     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*)
  0.00      7.56     0.00        4     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()
  0.00      7.56     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00      7.56     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&)
  0.00      7.56     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00      7.56     0.00        4     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long)
  0.00      7.56     0.00        4     0.00     0.00  std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*)
  0.00      7.56     0.00        4     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*)
  0.00      7.56     0.00        4     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>()
  0.00      7.56     0.00        4     0.00     0.00  std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::~_State_impl()
  0.00      7.56     0.00        4     0.00     0.00  std::thread::_State::_State()
  0.00      7.56     0.00        4     0.00     0.38  void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
  0.00      7.56     0.00        4     0.00     0.38  std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::operator()()
  0.00      7.56     0.00        4     0.00     0.00  std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::back()
  0.00      7.56     0.00        4     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::begin()
  0.00      7.56     0.00        4     0.00     0.00  Math::ThreadPool::start(unsigned long)::{lambda()#1}& std::__get_helper<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&)
  0.00      7.56     0.00        4     0.00     0.00  decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.38  void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        4     0.00     0.00  std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&)
  0.00      7.56     0.00        4     0.00     0.00  std::remove_reference<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>::type&& std::move<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&)
  0.00      7.56     0.00        4     0.00     0.00  void std::_Destroy<std::thread>(std::thread*)
  0.00      7.56     0.00        4     0.00     0.38  std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*)
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::_M_max_size() const
  0.00      7.56     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
  0.00      7.56     0.00        3     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const
  0.00      7.56     0.00        3     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      7.56     0.00        3     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl()
  0.00      7.56     0.00        3     0.00     0.00  std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base()
  0.00      7.56     0.00        3     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*)
  0.00      7.56     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&)
  0.00      7.56     0.00        3     0.00     0.00  std::thread::swap(std::thread&)
  0.00      7.56     0.00        3     0.00     0.00  std::thread::thread(std::thread&&)
  0.00      7.56     0.00        3     0.00     0.00  std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector()
  0.00      7.56     0.00        3     0.00     0.00  void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
  0.00      7.56     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00      7.56     0.00        3     0.00     0.00  decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&)
  0.00      7.56     0.00        3     0.00     0.00  void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      7.56     0.00        3     0.00     0.00  std::remove_reference<std::thread&>::type&& std::move<std::thread&>(std::thread&)
  0.00      7.56     0.00        3     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  0.00      7.56     0.00        3     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      7.56     0.00        2     0.00     0.00  generateData(int)
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator()
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::new_allocator()
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::_M_max_size() const
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
  0.00      7.56     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
  0.00      7.56     0.00        2     0.00     0.00  std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&)
  0.00      7.56     0.00        2     0.00     0.00  std::allocator<std::function<void ()>*>::~allocator()
  0.00      7.56     0.00        2     0.00     0.00  std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocator()
  0.00      7.56     0.00        2     0.00     0.00  std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::~allocator()
  0.00      7.56     0.00        2     0.00     0.00  int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::~_Vector_impl()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl_data::_Vector_impl_data()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_base()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00      7.56     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      7.56     0.00        2     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator()
  0.00      7.56     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      7.56     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      7.56     0.00        2     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::vector()
  0.00      7.56     0.00        2     0.00     0.00  std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector()
  0.00      7.56     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      7.56     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00      7.56     0.00        2     0.00     0.00  int const* std::__miter_base<int const*>(int const*)
  0.00      7.56     0.00        2     0.00     0.00  int const* std::__niter_base<int const*>(int const*)
  0.00      7.56     0.00        2     0.00     0.00  int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00      7.56     0.00        2     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      7.56     0.00        2     0.00     0.00  int* std::__niter_wrap<int*>(int* const&, int*)
  0.00      7.56     0.00        2     0.00     0.00  int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        2     0.00     0.00  int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.56     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.56     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.56     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.56     0.00        1     0.00     0.00  Activation::ActivationFn::ActivationFn()
  0.00      7.56     0.00        1     0.00     0.00  Activation::Sigmoid::Sigmoid()
  0.00      7.56     0.00        1     0.00     0.00  Cost::CostFn::CostFn()
  0.00      7.56     0.00        1     0.00     0.00  Cost::L2Cost::L2Cost()
  0.00      7.56     0.00        1     0.00     4.84  FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&)
  0.00      7.56     0.00        1     0.00     0.00  FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*)
  0.00      7.56     0.00        1     0.00     0.00  FFNN::~FFNN()
  0.00      7.56     0.00        1     0.00     0.00  Math::ThreadPool::stop()
  0.00      7.56     0.00        1     0.00     0.00  Math::ThreadPool::start(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  Math::ThreadPool::ThreadPool(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*)
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::new_allocator()
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator()
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign()
  0.00      7.56     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::_M_max_size() const
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::begin() const
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::capacity() const
  0.00      7.56     0.00        1     0.00     0.00  std::allocator<std::thread>::allocator()
  0.00      7.56     0.00        1     0.00     0.00  std::allocator<std::thread>::~allocator()
  0.00      7.56     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::allocator()
  0.00      7.56     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::~allocator()
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl()
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl()
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data()
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base()
  0.00      7.56     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base()
  0.00      7.56     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*)
  0.00      7.56     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl_data::_Vector_impl_data()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base(std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      7.56     0.00        1     0.00     0.00  std::__mutex_base::__mutex_base()
  0.00      7.56     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00      7.56     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00      7.56     0.00        1     0.00     0.01  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>)
  0.00      7.56     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque()
  0.00      7.56     0.00        1     0.00     0.02  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque()
  0.00      7.56     0.00        1     0.00     0.00  std::mutex::mutex()
  0.00      7.56     0.00        1     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>()
  0.00      7.56     0.00        1     0.00     0.02  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::vector()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::~vector()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag)
  0.00      7.56     0.00        1     0.00     0.00  int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&)
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      7.56     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  0.00      7.56     0.00        1     0.00     0.00  std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        1     0.00     0.00  int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
  0.00      7.56     0.00        1     0.00     0.00  int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        1     0.00     0.00  std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
  0.00      7.56     0.00        1     0.00     0.00  int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&)
  0.00      7.56     0.00        1     0.00     0.00  int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
  0.00      7.56     0.00        1     0.00     0.00  int* std::copy<int const*, int*>(int const*, int const*, int*)
  0.00      7.56     0.00        1     0.00     0.00  void std::_Destroy<std::thread*>(std::thread*, std::thread*)
  0.00      7.56     0.00        1     0.00     0.00  void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      7.56     0.00        1     0.00     0.00  void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00      7.56     0.00        1     0.00     0.00  std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.13% of 7.56 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     64.3    0.00    4.86                 main [1]
                0.00    4.84       1/1           FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
                0.00    0.00       1/51          FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.00       2/2           generateData(int) [611]
                0.00    0.00       1/1           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
                0.00    0.00       1/1           FFNN::~FFNN() [616]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::~vector() [548]
                0.00    0.00       2/2           std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector() [717]
                0.00    0.00       1/1706161     std::allocator<int>::allocator() [255]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
                0.00    0.00       1/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00       1/1           Activation::Sigmoid::Sigmoid() [1176]
                0.00    0.00       1/1           Cost::L2Cost::L2Cost() [1178]
-----------------------------------------------
                0.00    4.84       1/1           main [1]
[2]     64.0    0.00    4.84       1         FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
                0.01    4.25     100/100         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.25      50/51          FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.24      50/50          FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.09      50/50          void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
                0.01    0.00     100/100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [591]
                0.00    0.00     200/222         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() [1042]
                0.00    0.00     200/100200      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const [972]
                0.00    0.00     100/2422        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [1038]
                0.00    0.00       3/142         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const [1045]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [1205]
-----------------------------------------------
                0.01    4.25     100/100         FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[3]     56.3    0.01    4.25     100         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.03    4.05   99887/99887       FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
                0.00    0.08  199686/392285      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.03   99879/99879       std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~tuple() [337]
                0.01    0.02  399472/637856      Math::Matrix::operator+=(Math::Matrix const&) [278]
                0.00    0.02  199955/699099      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
                0.01    0.00  600611/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
                0.00    0.00     100/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const [590]
                0.00    0.00     100/100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const [630]
                0.00    0.00  800932/3577640     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long) [483]
                0.00    0.00     200/299942      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
                0.00    0.00     400/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00     400/2026739     Math::Matrix::operator=(Math::Matrix const&) [75]
                0.00    0.00     400/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00     400/115196      Math::Matrix::operator-=(Math::Matrix const&) [639]
                0.00    0.00     400/400         Math::Matrix::operator*=(double const&) [721]
                0.00    0.00   99989/99989       bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&) [974]
                0.00    0.00   99895/99895       std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [978]
                0.00    0.00   99894/99894       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator++() [979]
                0.00    0.00   99892/99892       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator*() const [980]
                0.00    0.00   99889/99889       std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [984]
                0.00    0.00   99859/99859       std::tuple_element<1ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [990]
                0.00    0.00   99827/99827       std::tuple_element<0ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [994]
                0.00    0.00     200/299938      std::allocator<Math::Matrix>::allocator() [942]
                0.00    0.00     200/1692170     std::allocator<Math::Matrix>::~allocator() [855]
                0.00    0.00     100/100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::begin() const [1047]
-----------------------------------------------
                0.03    4.05   99887/99887       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[4]     53.9    0.03    4.05   99887         FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
                0.04    1.18  199800/260246      Math::operator*(Math::Matrix, Math::Matrix const&) [7]
                0.00    1.14  199362/199362      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.01    0.57   99778/99778       Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.02    0.20 1481419/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.02    0.18 1566404/2026739     Math::Matrix::operator=(Math::Matrix const&) [75]
                0.00    0.14  299742/299942      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
                0.02    0.08  194172/194172      Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.01    0.08   92596/92596       std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [183]
                0.00    0.08 2845633/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.07  197586/197586      Activation::Sigmoid::fnDerv(Math::Matrix) [206]
                0.00    0.06  198691/256513      Activation::Sigmoid::fn(Math::Matrix) [192]
                0.00    0.04  184839/241472      Math::operator+(Math::Matrix, Math::Matrix const&) [245]
                0.00    0.03   99842/99842       Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [323]
                0.00    0.03  299382/699099      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
                0.03    0.00 2346237/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
                0.01    0.00 2655959/3577640     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long) [483]
                0.00    0.00  299783/1692170     std::allocator<Math::Matrix>::~allocator() [855]
                0.00    0.00  299735/299938      std::allocator<Math::Matrix>::allocator() [942]
-----------------------------------------------
                0.01    0.52   99764/559627      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.03    1.04  199645/559627      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.04    1.35  260218/559627      Math::Matrix::operator*=(Math::Matrix const&) [14]
[5]     39.5    0.08    2.91  559627         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.10    1.73 1137859/1137859     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
                0.02    0.79  549150/549150      std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.01    0.18 1580357/1580357     std::future<void>::~future() [97]
                0.01    0.02  559591/559591      Math::ThreadPool::getPoolSize() const [320]
                0.01    0.00  448289/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.00    0.01  559624/559624      int std::min<int>(std::initializer_list<int>) [517]
                0.01    0.00  449189/449189      void std::condition_variable::wait<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}>(std::unique_lock<std::mutex>&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}) [521]
                0.00    0.01  468066/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
                0.00    0.00  559688/559688      int const& std::max<int>(int const&, int const&) [915]
-----------------------------------------------
                0.10    1.73 1137859/1137859     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[6]     24.3    0.10    1.73 1137859         std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
                0.01    0.86 1152096/1152096     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
                0.01    0.29 1140911/1584486     std::packaged_task<void ()>::get_future() [47]
                0.00    0.19 1150238/1150238     decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [90]
                0.01    0.12 1172868/2312872     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future() [76]
                0.00    0.12 1121919/4855539     std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
                0.01    0.03 1159656/1697403     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&) [232]
                0.01    0.02 1161060/1631442     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [283]
                0.02    0.01 1158348/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.01    0.01 1174405/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
                0.01    0.00 1141128/1141128     std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [512]
-----------------------------------------------
                0.01    0.36   60446/260246      FFNN::feedForward(Math::Matrix) [46]
                0.04    1.18  199800/260246      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[7]     21.0    0.05    1.54  260246         Math::operator*(Math::Matrix, Math::Matrix const&) [7]
                0.02    1.49  260247/260247      Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.00    0.03  231762/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
-----------------------------------------------
                0.00    1.51       4/4           std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::operator()() [9]
[8]     20.0    0.00    1.51       4         void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [8]
                0.00    1.51       4/4           std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [11]
                0.00    0.00       4/4           std::remove_reference<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>::type&& std::move<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1126]
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&) [1125]
-----------------------------------------------
                0.00    1.51       4/4           std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_M_run() [13]
[9]     20.0    0.00    1.51       4         std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::operator()() [9]
                0.00    1.51       4/4           void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [8]
-----------------------------------------------
                0.00    1.51       4/4           std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [11]
[10]    20.0    0.00    1.51       4         void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [10]
                0.07    1.44       4/4           Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    1.51       4/4           void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [8]
[11]    20.0    0.00    1.51       4         std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [11]
                0.00    1.51       4/4           void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [10]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.07    1.44       4/4           void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [10]
[12]    20.0    0.07    1.44       4         Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
                0.04    0.69 1724751/1724751     std::function<void ()>::operator()() const [31]
                0.02    0.26 1727985/1727985     std::function<void ()>::operator=(std::function<void ()>&&) [71]
                0.01    0.11 1735133/1735133     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [136]
                0.04    0.08 1535987/1535987     void std::condition_variable::wait<Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}) [150]
                0.03    0.06 1625350/5092084     std::function<void ()>::~function() [73]
                0.02    0.02 1560850/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.01    0.02 1731688/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
                0.02    0.00 1577806/1577806     std::function<void ()>::function() [399]
                0.00    0.01 1718796/1718796     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [460]
                0.00    0.00       4/2864677     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [253]
                0.00    0.00 1724061/3450865     std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [820]
-----------------------------------------------
                                                 <spontaneous>
[13]    20.0    0.00    1.51                 std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_M_run() [13]
                0.00    1.51       4/4           std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::operator()() [9]
-----------------------------------------------
                0.02    1.49  260247/260247      Math::operator*(Math::Matrix, Math::Matrix const&) [7]
[14]    19.9    0.02    1.49  260247         Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.04    1.35  260218/559627      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.01    0.04  260250/559510      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
                0.00    0.02  226605/6609718     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.00    0.01  229316/493327      std::function<void (int, int)>::~function() [349]
                0.00    0.01  235357/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.01    0.00  260219/260219      std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
                0.00    0.00  260220/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00  260248/6129898     std::allocator<double>::allocator() [386]
-----------------------------------------------
                0.00    1.14  199362/199362      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[15]    15.1    0.00    1.14  199362         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.03    1.04  199645/559627      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.01    0.03  199491/559510      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
                0.00    0.02  167775/260453      Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.00    0.01  171172/493327      std::function<void (int, int)>::~function() [349]
                0.00    0.00  173847/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00  199574/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00  199463/6129898     std::allocator<double>::allocator() [386]
                0.00    0.00  797725/1391236     Math::Matrix::getCols() const [864]
                0.00    0.00  398858/1192189     Math::Matrix::getRows() const [868]
                0.00    0.00  199576/199576      std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
-----------------------------------------------
                                                 <spontaneous>
[16]    13.3    0.02    0.99                 std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::_FUN() [16]
                0.01    0.98 1712821/1712821     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator()() const [17]
-----------------------------------------------
                0.01    0.98 1712821/1712821     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::_FUN() [16]
[17]    13.0    0.01    0.98 1712821         std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator()() const [17]
                0.02    0.96 1711317/1711317     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
-----------------------------------------------
                0.02    0.96 1711317/1711317     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator()() const [17]
[18]    12.9    0.02    0.96 1711317         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
                0.00    0.94 1714511/1714511     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
                0.01    0.00 1717420/5151404     std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [387]
                0.00    0.00 1718374/3438702     void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [485]
                0.00    0.00 1717027/5154885     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [481]
                0.00    0.00 1712781/5144272     bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [814]
-----------------------------------------------
                0.00    0.94 1714511/1714511     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
[19]    12.4    0.00    0.94 1714511         std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
                0.00    0.93 1715204/1715204     void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
                0.01    0.00 1720517/5151404     std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [387]
                0.01    0.00 1720328/3438702     void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [485]
                0.00    0.00 1718515/5154885     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [481]
                0.00    0.00 1713657/5144272     bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [814]
-----------------------------------------------
                0.00    0.93 1715204/1715204     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
[20]    12.2    0.00    0.93 1715204         void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
                0.02    0.90 1718734/1718734     std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [21]
                0.01    0.00 1713467/5151404     std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [387]
                0.00    0.00 1719343/5154885     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [481]
                0.00    0.00 1717834/5144272     bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [814]
-----------------------------------------------
                0.02    0.90 1718734/1718734     void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
[21]    12.1    0.02    0.90 1718734         std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [21]
                0.01    0.72 1712243/1712243     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [30]
                0.00    0.09 1685826/1685826     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [178]
                0.01    0.06 1677485/3992437     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
-----------------------------------------------
[22]    11.9    0.31    0.59 9847904+19585949 <cycle 1 as a whole> [22]
                0.16    0.34 8094142             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
                0.01    0.22 1644240             std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.07    0.00 11494414             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
                0.03    0.02 1618001             std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
                0.01    0.00 1651097             std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr() <cycle 1> [498]
                0.01    0.00 1647923             void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*) <cycle 1> [500]
                0.01    0.00 1642249             std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [502]
                0.01    0.00 1641787             void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*) <cycle 1> [571]
-----------------------------------------------
                0.01    0.86 1152096/1152096     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[23]    11.4    0.01    0.86 1152096         std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
                0.04    0.79 1158811/1158811     std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [24]
                0.00    0.01 1153553/1703820     std::allocator<std::packaged_task<void ()> >::allocator() [358]
                0.01    0.00 1158825/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00 1149049/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.04    0.79 1158811/1158811     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
[24]    11.0    0.04    0.79 1158811         std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [24]
                0.01    0.78 1160281/1160281     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [26]
                0.00    0.00 1158282/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.02    0.79  549150/549150      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[25]    10.7    0.02    0.79  549150         std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.00    0.39  550158/550158      std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
                0.00    0.13  527365/527365      decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [134]
                0.01    0.11  443575/1584486     std::packaged_task<void ()>::get_future() [47]
                0.00    0.06  535037/1008520     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future() [159]
                0.00    0.04  430087/4855539     std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
                0.00    0.01  537747/1697403     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&) [232]
                0.01    0.01  536463/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.00    0.01  470382/1631442     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [283]
                0.00    0.01  534814/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
                0.00    0.00  549252/549252      std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [922]
-----------------------------------------------
                0.01    0.78 1160281/1160281     std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [24]
[26]    10.5    0.01    0.78 1160281         std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [26]
                0.01    0.77 1159412/1159412     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [28]
                0.00    0.00 1158955/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.00    0.00    4600/6609718     Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [679]
                0.00    0.02  226605/6609718     Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.00    0.03  263452/6609718     Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.02    0.22 2023062/6609718     Math::Matrix::operator=(Math::Matrix const&) [75]
                0.05    0.44 4091999/6609718     Math::Matrix::Matrix(Math::Matrix const&) [33]
[27]    10.3    0.08    0.70 6609718         std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.05    0.30 5199570/5199570     double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [56]
                0.01    0.09 1438466/1438466     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [162]
                0.05    0.00 6636216/6636216     std::vector<double, std::allocator<double> >::capacity() const [273]
                0.01    0.03 5214506/12378430     void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [170]
                0.03    0.01 6640808/7063746     std::vector<double, std::allocator<double> >::end() const [292]
                0.01    0.02 5217630/12385191     std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [217]
                0.03    0.00 8073607/9549935     std::vector<double, std::allocator<double> >::size() const [339]
                0.01    0.01 6639109/7061657     std::vector<double, std::allocator<double> >::begin() const [355]
                0.02    0.00 6650367/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
                0.01    0.00 1443286/1443286     void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::allocator<double>&) [448]
                0.01    0.00 1440236/1470787     std::vector<double, std::allocator<double> >::end() [470]
                0.01    0.00 1439725/1500824     std::vector<double, std::allocator<double> >::begin() [469]
                0.00    0.00 6618956/6618956     __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_propagate_on_copy_assign() [812]
-----------------------------------------------
                0.01    0.77 1159412/1159412     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [26]
[28]    10.3    0.01    0.77 1159412         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [28]
                0.01    0.76 1156185/1156185     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1157459/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1162525/1703542     std::enable_if<!std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<void ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<void ()>, std::packaged_task<void ()> >(std::packaged_task<void ()>*) [847]
-----------------------------------------------
                0.01    0.76 1156185/1156185     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [28]
[29]    10.2    0.01    0.76 1156185         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.05    0.61 1157065/1157065     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.01    0.04 1161744/1712625     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [208]
                0.01    0.00 1164376/3348331     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [244]
                0.01    0.01 1150488/1699957     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [397]
                0.01    0.00 1161253/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.01    0.00 1164788/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00 1159104/3343559     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [568]
                0.00    0.00 1154425/5115127     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
                0.00    0.00 1160048/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00 1157960/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1164842/1707410     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [845]
                0.00    0.00 1163635/3299112     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [827]
-----------------------------------------------
                0.01    0.72 1712243/1712243     std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [21]
[30]     9.7    0.01    0.72 1712243         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [30]
                0.00    0.53 1170048/1170048     std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [38]
                0.00    0.19  545667/545667      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [93]
                0.01    0.00 1712689/8242539     std::_Function_base::_M_empty() const [285]
-----------------------------------------------
                0.04    0.69 1724751/1724751     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[31]     9.6    0.04    0.69 1724751         std::function<void ()>::operator()() const [31]
                0.03    0.41 1177044/1177044     std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [45]
                0.04    0.20  549493/549493      std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [83]
                0.01    0.00 1725837/8242539     std::_Function_base::_M_empty() const [285]
-----------------------------------------------
                0.05    0.61 1157065/1157065     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
[32]     8.8    0.05    0.61 1157065         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.01    0.57 1160388/1160388     void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [34]
                0.01    0.00 1158233/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.01    0.00 1159789/1710287     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >) [447]
                0.01    0.00 1156881/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00 1154107/3400513     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [537]
                0.00    0.00 1155126/5115127     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
                0.00    0.00 1158840/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.00    0.00       7/4087017     decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&) [724]
                0.00    0.00     400/4087017     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00    2300/4087017     std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false>&&) [691]
                0.00    0.00    2300/4087017     std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [690]
                0.00    0.00    2300/4087017     std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false>&&) [692]
                0.00    0.00    2300/4087017     std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [693]
                0.00    0.00   14952/4087017     Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.00   30533/4087017     FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.00   32783/4087017     std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false> const&) [605]
                0.00    0.00   32785/4087017     std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false> const&) [604]
                0.00    0.01   59790/4087017     FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.01   90550/4087017     FFNN::feedForward(Math::Matrix) [46]
                0.00    0.01   99839/4087017     Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [323]
                0.00    0.02  114796/4087017     Math::operator-(Math::Matrix, Math::Matrix const&) [406]
                0.00    0.03  197492/4087017     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.03  199439/4087017     Activation::Sigmoid::fnDerv(Math::Matrix) [206]
                0.00    0.03  199900/4087017     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.00    0.03  231762/4087017     Math::operator*(Math::Matrix, Math::Matrix const&) [7]
                0.00    0.03  240201/4087017     Math::operator+(Math::Matrix, Math::Matrix const&) [245]
                0.00    0.03  258762/4087017     Activation::Sigmoid::fn(Math::Matrix) [192]
                0.01    0.11  792407/4087017     void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
                0.02    0.20 1481419/4087017     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[33]     7.9    0.05    0.55 4087017         Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.05    0.44 4091999/6609718     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.03    0.04 4087630/5551531     std::vector<double, std::allocator<double> >::vector() [182]
-----------------------------------------------
                0.01    0.57 1160388/1160388     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
[34]     7.8    0.01    0.57 1160388         void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [34]
                0.03    0.54 1154738/1154738     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [36]
                0.00    0.00 1156328/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.01    0.57   99778/99778       FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[35]     7.6    0.01    0.57   99778         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.01    0.52   99764/559627      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.00    0.01   99769/559510      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
                0.00    0.01   92671/260453      Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.00    0.00   92839/493327      std::function<void (int, int)>::~function() [349]
                0.00    0.00   93693/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00   99724/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00   99767/6129898     std::allocator<double>::allocator() [386]
                0.00    0.00  399094/1192189     Math::Matrix::getRows() const [868]
                0.00    0.00  199553/1391236     Math::Matrix::getCols() const [864]
                0.00    0.00   99735/99735       std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
-----------------------------------------------
                0.03    0.54 1154738/1154738     void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [34]
[36]     7.5    0.03    0.54 1154738         decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [36]
                0.03    0.51 1157883/1157883     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
                0.00    0.00 1161912/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00 1160123/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.03    0.51 1157883/1157883     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [36]
[37]     7.1    0.03    0.51 1157883         std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
                0.01    0.46 1159782/1159782     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
                0.03    0.01 1156099/1706161     std::allocator<int>::allocator() [255]
                0.00    0.00 1167832/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00 1158766/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.00    0.53 1170048/1170048     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [30]
[38]     6.9    0.00    0.53 1170048         std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [38]
                0.03    0.46 1166786/1166786     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
                0.01    0.02 1162959/1162959     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [297]
-----------------------------------------------
                0.00    0.04  430087/4855539     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.00    0.10  997229/4855539     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future() [159]
                0.00    0.12 1121919/4855539     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
                0.01    0.24 2306304/4855539     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future() [76]
[39]     6.9    0.02    0.50 4855539         std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
                0.05    0.45 4864122/4864122     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [41]
-----------------------------------------------
                             8094142             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
[40]     6.6    0.16    0.34 8094142         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
                0.01    0.10 1610650/1610650     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
                0.03    0.07 1126787/1126787     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [167]
                0.02    0.06 1140659/1140659     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.01    0.03  487124/487124      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [277]
                0.00    0.01  481650/481650      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                             1618001             std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
-----------------------------------------------
                0.05    0.45 4864122/4864122     std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
[41]     6.6    0.05    0.45 4864122         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [41]
                0.15    0.29 4910472/9847904     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
-----------------------------------------------
                0.03    0.46 1166786/1166786     std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [38]
[42]     6.4    0.03    0.46 1166786         std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
                0.01    0.34 1166729/1166729     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [57]
                0.01    0.08 1157429/2385212     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
                0.01    0.01 1156265/3320731     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [234]
                0.00    0.00 1165756/2330923     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [833]
-----------------------------------------------
                0.01    0.46 1159782/1159782     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
[43]     6.2    0.01    0.46 1159782         std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
                0.01    0.31 1155545/1155545     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [59]
                0.00    0.11 1163893/1163893     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::~shared_ptr() [157]
                0.01    0.02 1165419/1165419     std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&) [332]
                0.00    0.00 1154298/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.03    0.12  548268/1723479     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const [103]
                0.06    0.26 1175211/1723479     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const [54]
[44]     6.2    0.09    0.38 1723479         std::packaged_task<void ()>::operator()() [44]
                0.04    0.20 1175071/1175071     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
                0.01    0.10  547215/547215      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
                0.00    0.02 1724464/1724464     void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<void ()> >(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [379]
                0.00    0.01 1723908/3095516     std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [391]
-----------------------------------------------
                0.03    0.41 1177044/1177044     std::function<void ()>::operator()() const [31]
[45]     5.9    0.03    0.41 1177044         std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [45]
                0.01    0.37 1178668/1178668     std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [49]
                0.03    0.00 1175384/1175384     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [324]
-----------------------------------------------
                0.00    0.21   14953/30227       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.22   15274/30227       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[46]     5.7    0.00    0.43   30227         FFNN::feedForward(Math::Matrix) [46]
                0.01    0.36   60446/260246      Math::operator*(Math::Matrix, Math::Matrix const&) [7]
                0.00    0.02   57822/256513      Activation::Sigmoid::fn(Math::Matrix) [192]
                0.00    0.01   90550/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.01   56633/241472      Math::operator+(Math::Matrix, Math::Matrix const&) [245]
                0.00    0.01   60135/2026739     Math::Matrix::operator=(Math::Matrix const&) [75]
                0.00    0.01  241101/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00   90562/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
                0.00    0.00  120749/3577640     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long) [483]
-----------------------------------------------
                0.01    0.11  443575/1584486     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.01    0.29 1140911/1584486     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[47]     5.5    0.02    0.40 1584486         std::packaged_task<void ()>::get_future() [47]
                0.00    0.19 1538971/1538971     std::future<void>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [89]
                0.00    0.15 1554056/3175631     std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [64]
                0.00    0.05 1578449/1578449     std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [238]
-----------------------------------------------
                0.00    0.39  550158/550158      std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
[48]     5.1    0.00    0.39  550158         std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
                0.00    0.37  550684/550684      std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [50]
                0.00    0.01  550267/1703820     std::allocator<std::packaged_task<void ()> >::allocator() [358]
                0.00    0.00  538511/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00  549782/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.01    0.37 1178668/1178668     std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [45]
[49]     5.0    0.01    0.37 1178668         std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [49]
                0.01    0.36 1176023/1176023     void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [51]
                0.00    0.00 1176372/2352727     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>::type&) [832]
-----------------------------------------------
                0.00    0.37  550684/550684      std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
[50]     5.0    0.00    0.37  550684         std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [50]
                0.00    0.37  550606/550606      std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [52]
                0.00    0.00  550389/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.01    0.36 1176023/1176023     std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [49]
[51]     5.0    0.01    0.36 1176023         void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [51]
                0.02    0.34 1174419/1174419     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const [54]
                0.00    0.00 1176355/2352727     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>::type&) [832]
-----------------------------------------------
                0.00    0.37  550606/550606      std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [50]
[52]     4.9    0.00    0.37  550606         std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [52]
                0.01    0.37  550698/550698      std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [53]
                0.00    0.00  550625/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.01    0.37  550698/550698      std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [52]
[53]     4.9    0.01    0.37  550698         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [53]
                0.01    0.35  550372/550372      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00  550561/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  541017/1703542     std::enable_if<!std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<void ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<void ()>, std::packaged_task<void ()> >(std::packaged_task<void ()>*) [847]
-----------------------------------------------
                0.02    0.34 1174419/1174419     void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [51]
[54]     4.8    0.02    0.34 1174419         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const [54]
                0.06    0.26 1175211/1723479     std::packaged_task<void ()>::operator()() [44]
                0.00    0.02 1174083/1722945     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [296]
-----------------------------------------------
                0.01    0.35  550372/550372      std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [53]
[55]     4.8    0.01    0.35  550372         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.01    0.30  550283/550283      std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.00    0.02  550881/1712625     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [208]
                0.01    0.00  542116/3348331     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [244]
                0.00    0.00  549469/1699957     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [397]
                0.00    0.00  541020/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.00    0.00  542400/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00  550239/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  550501/3343559     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [568]
                0.00    0.00  550058/5115127     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
                0.00    0.00  550469/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  542568/1707410     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [845]
                0.00    0.00  541474/3299112     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [827]
-----------------------------------------------
                0.05    0.30 5199570/5199570     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[56]     4.7    0.05    0.30 5199570         double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [56]
                0.01    0.16 5198410/5621186     double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&) [92]
                0.03    0.09 5199947/6186170     std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [126]
                0.01    0.00 5191116/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
-----------------------------------------------
                0.01    0.34 1166729/1166729     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
[57]     4.7    0.01    0.34 1166729         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [57]
                0.00    0.34 1166044/1166044     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [58]
                0.00    0.00 1165167/2330923     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [833]
-----------------------------------------------
                0.00    0.34 1166044/1166044     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [57]
[58]     4.5    0.00    0.34 1166044         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [58]
                0.00    0.31 1162580/1162580     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [61]
                0.00    0.02 1153211/1693355     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [329]
                0.00    0.00 1149294/2374057     std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [491]
-----------------------------------------------
                0.01    0.31 1155545/1155545     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
[59]     4.2    0.01    0.31 1155545         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [59]
                0.01    0.30 1158693/1158693     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [66]
                0.00    0.00 1158439/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1156165/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.06    0.25 1165563/1165563     void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [62]
[60]     4.1    0.06    0.25 1165563         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const [60]
                0.01    0.19 1161929/1705635     std::function<void (int, int)>::operator()(int, int) const [70]
                0.02    0.01 1160116/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.01    0.01 1159252/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
-----------------------------------------------
                0.00    0.31 1162580/1162580     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [58]
[61]     4.1    0.00    0.31 1162580         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [61]
                0.00    0.31 1161290/1161290     std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [63]
-----------------------------------------------
                0.00    0.31 1161975/1161975     std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [63]
[62]     4.1    0.00    0.31 1161975         void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [62]
                0.06    0.25 1165563/1165563     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const [60]
                0.00    0.00 1164172/2326409     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&) [834]
-----------------------------------------------
                0.00    0.31 1161290/1161290     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [61]
[63]     4.1    0.00    0.31 1161290         std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [63]
                0.00    0.31 1161975/1161975     void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [62]
                0.00    0.00 1162237/2326409     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&) [834]
-----------------------------------------------
                0.00    0.15 1554056/3175631     std::packaged_task<void ()>::get_future() [47]
                0.00    0.16 1621575/3175631     std::__basic_future<void>::~__basic_future() [100]
[64]     4.1    0.00    0.31 3175631         std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [64]
                0.01    0.29 3175478/3175478     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [65]
-----------------------------------------------
                0.01    0.29 3175478/3175478     std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [64]
[65]     4.1    0.01    0.29 3175478         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [65]
                0.10    0.19 3224836/9847904     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
-----------------------------------------------
                0.01    0.30 1158693/1158693     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [59]
[66]     4.1    0.01    0.30 1158693         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [66]
                0.01    0.29 1157361/1157361     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
                0.00    0.00 1158199/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1153868/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.01    0.30  550283/550283      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
[67]     4.1    0.01    0.30  550283         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.02    0.26  550754/550754      void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [72]
                0.00    0.00  550649/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.00    0.00  550498/1710287     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >) [447]
                0.00    0.00  550392/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
                0.00    0.00  550633/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  549966/3400513     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [537]
                0.00    0.00  550015/5115127     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
-----------------------------------------------
                0.00    0.02  458395/7687065     std::function<double (double)>::~function() [408]
                0.00    0.02  489228/7687065     std::function<void (int, int)>::~function() [349]
                0.00    0.06 1640731/7687065     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [190]
                0.01    0.19 5098711/7687065     std::function<void ()>::~function() [73]
[68]     4.0    0.02    0.28 7687065         std::_Function_base::~_Function_base() [68]
                0.01    0.16 1143754/1143754     std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [106]
                0.00    0.05  485213/485213      std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [240]
                0.00    0.02 1149505/1149505     std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [401]
                0.00    0.01  258879/258879      std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [522]
                0.01    0.00  227749/227749      std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [526]
                0.00    0.01  199458/199458      std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [527]
                0.00    0.01  170824/170824      std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [530]
                0.00    0.00  499999/499999      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [931]
                0.00    0.00   91615/91615       std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1001]
-----------------------------------------------
                0.01    0.29 1157361/1157361     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [66]
[69]     4.0    0.01    0.29 1157361         std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
                0.02    0.26 1152134/1152134     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.01    0.00 1167574/1167574     std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [509]
                0.00    0.00 1156534/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1152234/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.09  543706/1705635     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const [144]
                0.01    0.19 1161929/1705635     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const [60]
[70]     3.8    0.01    0.28 1705635         std::function<void (int, int)>::operator()(int, int) const [70]
                0.00    0.14  750112/750112      std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [118]
                0.01    0.06  576329/576329      std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [203]
                0.00    0.06  381552/381552      std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [220]
                0.01    0.00 1706245/8242539     std::_Function_base::_M_empty() const [285]
                0.00    0.00 3419091/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
-----------------------------------------------
                0.02    0.26 1727985/1727985     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[71]     3.8    0.02    0.26 1727985         std::function<void ()>::operator=(std::function<void ()>&&) [71]
                0.11    0.01 1729716/1729716     std::function<void ()>::function(std::function<void ()>&&) [142]
                0.03    0.07 1733639/5092084     std::function<void ()>::~function() [73]
                0.01    0.04 1725899/1725899     std::function<void ()>::swap(std::function<void ()>&) [254]
                0.00    0.00 1726804/3450865     std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [820]
-----------------------------------------------
                0.02    0.26  550754/550754      std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
[72]     3.7    0.02    0.26  550754         void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [72]
                0.00    0.26  550227/550227      decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [77]
                0.00    0.00  550546/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.03    0.06 1625350/5092084     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
                0.03    0.07 1733095/5092084     void std::destroy_at<std::function<void ()> >(std::function<void ()>*) [175]
                0.03    0.07 1733639/5092084     std::function<void ()>::operator=(std::function<void ()>&&) [71]
[73]     3.7    0.08    0.20 5092084         std::function<void ()>::~function() [73]
                0.01    0.19 5098711/7687065     std::_Function_base::~_Function_base() [68]
-----------------------------------------------
                0.02    0.26 1152134/1152134     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
[74]     3.7    0.02    0.26 1152134         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.01    0.19 1149605/1149605     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.03 1157284/1157284     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [333]
                0.01    0.01 1165168/2311911     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [373]
                0.01    0.01 1150590/2295267     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [392]
                0.00    0.00 1160108/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00 1151198/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00 1154826/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00 1151119/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1166633/2294960     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [836]
                0.00    0.00 1163955/1163955     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [871]
                0.00    0.00 1161697/3448951     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [821]
                0.00    0.00 1153986/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
                0.00    0.00 1148769/1148769     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [875]
-----------------------------------------------
                0.00    0.00     400/2026739     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.01   60135/2026739     FFNN::feedForward(Math::Matrix) [46]
                0.00    0.05  399800/2026739     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.02    0.18 1566404/2026739     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[75]     3.5    0.03    0.24 2026739         Math::Matrix::operator=(Math::Matrix const&) [75]
                0.02    0.22 2023062/6609718     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
-----------------------------------------------
                0.01    0.12 1140004/2312872     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [121]
                0.01    0.12 1172868/2312872     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[76]     3.5    0.01    0.25 2312872         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future() [76]
                0.01    0.24 2306304/4855539     std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
-----------------------------------------------
                0.00    0.26  550227/550227      void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [72]
[77]     3.4    0.00    0.26  550227         decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [77]
                0.01    0.25  550240/550240      std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
                0.00    0.00  550639/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  551009/12671680     operator new(unsigned long, void*) [472]
-----------------------------------------------
                0.01    0.25  550240/550240      decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [77]
[78]     3.4    0.01    0.25  550240         std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
                0.00    0.23  550728/550728      std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
                0.01    0.00  550060/1706161     std::allocator<int>::allocator() [255]
                0.00    0.00  544014/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00  550624/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.00    0.00       1/51          main [1]
                0.00    0.25      50/51          FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[79]     3.3    0.00    0.25      51         FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.22   15274/30227       FFNN::feedForward(Math::Matrix) [46]
                0.00    0.01   30549/30549       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [457]
                0.01    0.00   15278/30232       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [533]
                0.00    0.00   15277/32790       std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [540]
                0.00    0.00   30533/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00   30542/420488      Math::Matrix::getVals() const [295]
                0.00    0.00   45803/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00      51/101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const [629]
                0.00    0.00      51/101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const [628]
                0.00    0.00   15280/37388       std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
                0.00    0.00   30554/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00   61099/1500824     std::vector<double, std::allocator<double> >::begin() [469]
                0.00    0.00   30551/1470787     std::vector<double, std::allocator<double> >::end() [470]
                0.00    0.00   30547/30547       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [707]
                0.00    0.00   15328/30331       bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1017]
                0.00    0.00   15277/30233       std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1019]
                0.00    0.00   15277/30229       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++() [1020]
                0.00    0.00   15255/30191       std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1022]
                0.00    0.00      51/142         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const [1045]
-----------------------------------------------
                0.04    0.20 1175071/1175071     std::packaged_task<void ()>::operator()() [44]
[80]     3.2    0.04    0.20 1175071         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
                0.03    0.08 1170520/1714822     std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
                0.01    0.05 1147740/1639363     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [190]
                0.00    0.02 1174841/1174841     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
                0.01    0.01 1171336/1171336     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [508]
-----------------------------------------------
                0.00    0.24      50/50          FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[81]     3.2    0.00    0.24      50         FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.21   14953/30227       FFNN::feedForward(Math::Matrix) [46]
                0.00    0.01   59790/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.01   14952/14952       Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.00   14954/30232       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [533]
                0.00    0.00   14955/32790       std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [540]
                0.00    0.00   74749/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00      50/101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const [629]
                0.00    0.00      50/101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const [628]
                0.00    0.00   14950/37388       std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
                0.00    0.00   15003/30331       bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1017]
                0.00    0.00   14956/30233       std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1019]
                0.00    0.00   14952/30229       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++() [1020]
                0.00    0.00   14936/30191       std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1022]
-----------------------------------------------
                             1644240             void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*) <cycle 1> [571]
[82]     3.2    0.01    0.22 1644240         std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.00    0.06 1649445/1649445     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [229]
                0.02    0.04  686256/686256      std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [231]
                0.01    0.05  686078/2385212     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
                0.01    0.02  686232/3992437     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
                0.02    0.00 1649058/3375200     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [288]
                0.00    0.01 1371608/3095516     std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [391]
                0.00    0.00  686057/2374057     std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [491]
                             1651097             std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr() <cycle 1> [498]
-----------------------------------------------
                0.04    0.20  549493/549493      std::function<void ()>::operator()() const [31]
[83]     3.1    0.04    0.20  549493         std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [83]
                0.01    0.18  549245/549245      std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [96]
                0.01    0.00  549096/549096      std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [446]
-----------------------------------------------
                0.00    0.23  550728/550728      std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
[84]     3.0    0.00    0.23  550728         std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
                0.00    0.17  550319/550319      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [102]
                0.01    0.05  543585/543585      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::~shared_ptr() [233]
                0.00    0.00  550143/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  544563/544563      std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&) [662]
-----------------------------------------------
                0.01    0.07  546406/1700331     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [173]
                0.01    0.14 1153925/1700331     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [111]
[85]     2.9    0.02    0.20 1700331         std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [85]
                0.02    0.12 1701220/1701220     std::__future_base::_State_baseV2::_State_baseV2() [125]
                0.00    0.07 1697445/1697445     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&) [211]
-----------------------------------------------
                0.00    0.00       7/7151775     Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00    4600/7151775     generateData(int) [611]
                0.00    0.00   30554/7151775     FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.00   93693/7151775     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.00  173847/7151775     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.00    0.01  235357/7151775     Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.00    0.01  397776/7151775     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.01  599952/7151775     std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
                0.00    0.01  599972/7151775     Math::Matrix::Matrix() [164]
                0.02    0.12 5016017/7151775     Math::Matrix::~Matrix() [117]
[86]     2.8    0.03    0.18 7151775         std::vector<double, std::allocator<double> >::~vector() [86]
                0.04    0.07 7165318/7165318     std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [166]
                0.02    0.04 7163924/12378430     void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [170]
                0.02    0.00 7158426/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
-----------------------------------------------
                0.01    0.19 1149605/1149605     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[87]     2.6    0.01    0.19 1149605         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.01    0.17 1157194/1157194     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [101]
                0.00    0.00 1155112/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00 1149328/3400513     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [537]
                0.00    0.00 1156571/1156571     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [644]
                0.00    0.00 1150532/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00 1158747/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1157640/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
                0.00    0.00 1156789/3448951     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [821]
-----------------------------------------------
                0.01    0.18 1543003/1543003     std::future<void>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [89]
[88]     2.5    0.01    0.18 1543003         std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
                0.07    0.00 1601628/1601628     std::__future_base::_State_baseV2::_M_set_retrieved_flag() [197]
                0.01    0.04 1583888/1583888     std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [239]
                0.00    0.04 1581679/1581679     std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [290]
                0.01    0.00 1536439/1536439     void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [506]
-----------------------------------------------
                0.00    0.19 1538971/1538971     std::packaged_task<void ()>::get_future() [47]
[89]     2.5    0.00    0.19 1538971         std::future<void>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [89]
                0.01    0.18 1543003/1543003     std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
-----------------------------------------------
                0.00    0.19 1150238/1150238     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[90]     2.5    0.00    0.19 1150238         decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [90]
                0.03    0.16 1161866/1161866     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
                0.00    0.00 1153901/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.03    0.16 1161866/1161866     decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [90]
[91]     2.5    0.03    0.16 1161866         std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
                0.00    0.12 1161580/1165226     void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [141]
                0.01    0.03 1169296/1702561     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
                0.00    0.00    3653/3653        void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00 1162226/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.00    0.01  422776/5621186     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.01    0.16 5198410/5621186     double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [56]
[92]     2.5    0.01    0.18 5621186         double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&) [92]
                0.01    0.17 5623370/5623370     double* std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [99]
-----------------------------------------------
                0.00    0.19  545667/545667      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [30]
[93]     2.5    0.00    0.19  545667         std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [93]
                0.00    0.19  545063/545063      std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
                0.00    0.00  544295/544295      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [648]
-----------------------------------------------
                0.00    0.04  541705/2385212     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
                0.01    0.05  686078/2385212     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.01    0.08 1157429/2385212     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
[94]     2.5    0.02    0.17 2385212         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
                0.01    0.07 2385053/2385053     std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [196]
                0.01    0.05 2384341/2384341     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [251]
                0.00    0.04 2383347/2383347     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::get_deleter() [306]
                0.00    0.00 2389846/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.00    0.19  545063/545063      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [93]
[95]     2.5    0.00    0.19  545063         std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
                0.00    0.13  544872/544872      std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [127]
                0.00    0.04  541705/2385212     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
                0.00    0.00  535877/3320731     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [234]
                0.00    0.00  544406/1089054     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [880]
-----------------------------------------------
                0.01    0.18  549245/549245      std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [83]
[96]     2.5    0.01    0.18  549245         std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [96]
                0.01    0.17  549215/549215      void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [98]
                0.00    0.00  549039/1098392     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>::type&) [879]
-----------------------------------------------
                0.01    0.18 1580357/1580357     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[97]     2.4    0.01    0.18 1580357         std::future<void>::~future() [97]
                0.02    0.16 1588993/1588993     std::__basic_future<void>::~__basic_future() [100]
-----------------------------------------------
                0.01    0.17  549215/549215      std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [96]
[98]     2.4    0.01    0.17  549215         void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [98]
                0.01    0.16  548925/548925      Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const [103]
                0.00    0.00  549353/1098392     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>::type&) [879]
-----------------------------------------------
                0.01    0.17 5623370/5623370     double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&) [92]
[99]     2.4    0.01    0.17 5623370         double* std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [99]
                0.00    0.17 5620890/5620890     double* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [108]
-----------------------------------------------
                0.02    0.16 1588993/1588993     std::future<void>::~future() [97]
[100]    2.4    0.02    0.16 1588993         std::__basic_future<void>::~__basic_future() [100]
                0.00    0.16 1621575/3175631     std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [64]
-----------------------------------------------
                0.01    0.17 1157194/1157194     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
[101]    2.3    0.01    0.17 1157194         void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [101]
                0.00    0.17 1154893/1154893     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
                0.00    0.00 1157254/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1153708/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.17  550319/550319      std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
[102]    2.3    0.00    0.17  550319         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [102]
                0.00    0.17  550603/550603      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [105]
                0.00    0.00  550520/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  550268/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.01    0.16  548925/548925      void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [98]
[103]    2.3    0.01    0.16  548925         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const [103]
                0.03    0.12  548268/1723479     std::packaged_task<void ()>::operator()() [44]
                0.00    0.01  548862/1722945     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [296]
-----------------------------------------------
                0.01    0.02  686232/3992437     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.01    0.06 1628720/3992437     std::__future_base::_State_baseV2::~_State_baseV2() [205]
                0.01    0.06 1677485/3992437     std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [21]
[104]    2.3    0.03    0.14 3992437         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
                0.06    0.04 1651327/1651327     std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [168]
                0.02    0.01 3996134/7366779     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [286]
                0.01    0.01 1643897/1643897     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [419]
                0.00    0.00 1652346/6698503     std::remove_reference<std::__future_base::_Result_base*&>::type&& std::move<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [478]
-----------------------------------------------
                0.00    0.17  550603/550603      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [102]
[105]    2.2    0.00    0.17  550603         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [105]
                0.00    0.17  550516/550516      std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
                0.00    0.00  550576/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  550113/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.01    0.16 1143754/1143754     std::_Function_base::~_Function_base() [68]
[106]    2.2    0.01    0.16 1143754         std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [106]
                0.02    0.14 1138357/1138357     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [113]
-----------------------------------------------
                0.01    0.16 5626333/5626333     double* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [108]
[107]    2.2    0.01    0.16 5626333         double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [107]
                0.04    0.12 5633450/5633450     double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
                0.00    0.00 11262556/14146436     __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [801]
-----------------------------------------------
                0.00    0.17 5620890/5620890     double* std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [99]
[108]    2.2    0.00    0.17 5620890         double* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [108]
                0.01    0.16 5626333/5626333     double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [107]
-----------------------------------------------
                0.00    0.17  550516/550516      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [105]
[109]    2.2    0.00    0.17  550516         std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
                0.00    0.16  549736/549736      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.01    0.00  545330/545330      std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [520]
                0.00    0.00  550318/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  549880/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.17 1154893/1154893     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [101]
[110]    2.2    0.00    0.17 1154893         decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
                0.00    0.16 1156242/1156242     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [111]
                0.00    0.00 1160488/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00 1155225/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
                0.00    0.00 1160322/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.16 1156242/1156242     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
[111]    2.2    0.00    0.16 1156242         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [111]
                0.01    0.14 1153925/1700331     std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [85]
                0.01    0.00 1162488/1162488     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [440]
                0.00    0.00 1163814/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.02    0.04  544302/1714822     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
                0.03    0.08 1170520/1714822     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
[112]    2.2    0.05    0.11 1714822         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
                0.04    0.06 1716866/1716866     void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [161]
                0.01    0.00 1715014/1715014     bool* std::__addressof<bool>(bool&) [493]
                0.00    0.00 1720426/1720426     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&) [841]
-----------------------------------------------
                0.02    0.14 1138357/1138357     std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [106]
[113]    2.1    0.02    0.14 1138357         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [113]
                0.01    0.13 1133185/1133185     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [121]
-----------------------------------------------
                0.04    0.12 5633450/5633450     double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [107]
[114]    2.1    0.04    0.12 5633450         double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
                0.03    0.07 5640998/7092191     double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*) [137]
                0.01    0.00 11275598/14164397     double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [423]
                0.01    0.00 5632926/5637526     double* std::__niter_wrap<double*>(double* const&, double*) [467]
                0.00    0.00 5632322/5636922     double* std::__niter_base<double*>(double*) [813]
-----------------------------------------------
                0.00    0.16  549736/549736      std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
[115]    2.1    0.00    0.16  549736         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.01    0.13  547056/547056      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00  545153/1582031     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [504]
                0.00    0.00  545268/1008979     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [576]
                0.00    0.00  549483/1040779     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [575]
                0.00    0.00  544947/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00  547449/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  547980/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00  550068/550068      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [680]
                0.00    0.00  547836/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  545704/1037019     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [683]
                0.00    0.00  547844/547844      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [924]
                0.00    0.00  547714/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
                0.00    0.00  545655/545655      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [927]
-----------------------------------------------
                0.00    0.04   93332/392285      std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [307]
                0.00    0.04   99267/392285      std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [298]
                0.00    0.08  199686/392285      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[116]    2.0    0.00    0.15  392285         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.12  393813/393813      Math::Matrix* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, std::allocator<Math::Matrix>&) [139]
                0.02    0.00  393703/393703      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() const [367]
                0.01    0.00  392524/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
                0.00    0.00  393786/393786      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() const [632]
                0.00    0.00  392637/692583      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [671]
                0.00    0.00  393327/1392409     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [863]
                0.00    0.00  393083/1692170     std::allocator<Math::Matrix>::~allocator() [855]
                0.00    0.00  392757/392757      __gnu_cxx::__alloc_traits<std::allocator<Math::Matrix>, Math::Matrix>::_S_select_on_copy(std::allocator<Math::Matrix> const&) [937]
                0.00    0.00  392326/392340      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() const [939]
-----------------------------------------------
                0.00    0.00       7/5015028     FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
                0.00    0.00     400/5015028     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00    4600/5015028     generateData(int) [611]
                0.00    0.00   29906/5015028     Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.00   37383/5015028     std::_Head_base<1ul, Math::Matrix, false>::~_Head_base() [659]
                0.00    0.00   37390/5015028     std::_Head_base<0ul, Math::Matrix, false>::~_Head_base() [657]
                0.00    0.00   45803/5015028     FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.00   74749/5015028     FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   99843/5015028     Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [323]
                0.00    0.01  199900/5015028     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.00    0.01  241101/5015028     FFNN::feedForward(Math::Matrix) [46]
                0.00    0.04 1398313/5015028     void std::destroy_at<Math::Matrix>(Math::Matrix*) [248]
                0.00    0.08 2845633/5015028     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[117]    1.9    0.00    0.15 5015028         Math::Matrix::~Matrix() [117]
                0.02    0.12 5016017/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
-----------------------------------------------
                0.00    0.14  750112/750112      std::function<void (int, int)>::operator()(int, int) const [70]
[118]    1.9    0.00    0.14  750112         std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [118]
                0.00    0.14  749560/749560      std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [124]
                0.00    0.00  749272/749272      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [636]
                0.00    0.00 1499575/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
-----------------------------------------------
                0.01    0.13  547056/547056      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[119]    1.9    0.01    0.13  547056         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.01    0.10  546966/546966      void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [154]
                0.01    0.00  547789/547789      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [453]
                0.00    0.00  547575/1582031     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [504]
                0.00    0.00  547462/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00  547918/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  547112/3400513     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [537]
                0.00    0.00  547058/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00  547736/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.00     200/299942      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.14  299742/299942      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[120]    1.8    0.00    0.14  299942         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
                0.00    0.13  299949/299949      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long) [132]
                0.00    0.00  299934/299934      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [600]
                0.00    0.00  299946/692583      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [671]
-----------------------------------------------
                0.01    0.13 1133185/1133185     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [113]
[121]    1.8    0.01    0.13 1133185         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [121]
                0.01    0.12 1140004/2312872     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future() [76]
                0.00    0.00 1137772/2304955     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() [835]
-----------------------------------------------
                0.12    0.02  751464/751464      void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [123]
[122]    1.8    0.12    0.02  751464         Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [122]
                0.01    0.01 2007572/9009094     Math::Matrix::operator[](int) const [213]
                0.00    0.00 4010547/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.14  750237/750237      std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [124]
[123]    1.8    0.00    0.14  750237         void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [123]
                0.12    0.02  751464/751464      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [122]
                0.00    0.00 1502965/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  749917/1501176     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [861]
-----------------------------------------------
                0.00    0.14  749560/749560      std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [118]
[124]    1.8    0.00    0.14  749560         std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [124]
                0.00    0.14  750237/750237      void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [123]
                0.00    0.00 1500287/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  751259/1501176     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [861]
-----------------------------------------------
                0.02    0.12 1701220/1701220     std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [85]
[125]    1.8    0.02    0.12 1701220         std::__future_base::_State_baseV2::_State_baseV2() [125]
                0.01    0.04 1700264/1700264     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [265]
                0.01    0.02 1701575/1701575     std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [344]
                0.03    0.00 1701323/1701323     std::once_flag::once_flag() [345]
                0.01    0.00 1699511/1699511     std::atomic_flag::atomic_flag(bool) [497]
-----------------------------------------------
                0.00    0.00    4600/6186170     void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
                0.00    0.02  981623/6186170     std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [369]
                0.03    0.09 5199947/6186170     double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [56]
[126]    1.8    0.03    0.11 6186170         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [126]
                0.05    0.06 6191835/6191835     std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [158]
-----------------------------------------------
                0.00    0.13  544872/544872      std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
[127]    1.8    0.00    0.13  544872         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [127]
                0.00    0.13  544587/544587      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [128]
                0.00    0.00  544648/1089054     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [880]
-----------------------------------------------
                0.00    0.13  544587/544587      std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [127]
[128]    1.8    0.00    0.13  544587         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [128]
                0.01    0.12  543686/543686      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [138]
                0.00    0.01  540144/1693355     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [329]
                0.00    0.00  538706/2374057     std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [491]
-----------------------------------------------
                0.00    0.13  299952/299952      Math::Matrix* std::__uninitialized_default_n_a<Math::Matrix*, unsigned long, Math::Matrix>(Math::Matrix*, unsigned long, std::allocator<Math::Matrix>&) [130]
[129]    1.8    0.00    0.13  299952         Math::Matrix* std::__uninitialized_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [129]
                0.02    0.11  299949/299949      Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [131]
-----------------------------------------------
                0.00    0.13  299950/299950      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long) [132]
[130]    1.8    0.00    0.13  299950         Math::Matrix* std::__uninitialized_default_n_a<Math::Matrix*, unsigned long, Math::Matrix>(Math::Matrix*, unsigned long, std::allocator<Math::Matrix>&) [130]
                0.00    0.13  299952/299952      Math::Matrix* std::__uninitialized_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [129]
-----------------------------------------------
                0.02    0.11  299949/299949      Math::Matrix* std::__uninitialized_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [129]
[131]    1.8    0.02    0.11  299949         Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [131]
                0.01    0.10  599932/599932      void std::_Construct<Math::Matrix>(Math::Matrix*) [151]
                0.00    0.00  599926/2790156     Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&) [830]
-----------------------------------------------
                0.00    0.13  299949/299949      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
[132]    1.8    0.00    0.13  299949         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long) [132]
                0.00    0.13  299950/299950      Math::Matrix* std::__uninitialized_default_n_a<Math::Matrix*, unsigned long, Math::Matrix>(Math::Matrix*, unsigned long, std::allocator<Math::Matrix>&) [130]
                0.00    0.00  299948/1392409     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [863]
-----------------------------------------------
                0.00    0.00       1/5408717     Math::ThreadPool::stop() [741]
                0.01    0.00  448289/5408717     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.01    0.01  536463/5408717     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.01    0.01  544650/5408717     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const [144]
                0.02    0.01 1158348/5408717     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
                0.02    0.01 1160116/5408717     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const [60]
                0.02    0.02 1560850/5408717     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[133]    1.8    0.08    0.05 5408717         std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.01    0.03 5444392/5444392     std::unique_lock<std::mutex>::lock() [301]
                0.01    0.00 5425038/5425038     std::mutex* std::__addressof<std::mutex>(std::mutex&) [437]
-----------------------------------------------
                0.00    0.13  527365/527365      std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
[134]    1.7    0.00    0.13  527365         decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [134]
                0.00    0.13  533015/533015      std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
                0.00    0.00  528857/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.00    0.13  533015/533015      decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [134]
[135]    1.7    0.00    0.13  533015         std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
                0.02    0.04  101080/101080      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
                0.00    0.05  432810/534302      void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [216]
                0.01    0.01  533265/1702561     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
                0.00    0.00  532460/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.01    0.11 1735133/1735133     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[136]    1.7    0.01    0.11 1735133         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [136]
                0.01    0.10 1734501/1734501     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [152]
-----------------------------------------------
                0.00    0.00    4600/7092191     double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
                0.01    0.02 1446593/7092191     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
                0.03    0.07 5640998/7092191     double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
[137]    1.7    0.04    0.09 7092191         double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*) [137]
                0.05    0.05 7082906/7082906     double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*) [180]
-----------------------------------------------
                0.01    0.12  543686/543686      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [128]
[138]    1.6    0.01    0.12  543686         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [138]
                0.00    0.12  543588/543588      std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [146]
-----------------------------------------------
                0.00    0.12  393813/393813      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[139]    1.6    0.00    0.12  393813         Math::Matrix* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, std::allocator<Math::Matrix>&) [139]
                0.01    0.12  393767/393767      Math::Matrix* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [140]
-----------------------------------------------
                0.01    0.12  393767/393767      Math::Matrix* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, std::allocator<Math::Matrix>&) [139]
[140]    1.6    0.01    0.12  393767         Math::Matrix* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [140]
                0.00    0.12  393862/393862      Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
-----------------------------------------------
                0.00    0.00    3646/1165226     void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.12 1161580/1165226     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
[141]    1.6    0.00    0.12 1165226         void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [141]
                0.02    0.10 1163862/1163862     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [143]
                0.00    0.00 1164241/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.11    0.01 1729716/1729716     std::function<void ()>::operator=(std::function<void ()>&&) [71]
[142]    1.6    0.11    0.01 1729716         std::function<void ()>::function(std::function<void ()>&&) [142]
                0.00    0.01 1722890/1722890     std::function<void ()>::operator bool() const [542]
                0.00    0.00 1726698/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.02    0.10 1163862/1163862     void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [141]
[143]    1.6    0.02    0.10 1163862         decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [143]
                0.01    0.09 1166561/1166561     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
                0.00    0.00 1167096/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
                0.00    0.00 1168637/12671680     operator new(unsigned long, void*) [472]
-----------------------------------------------
                0.00    0.12  544951/544951      void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [145]
[144]    1.5    0.00    0.12  544951         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const [144]
                0.00    0.09  543706/1705635     std::function<void (int, int)>::operator()(int, int) const [70]
                0.01    0.01  544650/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.00    0.01  547092/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
-----------------------------------------------
                0.00    0.12  544039/544039      std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [146]
[145]    1.5    0.00    0.12  544039         void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [145]
                0.00    0.12  544951/544951      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const [144]
                0.00    0.00  544471/1088605     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&) [881]
-----------------------------------------------
                0.00    0.12  543588/543588      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const [138]
[146]    1.5    0.00    0.12  543588         std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [146]
                0.00    0.12  544039/544039      void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [145]
                0.00    0.00  544134/1088605     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&) [881]
-----------------------------------------------
                0.00    0.00       5/792030      Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [726]
                0.00    0.12  792025/792030      Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
[147]    1.5    0.00    0.12  792030         void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
                0.01    0.11  792407/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00  792567/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  792181/792181      Math::Matrix const& std::forward<Math::Matrix const&>(std::remove_reference<Math::Matrix const&>::type&) [889]
-----------------------------------------------
                0.00    0.12  393862/393862      Math::Matrix* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [140]
[148]    1.5    0.00    0.12  393862         Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
                0.00    0.12  792025/792030      void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
                0.00    0.00 1190102/1190102     bool __gnu_cxx::operator==<Math::Matrix const*, Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [869]
                0.00    0.00  796189/796189      __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator++() [888]
                0.00    0.00  791940/2790156     Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&) [830]
                0.00    0.00  791843/791843      __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [890]
-----------------------------------------------
                0.00    0.03 1588167/4879967     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [304]
                0.00    0.03 1595121/4879967     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [237]
                0.00    0.04 1696679/4879967     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [293]
[149]    1.5    0.01    0.10 4879967         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [149]
                0.10    0.00 4875641/4875641     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [160]
-----------------------------------------------
                0.04    0.08 1535987/1535987     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[150]    1.5    0.04    0.08 1535987         void std::condition_variable::wait<Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}) [150]
                0.03    0.05 2911210/2911210     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const [193]
-----------------------------------------------
                0.01    0.10  599932/599932      Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [131]
[151]    1.5    0.01    0.10  599932         void std::_Construct<Math::Matrix>(Math::Matrix*) [151]
                0.00    0.10  599939/599939      Math::Matrix::Matrix() [164]
                0.00    0.00  599941/12671680     operator new(unsigned long, void*) [472]
-----------------------------------------------
                0.01    0.10 1734501/1734501     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [136]
[152]    1.5    0.01    0.10 1734501         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [152]
                0.00    0.09 1621704/1731035     void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [174]
                0.00    0.01  109570/109570      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
                0.00    0.00 1625523/1734994     std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [839]
-----------------------------------------------
                0.00    0.00       1/5615318     Math::ThreadPool::stop() [741]
                0.00    0.01  468066/5615318     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
                0.00    0.01  534814/5615318     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.00    0.01  547092/5615318     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const [144]
                0.01    0.01 1159252/5615318     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const [60]
                0.01    0.01 1174405/5615318     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
                0.01    0.02 1731688/5615318     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[153]    1.5    0.04    0.07 5615318         std::unique_lock<std::mutex>::~unique_lock() [153]
                0.03    0.04 5603723/5603723     std::unique_lock<std::mutex>::unlock() [207]
-----------------------------------------------
                0.01    0.10  546966/546966      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
[154]    1.5    0.01    0.10  546966         void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [154]
                0.00    0.10  546521/546521      decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
                0.00    0.00  546887/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  546326/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.01    0.10 1610650/1610650     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[155]    1.4    0.01    0.10 1610650         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
                0.02    0.04 1635174/1635174     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [219]
                0.02    0.01 1641839/3348331     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [244]
                0.01    0.00 1620949/3261261     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [389]
                0.00    0.00 1633954/3343559     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [568]
                0.00    0.00 1636904/3327561     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [826]
                0.00    0.00 1594003/3299112     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [827]
-----------------------------------------------
                0.00    0.11 1165780/1165780     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::~shared_ptr() [157]
[156]    1.4    0.00    0.11 1165780         std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [156]
                0.04    0.07 1168052/9847904     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
-----------------------------------------------
                0.00    0.11 1163893/1163893     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
[157]    1.4    0.00    0.11 1163893         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::~shared_ptr() [157]
                0.00    0.11 1165780/1165780     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [156]
-----------------------------------------------
                0.05    0.06 6191835/6191835     std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [126]
[158]    1.4    0.05    0.06 6191835         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [158]
                0.04    0.01 6189801/6189801     __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [252]
                0.01    0.00 6185544/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.05  473483/1008520     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [242]
                0.00    0.06  535037/1008520     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
[159]    1.4    0.00    0.11 1008520         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future() [159]
                0.00    0.10  997229/4855539     std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [39]
-----------------------------------------------
                0.10    0.00 4875641/4875641     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [149]
[160]    1.4    0.10    0.00 4875641         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [160]
-----------------------------------------------
                0.04    0.06 1716866/1716866     std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
[161]    1.4    0.04    0.06 1716866         void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [161]
                0.03    0.00 1668431/1668431     std::once_flag::_Prepare_execution::~_Prepare_execution() [346]
                0.02    0.00 1718563/1718563     __gthread_once(int*, void (*)()) [362]
                0.01    0.00 1712564/1712564     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [494]
-----------------------------------------------
                0.01    0.09 1438466/1438466     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[162]    1.4    0.01    0.09 1438466         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [162]
                0.01    0.08 1441894/1441894     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
                0.00    0.00 2883880/14146436     __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [801]
-----------------------------------------------
                0.02    0.08  194172/194172      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[163]    1.4    0.02    0.08  194172         Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.04  389946/420488      Math::Matrix::getVals() const [295]
                0.00    0.03  197492/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.01  397776/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00  588686/1408266     Math::Matrix::operator[](int) [550]
                0.00    0.00  785493/9549935     std::vector<double, std::allocator<double> >::size() const [339]
                0.00    0.00  588556/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
                0.00    0.00  394237/1192189     Math::Matrix::getRows() const [868]
                0.00    0.00  393958/1391236     Math::Matrix::getCols() const [864]
-----------------------------------------------
                0.00    0.10  599939/599939      void std::_Construct<Math::Matrix>(Math::Matrix*) [151]
[164]    1.4    0.00    0.10  599939         Math::Matrix::Matrix() [164]
                0.00    0.07  599951/599951      std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&) [210]
                0.01    0.01 1199864/5551531     std::vector<double, std::allocator<double> >::vector() [182]
                0.00    0.01  599972/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
-----------------------------------------------
                0.01    0.10  547215/547215      std::packaged_task<void ()>::operator()() [44]
[165]    1.4    0.01    0.10  547215         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
                0.02    0.04  544302/1714822     std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
                0.01    0.02  491623/1639363     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [190]
                0.01    0.00  546872/546872      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
                0.01    0.00  546064/546064      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [519]
-----------------------------------------------
                0.04    0.07 7165318/7165318     std::vector<double, std::allocator<double> >::~vector() [86]
[166]    1.4    0.04    0.07 7165318         std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [166]
                0.01    0.02 7167561/12385191     std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [217]
                0.01    0.03 7143205/7143205     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [331]
-----------------------------------------------
                0.03    0.07 1126787/1126787     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[167]    1.3    0.03    0.07 1126787         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [167]
                0.00    0.07 1140518/1140518     void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [200]
                0.00    0.00 1137308/2277962     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [838]
                0.00    0.00 1130465/3448951     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [821]
-----------------------------------------------
                0.06    0.04 1651327/1651327     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
[168]    1.3    0.06    0.04 1651327         std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [168]
                0.03    0.01 1638007/1638007     std::__future_base::_Result<void>::_M_destroy() [289]
-----------------------------------------------
                0.00    0.10  546521/546521      void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [154]
[169]    1.3    0.00    0.10  546521         decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
                0.00    0.10  546905/546905      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [173]
                0.00    0.00  546478/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  547409/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  547283/11927243     std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.01    0.03 5214506/12378430     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.02    0.04 7163924/12378430     std::vector<double, std::allocator<double> >::~vector() [86]
[170]    1.3    0.04    0.06 12378430         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [170]
                0.04    0.02 12369113/12369113     void std::_Destroy<double*>(double*, double*) [215]
-----------------------------------------------
                0.00    0.01   99769/559510      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.01    0.03  199491/559510      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.01    0.04  260250/559510      Math::Matrix::operator*=(Math::Matrix const&) [14]
[171]    1.3    0.01    0.08  559510         std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
                0.00    0.05  559527/559527      std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [267]
                0.00    0.02  559447/981313      std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
                0.01    0.01  559480/564087      std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
-----------------------------------------------
                0.00    0.03  501987/1642678     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state() [335]
                0.00    0.07 1140691/1642678     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state() [201]
[172]    1.3    0.00    0.10 1642678         std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [172]
                0.00    0.07 1630723/1630723     std::__future_base::_State_baseV2::~_State_baseV2() [205]
                0.01    0.01 1628589/3320731     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [234]
-----------------------------------------------
                0.00    0.10  546905/546905      decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
[173]    1.3    0.00    0.10  546905         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [173]
                0.01    0.07  546406/1700331     std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [85]
                0.02    0.00  546333/546333      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [365]
                0.00    0.00  546507/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.00    0.01  109331/1731035     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
                0.00    0.09 1621704/1731035     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [152]
[174]    1.3    0.00    0.10 1731035         void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [174]
                0.00    0.10 1729869/1729869     void std::destroy_at<std::function<void ()> >(std::function<void ()>*) [175]
-----------------------------------------------
                0.00    0.10 1729869/1729869     void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [174]
[175]    1.3    0.00    0.10 1729869         void std::destroy_at<std::function<void ()> >(std::function<void ()>*) [175]
                0.03    0.07 1733095/5092084     std::function<void ()>::~function() [73]
-----------------------------------------------
                0.01    0.09 1166561/1166561     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [143]
[176]    1.3    0.01    0.09 1166561         std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
                0.03    0.05 1170609/1170609     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [191]
                0.00    0.00 1169066/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
                0.00    0.00 1165012/1165012     bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1} const&) [870]
                0.00    0.00 1164823/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.01    0.08 1441894/1441894     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [162]
[177]    1.2    0.01    0.08 1441894         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
                0.02    0.03 1438742/1438742     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*) [281]
                0.01    0.02 1446593/7092191     double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*) [137]
                0.01    0.00 1441414/2881368     double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [361]
                0.00    0.00 2888799/14164397     double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [423]
-----------------------------------------------
                0.00    0.09 1685826/1685826     std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [21]
[178]    1.2    0.00    0.09 1685826         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [178]
                0.02    0.07 1681583/1681583     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
-----------------------------------------------
                0.02    0.07 1681583/1681583     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [178]
[179]    1.2    0.02    0.07 1681583         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
                0.01    0.02 3364655/5006930     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [325]
                0.01    0.00 3370645/7366779     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [286]
                0.01    0.01 1686676/1686676     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base*> >, std::is_move_constructible<std::__future_base::_Result_base*>, std::is_move_assignable<std::__future_base::_Result_base*> >::value, void>::type std::swap<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&, std::__future_base::_Result_base*&) [410]
                0.01    0.01 1680003/1680003     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base::_Deleter> >, std::is_move_constructible<std::__future_base::_Result_base::_Deleter>, std::is_move_assignable<std::__future_base::_Result_base::_Deleter> >::value, void>::type std::swap<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&, std::__future_base::_Result_base::_Deleter&) [429]
-----------------------------------------------
                0.05    0.05 7082906/7082906     double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*) [137]
[180]    1.2    0.05    0.05 7082906         double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*) [180]
                0.04    0.00 7091476/7091476     double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [284]
                0.01    0.00 7082984/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.09      50/50          FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[181]    1.2    0.00    0.09      50         void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
                0.00    0.09   99950/99950       void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [188]
                0.00    0.00   49950/49950       std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [601]
                0.00    0.00      50/50000       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [586]
                0.00    0.00  100000/100200      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const [972]
                0.00    0.00   99950/99950       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++(int) [975]
                0.00    0.00   50050/50050       bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1007]
                0.00    0.00   50000/50122       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1006]
                0.00    0.00      50/50000       std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long) [1012]
-----------------------------------------------
                0.00    0.00    4600/5551531     Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [679]
                0.00    0.00  259437/5551531     Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.01    0.01 1199864/5551531     Math::Matrix::Matrix() [164]
                0.03    0.04 4087630/5551531     Math::Matrix::Matrix(Math::Matrix const&) [33]
[182]    1.2    0.04    0.05 5551531         std::vector<double, std::allocator<double> >::vector() [182]
                0.01    0.03 5560921/5560921     std::_Vector_base<double, std::allocator<double> >::_Vector_base() [256]
-----------------------------------------------
                0.01    0.08   92596/92596       FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[183]    1.2    0.01    0.08   92596         std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [183]
                0.01    0.07   93008/93008       std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [194]
                0.00    0.00  185732/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.00    0.04   99950/199900      std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
                0.00    0.04   99950/199900      std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&) [279]
[184]    1.2    0.00    0.09  199900         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.00    0.05  399800/2026739     Math::Matrix::operator=(Math::Matrix const&) [75]
                0.00    0.03  199900/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.01  199900/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00  599700/599707      std::remove_reference<Math::Matrix&>::type&& std::move<Math::Matrix&>(Math::Matrix&) [904]
-----------------------------------------------
                0.00    0.09   99950/99950       std::tuple<Math::Matrix, Math::Matrix>::swap(std::tuple<Math::Matrix, Math::Matrix>&) [186]
[185]    1.2    0.00    0.09   99950         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
                0.00    0.04   99950/199900      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.00    0.04   99950/99950       std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&) [279]
                0.00    0.00  199900/230133      std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [949]
                0.00    0.00   99950/99950       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_tail(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [976]
-----------------------------------------------
                0.00    0.09   99950/99950       std::enable_if<std::__and_<std::__is_swappable<Math::Matrix>, std::__is_swappable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&, std::tuple<Math::Matrix, Math::Matrix>&) [187]
[186]    1.2    0.00    0.09   99950         std::tuple<Math::Matrix, Math::Matrix>::swap(std::tuple<Math::Matrix, Math::Matrix>&) [186]
                0.00    0.09   99950/99950       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
-----------------------------------------------
                0.00    0.09   99950/99950       void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [188]
[187]    1.2    0.00    0.09   99950         std::enable_if<std::__and_<std::__is_swappable<Math::Matrix>, std::__is_swappable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&, std::tuple<Math::Matrix, Math::Matrix>&) [187]
                0.00    0.09   99950/99950       std::tuple<Math::Matrix, Math::Matrix>::swap(std::tuple<Math::Matrix, Math::Matrix>&) [186]
-----------------------------------------------
                0.00    0.09   99950/99950       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[188]    1.2    0.00    0.09   99950         void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [188]
                0.00    0.09   99950/99950       std::enable_if<std::__and_<std::__is_swappable<Math::Matrix>, std::__is_swappable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&, std::tuple<Math::Matrix, Math::Matrix>&) [187]
                0.00    0.00  199900/202200      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [955]
-----------------------------------------------
                0.01    0.01 1700847/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [328]
                0.01    0.01 1708146/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [312]
                0.01    0.01 3324965/11506648     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [234]
                0.02    0.02 4772690/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [271]
[189]    1.1    0.04    0.04 11506648         std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
                0.03    0.02 11511086/11511086     std::tuple_element<0ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [274]
-----------------------------------------------
                0.01    0.02  491623/1639363     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
                0.01    0.05 1147740/1639363     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
[190]    1.1    0.02    0.06 1639363         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [190]
                0.00    0.06 1640731/7687065     std::_Function_base::~_Function_base() [68]
-----------------------------------------------
                0.03    0.05 1170609/1170609     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
[191]    1.1    0.03    0.05 1170609         void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [191]
                0.01    0.04 1167853/1167853     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [243]
                0.00    0.00 1168071/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.00    0.02   57822/256513      FFNN::feedForward(Math::Matrix) [46]
                0.00    0.06  198691/256513      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[192]    1.1    0.00    0.08  256513         Activation::Sigmoid::fn(Math::Matrix) [192]
                0.00    0.03  258762/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.03  256456/454544      Math::Matrix::applyFnHere(std::function<double (double)>) [264]
                0.00    0.01  258871/458327      std::function<double (double)>::~function() [408]
                0.01    0.00  256326/256326      std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
-----------------------------------------------
                0.03    0.05 2911210/2911210     void std::condition_variable::wait<Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}) [150]
[193]    1.1    0.03    0.05 2911210         Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const [193]
                0.02    0.03 2864673/2864677     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [253]
-----------------------------------------------
                0.01    0.07   93008/93008       std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [183]
[194]    1.1    0.01    0.07   93008         std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [194]
                0.00    0.07   93472/93472       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [198]
                0.00    0.00  186299/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.02    0.06 1140659/1140659     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[195]    1.0    0.02    0.06 1140659         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.01    0.02 1141199/1141199     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [352]
                0.00    0.01 1146743/2311911     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [373]
                0.01    0.00 1144026/2293341     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [393]
                0.00    0.00 1144677/2295267     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [392]
                0.00    0.00 1140654/2277962     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [838]
                0.00    0.00 1128327/2294960     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [836]
-----------------------------------------------
                0.01    0.07 2385053/2385053     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
[196]    1.0    0.01    0.07 2385053         std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [196]
                0.01    0.06 2379984/2379984     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [209]
-----------------------------------------------
                0.07    0.00 1601628/1601628     std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
[197]    1.0    0.07    0.00 1601628         std::__future_base::_State_baseV2::_M_set_retrieved_flag() [197]
-----------------------------------------------
                0.00    0.07   93472/93472       std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [194]
[198]    1.0    0.00    0.07   93472         std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [198]
                0.00    0.04   99265/99265       std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [298]
                0.00    0.04   93404/93404       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [308]
                0.00    0.00  192423/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.00    0.00       3/699099      FFNN::~FFNN() [616]
                0.00    0.01   99879/699099      std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [380]
                0.00    0.01   99880/699099      std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [456]
                0.00    0.02  199955/699099      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.03  299382/699099      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[199]    1.0    0.00    0.07  699099         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
                0.00    0.05  699108/699115      void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [246]
                0.00    0.02  699171/699171      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base() [378]
                0.00    0.00  699113/1392409     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [863]
-----------------------------------------------
                0.00    0.07 1140518/1140518     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [167]
[200]    0.9    0.00    0.07 1140518         void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [200]
                0.00    0.07 1137840/1137840     void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [202]
-----------------------------------------------
                0.00    0.07 1138110/1138110     void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [202]
[201]    0.9    0.00    0.07 1138110         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state() [201]
                0.00    0.07 1140691/1642678     std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [172]
                0.00    0.00 1138498/1138498     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::~_Impl() [608]
-----------------------------------------------
                0.00    0.07 1137840/1137840     void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [200]
[202]    0.9    0.00    0.07 1137840         void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [202]
                0.00    0.07 1138110/1138110     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state() [201]
-----------------------------------------------
                0.01    0.06  576329/576329      std::function<void (int, int)>::operator()(int, int) const [70]
[203]    0.9    0.01    0.06  576329         std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [203]
                0.00    0.05  576010/576010      std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [263]
                0.00    0.01  575736/575736      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [444]
                0.00    0.00 1151851/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
-----------------------------------------------
                             1646510             std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [502]
                0.02    0.03  544544/9847904     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [260]
                0.04    0.07 1168052/9847904     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [156]
                0.10    0.19 3224836/9847904     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [65]
                0.15    0.29 4910472/9847904     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [41]
[204]    0.9    0.07    0.00 11494414         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
                             8094142             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
-----------------------------------------------
                0.00    0.07 1630723/1630723     std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [172]
[205]    0.9    0.00    0.07 1630723         std::__future_base::_State_baseV2::~_State_baseV2() [205]
                0.01    0.06 1628720/3992437     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
-----------------------------------------------
                0.00    0.07  197586/197586      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[206]    0.9    0.00    0.07  197586         Activation::Sigmoid::fnDerv(Math::Matrix) [206]
                0.00    0.03  199439/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.02  198088/454544      Math::Matrix::applyFnHere(std::function<double (double)>) [264]
                0.00    0.01  197575/197575      std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
                0.00    0.01  199456/458327      std::function<double (double)>::~function() [408]
-----------------------------------------------
                0.03    0.04 5603723/5603723     std::unique_lock<std::mutex>::~unique_lock() [153]
[207]    0.9    0.03    0.04 5603723         std::unique_lock<std::mutex>::unlock() [207]
                0.00    0.04 5595315/5595315     std::mutex::unlock() [300]
-----------------------------------------------
                0.00    0.02  550881/1712625     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.01    0.04 1161744/1712625     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
[208]    0.9    0.01    0.06 1712625         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [208]
                0.03    0.03 1708371/1708371     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [224]
                0.00    0.00 1690657/3327561     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [826]
-----------------------------------------------
                0.01    0.06 2379984/2379984     std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [196]
[209]    0.9    0.01    0.06 2379984         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [209]
                0.00    0.05 2383583/2383583     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235]
                0.00    0.00 2380780/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.00    0.07  599951/599951      Math::Matrix::Matrix() [164]
[210]    0.9    0.00    0.07  599951         std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&) [210]
                0.00    0.06  599953/599953      std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
                0.01    0.00  599950/599950      std::remove_reference<std::vector<double, std::allocator<double> >&>::type&& std::move<std::vector<double, std::allocator<double> >&>(std::vector<double, std::allocator<double> >&) [513]
-----------------------------------------------
                0.00    0.07 1697445/1697445     std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [85]
[211]    0.9    0.00    0.07 1697445         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&) [211]
                0.03    0.04 1695640/1695640     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<void>*) [212]
                0.00    0.00 1698315/1698315     std::__future_base::_Result<void>::_Result() [854]
-----------------------------------------------
                0.03    0.04 1695640/1695640     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&) [211]
[212]    0.9    0.03    0.04 1695640         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<void>*) [212]
                0.00    0.04 1698189/1698189     std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [311]
-----------------------------------------------
                0.00    0.00  231786/9009094     Math::Matrix::operator-=(Math::Matrix const&) [639]
                0.00    0.00  761923/9009094     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [257]
                0.01    0.01 2007572/9009094     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [122]
                0.01    0.01 2922051/9009094     Math::Matrix::operator+=(Math::Matrix const&) [278]
                0.01    0.01 3085762/9009094     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [261]
[213]    0.9    0.04    0.03 9009094         Math::Matrix::operator[](int) const [213]
                0.03    0.00 9015715/9015715     std::vector<double, std::allocator<double> >::operator[](unsigned long) const [340]
-----------------------------------------------
                0.00    0.03 1574228/3299481     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [283]
                0.01    0.03 1725253/3299481     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [296]
[214]    0.9    0.01    0.06 3299481         std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [214]
                0.06    0.00 3305259/3305259     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [228]
-----------------------------------------------
                0.04    0.02 12369113/12369113     void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [170]
[215]    0.8    0.04    0.02 12369113         void std::_Destroy<double*>(double*, double*) [215]
                0.01    0.00 12375192/42275828     std::is_constant_evaluated() [272]
                0.01    0.00 12385172/12385172     void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [562]
-----------------------------------------------
                0.00    0.01  101492/534302      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
                0.00    0.05  432810/534302      std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
[216]    0.8    0.00    0.06  534302         void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [216]
                0.00    0.06  533521/533521      decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [221]
                0.00    0.00  533770/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.01    0.02 5217630/12385191     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.01    0.02 7167561/12385191     std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [166]
[217]    0.8    0.02    0.04 12385191         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [217]
                0.03    0.02 6195440/6195440     std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [282]
-----------------------------------------------
                0.02    0.04  101080/101080      std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
[218]    0.8    0.02    0.04  101080         void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
                0.01    0.01  101635/105306      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [375]
                0.00    0.01  101492/534302      void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [216]
                0.00    0.00  101395/105068      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [583]
                0.00    0.00  101518/105186      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
                0.00    0.00  101006/104657      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const [654]
                0.00    0.00  101102/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.00  101045/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.02    0.04 1635174/1635174     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
[219]    0.8    0.02    0.04 1635174         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [219]
                0.01    0.02 1633713/1633713     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [326]
                0.01    0.00 1644526/3286582     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [427]
-----------------------------------------------
                0.00    0.06  381552/381552      std::function<void (int, int)>::operator()(int, int) const [70]
[220]    0.8    0.00    0.06  381552         std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [220]
                0.00    0.05  381767/381767      std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [258]
                0.00    0.01  382140/382140      std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [450]
                0.00    0.00  762856/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
-----------------------------------------------
                0.00    0.06  533521/533521      void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [216]
[221]    0.8    0.00    0.06  533521         decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [221]
                0.01    0.05  535306/535306      std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
                0.00    0.00  534875/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
                0.00    0.00  536190/12671680     operator new(unsigned long, void*) [472]
-----------------------------------------------
                                                 <spontaneous>
[222]    0.8    0.06    0.00                 _init [222]
-----------------------------------------------
                0.01    0.05  535306/535306      decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [221]
[223]    0.8    0.01    0.05  535306         std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
                0.02    0.03  536772/536772      void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [266]
                0.00    0.00  535585/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
                0.00    0.00  533566/7726071     std::_Function_base::_Function_base() [806]
                0.00    0.00  533454/533454      bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1} const&) [930]
-----------------------------------------------
                0.03    0.03 1708371/1708371     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [208]
[224]    0.8    0.03    0.03 1708371         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [224]
                0.02    0.01 1705686/1705686     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [357]
                0.00    0.00 1703170/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.01    0.01  533265/1702561     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
                0.01    0.03 1169296/1702561     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
[225]    0.7    0.02    0.04 1702561         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
                0.02    0.00 1702582/1702583     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [360]
                0.01    0.00 1699637/1699637     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [549]
                0.00    0.00 1703830/3423469     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [487]
-----------------------------------------------
                0.00    0.06  599953/599953      std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&) [210]
[226]    0.7    0.00    0.06  599953         std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
                0.00    0.02 1199882/1199882     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&) [370]
                0.00    0.01  599952/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.01  599937/599937      std::vector<double, std::allocator<double> >::vector(std::allocator<double> const&) [553]
                0.00    0.01  599936/599936      std::_Vector_base<double, std::allocator<double> >::get_allocator() const [556]
                0.00    0.00 1199914/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
                0.00    0.00  599938/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00  599964/599964      void std::__alloc_on_move<std::allocator<double> >(std::allocator<double>&, std::allocator<double>&) [902]
-----------------------------------------------
                0.00    0.00       7/21191045     std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&) [735]
                0.00    0.00    9200/21191045     void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
                0.00    0.00  422461/21191045     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.00  559554/21191045     std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [267]
                0.00    0.00 1199914/21191045     std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
                0.01    0.00 5191116/21191045     double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [56]
                0.02    0.00 6650367/21191045     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.02    0.00 7158426/21191045     std::vector<double, std::allocator<double> >::~vector() [86]
[227]    0.7    0.06    0.00 21191045         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
-----------------------------------------------
                0.06    0.00 3305259/3305259     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [214]
[228]    0.7    0.06    0.00 3305259         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [228]
-----------------------------------------------
                0.00    0.06 1649445/1649445     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
[229]    0.7    0.00    0.06 1649445         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [229]
                0.04    0.01 1645149/1645149     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [230]
-----------------------------------------------
                0.04    0.01 1645149/1645149     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [229]
[230]    0.7    0.04    0.01 1645149         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [230]
                0.01    0.01 1647684/1647684     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [430]
-----------------------------------------------
                0.02    0.04  686256/686256      std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
[231]    0.7    0.02    0.04  686256         std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [231]
                0.00    0.04  686276/686276      std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [316]
-----------------------------------------------
                0.00    0.01  537747/1697403     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.01    0.03 1159656/1697403     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[232]    0.7    0.01    0.04 1697403         std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&) [232]
                0.00    0.04 1695672/1695672     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [293]
-----------------------------------------------
                0.01    0.05  543585/543585      std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
[233]    0.7    0.01    0.05  543585         std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::~shared_ptr() [233]
                0.00    0.05  543969/543969      std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [260]
-----------------------------------------------
                0.00    0.00  535877/3320731     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
                0.01    0.01 1156265/3320731     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
                0.01    0.01 1628589/3320731     std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [172]
[234]    0.7    0.03    0.02 3320731         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [234]
                0.01    0.01 3324965/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
-----------------------------------------------
                0.00    0.05 2383583/2383583     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [209]
[235]    0.7    0.00    0.05 2383583         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235]
                0.01    0.03 2385051/2385051     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
                0.01    0.00 2385495/7147746     std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [425]
                0.00    0.00 2382564/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                             1618001             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[236]    0.7    0.03    0.02 1618001         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
                0.01    0.00 1623049/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.01    0.00 1640312/3261261     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [389]
                             1647923             void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*) <cycle 1> [500]
-----------------------------------------------
                0.01    0.04 1593605/1593605     std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [238]
[237]    0.7    0.01    0.04 1593605         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [237]
                0.00    0.03 1595121/4879967     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [149]
-----------------------------------------------
                0.00    0.05 1578449/1578449     std::packaged_task<void ()>::get_future() [47]
[238]    0.7    0.00    0.05 1578449         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [238]
                0.01    0.04 1593605/1593605     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [237]
-----------------------------------------------
                0.01    0.04 1583888/1583888     std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
[239]    0.7    0.01    0.04 1583888         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [239]
                0.00    0.04 1587219/1587219     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [304]
-----------------------------------------------
                0.00    0.05  485213/485213      std::_Function_base::~_Function_base() [68]
[240]    0.7    0.00    0.05  485213         std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [240]
                0.00    0.05  474107/474107      std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [241]
-----------------------------------------------
                0.00    0.05  474107/474107      std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [240]
[241]    0.7    0.00    0.05  474107         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [241]
                0.00    0.05  469081/469081      std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [242]
-----------------------------------------------
                0.00    0.05  469081/469081      std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [241]
[242]    0.7    0.00    0.05  469081         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [242]
                0.00    0.05  473483/1008520     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future() [159]
                0.00    0.00  474844/1008023     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() [577]
-----------------------------------------------
                0.01    0.04 1167853/1167853     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [191]
[243]    0.7    0.01    0.04 1167853         void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [243]
                0.01    0.03 1169777/1169777     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::future({lambda()#1}&&) [310]
                0.00    0.00 1169014/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
                0.00    0.00 1167183/2304955     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() [835]
-----------------------------------------------
                0.01    0.00  542116/3348331     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.01    0.00 1164376/3348331     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.02    0.01 1641839/3348331     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
[244]    0.7    0.04    0.01 3348331         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [244]
                0.00    0.01 1644081/1644081     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [445]
-----------------------------------------------
                0.00    0.01   56633/241472      FFNN::feedForward(Math::Matrix) [46]
                0.00    0.04  184839/241472      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[245]    0.7    0.00    0.05  241472         Math::operator+(Math::Matrix, Math::Matrix const&) [245]
                0.00    0.03  240201/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.01    0.01  238384/637856      Math::Matrix::operator+=(Math::Matrix const&) [278]
-----------------------------------------------
                0.00    0.00       7/699115      void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.05  699108/699115      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
[246]    0.7    0.00    0.05  699115         void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [246]
                0.00    0.05  699108/699108      void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [247]
-----------------------------------------------
                0.00    0.05  699108/699108      void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [246]
[247]    0.7    0.00    0.05  699108         void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [247]
                0.00    0.05  699123/699123      void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [250]
                0.00    0.00  699114/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.01    0.04 1398295/1398295     void std::_Destroy<Math::Matrix>(Math::Matrix*) [249]
[248]    0.7    0.01    0.04 1398295         void std::destroy_at<Math::Matrix>(Math::Matrix*) [248]
                0.00    0.04 1398313/5015028     Math::Matrix::~Matrix() [117]
-----------------------------------------------
                0.00    0.05 1398295/1398295     void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [250]
[249]    0.7    0.00    0.05 1398295         void std::_Destroy<Math::Matrix>(Math::Matrix*) [249]
                0.01    0.04 1398295/1398295     void std::destroy_at<Math::Matrix>(Math::Matrix*) [248]
-----------------------------------------------
                0.00    0.05  699123/699123      void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [247]
[250]    0.7    0.00    0.05  699123         void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [250]
                0.00    0.05 1398295/1398295     void std::_Destroy<Math::Matrix>(Math::Matrix*) [249]
                0.00    0.00 1398285/2790156     Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&) [830]
-----------------------------------------------
                0.01    0.05 2384341/2384341     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
[251]    0.7    0.01    0.05 2384341         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [251]
                0.01    0.04 2384251/2384251     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [271]
-----------------------------------------------
                0.04    0.01 6189801/6189801     std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [158]
[252]    0.7    0.04    0.01 6189801         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [252]
                0.01    0.00 6191998/6191998     __gnu_cxx::new_allocator<double>::_M_max_size() const [466]
-----------------------------------------------
                0.00    0.00       4/2864677     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
                0.02    0.03 2864673/2864677     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const [193]
[253]    0.7    0.02    0.03 2864677         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [253]
                0.02    0.01 2844969/2844969     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [343]
-----------------------------------------------
                0.01    0.04 1725899/1725899     std::function<void ()>::operator=(std::function<void ()>&&) [71]
[254]    0.7    0.01    0.04 1725899         std::function<void ()>::swap(std::function<void ()>&) [254]
                0.01    0.01 1727164/1727164     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [394]
                0.01    0.01 1733312/1733312     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [428]
                0.00    0.01 1730916/1730916     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [569]
-----------------------------------------------
                0.00    0.00       1/1706161     main [1]
                0.00    0.00       1/1706161     std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [742]
                0.01    0.00  550060/1706161     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
                0.03    0.01 1156099/1706161     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
[255]    0.7    0.04    0.01 1706161         std::allocator<int>::allocator() [255]
                0.01    0.00 1708662/1708662     __gnu_cxx::new_allocator<int>::new_allocator() [495]
-----------------------------------------------
                0.01    0.03 5560921/5560921     std::vector<double, std::allocator<double> >::vector() [182]
[256]    0.7    0.01    0.03 5560921         std::_Vector_base<double, std::allocator<double> >::_Vector_base() [256]
                0.01    0.02 5561687/5561687     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [321]
-----------------------------------------------
                0.04    0.01  382030/382030      void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [259]
[257]    0.7    0.04    0.01  382030         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [257]
                0.00    0.00  761923/9009094     Math::Matrix::operator[](int) const [213]
                0.00    0.00  759771/1408266     Math::Matrix::operator[](int) [550]
                0.00    0.00  760515/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.05  381767/381767      std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [220]
[258]    0.7    0.00    0.05  381767         std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [258]
                0.00    0.05  381617/381617      void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [259]
                0.00    0.00  763190/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  382426/763599      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [895]
-----------------------------------------------
                0.00    0.05  381617/381617      std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [258]
[259]    0.7    0.00    0.05  381617         void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [259]
                0.04    0.01  382030/382030      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [257]
                0.00    0.00  764331/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  381173/763599      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [895]
-----------------------------------------------
                0.00    0.05  543969/543969      std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::~shared_ptr() [233]
[260]    0.7    0.00    0.05  543969         std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [260]
                0.02    0.03  544544/9847904     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
-----------------------------------------------
                0.03    0.02  577554/577554      void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [262]
[261]    0.6    0.03    0.02  577554         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [261]
                0.01    0.01 3085762/9009094     Math::Matrix::operator[](int) const [213]
                0.00    0.00 1543486/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.05  576619/576619      std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [263]
[262]    0.6    0.00    0.05  576619         void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [262]
                0.03    0.02  577554/577554      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [261]
                0.00    0.00 1155138/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  576610/1154115     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [872]
-----------------------------------------------
                0.00    0.05  576010/576010      std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [203]
[263]    0.6    0.00    0.05  576010         std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [263]
                0.00    0.05  576619/576619      void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [262]
                0.00    0.00 1152951/13672235     int&& std::forward<int>(std::remove_reference<int>::type&) [802]
                0.00    0.00  577505/1154115     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [872]
-----------------------------------------------
                0.00    0.02  198088/454544      Activation::Sigmoid::fnDerv(Math::Matrix) [206]
                0.00    0.03  256456/454544      Activation::Sigmoid::fn(Math::Matrix) [192]
[264]    0.6    0.00    0.05  454544         Math::Matrix::applyFnHere(std::function<double (double)>) [264]
                0.00    0.05 1368646/1368646     std::function<double (double)>::operator()(double) const [268]
                0.00    0.00 2739713/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.01    0.04 1700264/1700264     std::__future_base::_State_baseV2::_State_baseV2() [125]
[265]    0.6    0.01    0.04 1700264         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [265]
                0.01    0.04 1699429/1699429     std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl() [280]
-----------------------------------------------
                0.02    0.03  536772/536772      std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
[266]    0.6    0.02    0.03  536772         void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [266]
                0.00    0.03  535025/535025      void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [353]
                0.00    0.00  535320/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.00    0.05  559527/559527      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
[267]    0.6    0.00    0.05  559527         std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [267]
                0.00    0.05  559578/559578      double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [269]
                0.00    0.00  559554/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
-----------------------------------------------
                0.00    0.05 1368646/1368646     Math::Matrix::applyFnHere(std::function<double (double)>) [264]
[268]    0.6    0.00    0.05 1368646         std::function<double (double)>::operator()(double) const [268]
                0.01    0.02  773503/773503      std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [322]
                0.01    0.00 1369005/8242539     std::_Function_base::_M_empty() const [285]
                0.00    0.00  596335/596335      std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [614]
                0.00    0.00 1369512/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
-----------------------------------------------
                0.00    0.05  559578/559578      std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [267]
[269]    0.6    0.00    0.05  559578         double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [269]
                0.02    0.03  559569/559569      double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [270]
-----------------------------------------------
                0.02    0.03  559569/559569      double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [269]
[270]    0.6    0.02    0.03  559569         double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [270]
                0.00    0.03  559567/559567      double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [354]
-----------------------------------------------
                0.01    0.04 2384251/2384251     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [251]
[271]    0.6    0.01    0.04 2384251         std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [271]
                0.02    0.02 4772690/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
-----------------------------------------------
                0.00    0.00       1/42275828     void std::_Destroy<std::thread*>(std::thread*, std::thread*) [791]
                0.00    0.00       1/42275828     std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [779]
                0.00    0.00       1/42275828     std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long) [780]
                0.00    0.00       1/42275828     void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [793]
                0.00    0.00       2/42275828     std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [770]
                0.00    0.00       2/42275828     std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [771]
                0.00    0.00       2/42275828     int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) [773]
                0.00    0.00       3/42275828     std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long) [757]
                0.00    0.00       3/42275828     std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long) [758]
                0.00    0.00       3/42275828     void std::_Destroy<int*>(int*, int*) [462]
                0.00    0.00      22/42275828     std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [747]
                0.00    0.00      22/42275828     std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long) [748]
                0.00    0.00      24/42275828     void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [696]
                0.00    0.00   26162/42275828     std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [715]
                0.00    0.00  104766/42275828     std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long) [704]
                0.00    0.00  109301/42275828     std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long) [703]
                0.00    0.00  487156/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [684]
                0.00    0.00  548831/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [681]
                0.00    0.00  693006/42275828     std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long) [668]
                0.00    0.00  699114/42275828     void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [247]
                0.00    0.00  699175/42275828     std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long) [376]
                0.00    0.00 1143670/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [449]
                0.00    0.00 1148544/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [372]
                0.00    0.00 1444321/42275828     void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [652]
                0.00    0.00 1634281/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [445]
                0.00    0.00 1703170/42275828     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [224]
                0.01    0.00 6185544/42275828     std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [158]
                0.01    0.00 6190524/42275828     std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [282]
                0.01    0.00 7082984/42275828     double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*) [180]
                0.01    0.00 12375192/42275828     void std::_Destroy<double*>(double*, double*) [215]
[272]    0.6    0.05    0.00 42275828         std::is_constant_evaluated() [272]
-----------------------------------------------
                0.05    0.00 6636216/6636216     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[273]    0.6    0.05    0.00 6636216         std::vector<double, std::allocator<double> >::capacity() const [273]
-----------------------------------------------
                0.03    0.02 11511086/11511086     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
[274]    0.6    0.03    0.02 11511086         std::tuple_element<0ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [274]
                0.01    0.01 11499939/11499939     std::__future_base::_Result<void>*& std::__get_helper<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [382]
-----------------------------------------------
                0.00    0.00      28/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [730]
                0.00    0.00   90562/3429962     FFNN::feedForward(Math::Matrix) [46]
                0.01    0.00  392524/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.01    0.00  600611/3429962     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.03    0.00 2346237/3429962     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[275]    0.6    0.04    0.00 3429962         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
-----------------------------------------------
                0.01    0.03 2385051/2385051     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235]
[276]    0.6    0.01    0.03 2385051         std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
                0.01    0.01 2383471/2383471     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [418]
                0.00    0.00 2382358/7147746     std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [425]
                0.00    0.00 2382249/2382249     std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [602]
                0.00    0.00 2380301/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.01    0.03  487124/487124      std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[277]    0.6    0.01    0.03  487124         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [277]
                0.00    0.03  500477/500477      void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [334]
                0.00    0.00  489303/1582031     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [504]
                0.00    0.00  498136/982841      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [885]
-----------------------------------------------
                0.01    0.01  238384/637856      Math::operator+(Math::Matrix, Math::Matrix const&) [245]
                0.01    0.02  399472/637856      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[278]    0.6    0.02    0.02  637856         Math::Matrix::operator+=(Math::Matrix const&) [278]
                0.01    0.01 2922051/9009094     Math::Matrix::operator[](int) const [213]
                0.00    0.00 2924628/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.04   99950/99950       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
[279]    0.6    0.00    0.04   99950         std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&) [279]
                0.00    0.04   99950/199900      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
                0.00    0.00  199900/230093      std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&) [951]
-----------------------------------------------
                0.01    0.04 1699429/1699429     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [265]
[280]    0.6    0.01    0.04 1699429         std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl() [280]
                0.01    0.03 1702008/1702008     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [303]
-----------------------------------------------
                0.02    0.03 1438742/1438742     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
[281]    0.6    0.02    0.03 1438742         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*) [281]
                0.02    0.00 1443181/1443181     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const [424]
                0.01    0.00 1439954/2881368     double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [361]
-----------------------------------------------
                0.03    0.02 6195440/6195440     std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [217]
[282]    0.6    0.03    0.02 6195440         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [282]
                0.01    0.00 6198286/6198286     __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [479]
                0.01    0.00 6190524/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.01  470382/1631442     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
                0.01    0.02 1161060/1631442     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[283]    0.5    0.01    0.03 1631442         std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [283]
                0.00    0.03 1574228/3299481     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [214]
-----------------------------------------------
                0.04    0.00 7091476/7091476     double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*) [180]
[284]    0.5    0.04    0.00 7091476         double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [284]
-----------------------------------------------
                0.01    0.00 1369005/8242539     std::function<double (double)>::operator()(double) const [268]
                0.01    0.00 1706245/8242539     std::function<void (int, int)>::operator()(int, int) const [70]
                0.01    0.00 1712689/8242539     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [30]
                0.01    0.00 1725837/8242539     std::function<void ()>::operator()() const [31]
                0.01    0.00 1728763/8242539     std::function<void ()>::operator bool() const [542]
[285]    0.5    0.04    0.00 8242539         std::_Function_base::_M_empty() const [285]
-----------------------------------------------
                0.01    0.00 3370645/7366779     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
                0.02    0.01 3996134/7366779     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
[286]    0.5    0.03    0.01 7366779         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [286]
                0.00    0.01 7366301/7366301     std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [476]
-----------------------------------------------
                0.00    0.00  541020/5034204     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00  550649/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.01    0.00 1158233/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.01    0.00 1161253/5034204     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.01    0.00 1623049/5034204     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
[287]    0.5    0.03    0.01 5034204         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
                0.01    0.00 5050189/5050189     __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_ptr() [426]
-----------------------------------------------
                0.02    0.00 1649058/3375200     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.02    0.00 1726142/3375200     void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<void ()> >(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [379]
[288]    0.5    0.04    0.00 3375200         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [288]
-----------------------------------------------
                0.03    0.01 1638007/1638007     std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [168]
[289]    0.5    0.03    0.01 1638007         std::__future_base::_Result<void>::_M_destroy() [289]
                0.01    0.00 1643196/1643196     std::__future_base::_Result<void>::~_Result() [501]
-----------------------------------------------
                0.00    0.04 1581679/1581679     std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
[290]    0.5    0.00    0.04 1581679         std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [290]
                0.01    0.03 1581313/1581313     std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [291]
-----------------------------------------------
                0.01    0.03 1581313/1581313     std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [290]
[291]    0.5    0.01    0.03 1581313         std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [291]
                0.03    0.00 1600709/1600709     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [347]
-----------------------------------------------
                0.00    0.00  422938/7063746     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.03    0.01 6640808/7063746     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[292]    0.5    0.03    0.01 7063746         std::vector<double, std::allocator<double> >::end() const [292]
                0.01    0.00 7064054/14128896     __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&) [381]
-----------------------------------------------
                0.00    0.04 1695672/1695672     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&) [232]
[293]    0.5    0.00    0.04 1695672         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [293]
                0.00    0.04 1696679/4879967     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [149]
-----------------------------------------------
                0.00    0.04  420726/420726      Math::Matrix::getVals() const [295]
[294]    0.5    0.00    0.04  420726         std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.01  422776/5621186     double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&) [92]
                0.00    0.01  421859/981313      std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
                0.00    0.00  421686/421686      __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_select_on_copy(std::allocator<double> const&) [609]
                0.00    0.00  422938/7063746     std::vector<double, std::allocator<double> >::end() const [292]
                0.00    0.00  421976/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00  422548/7061657     std::vector<double, std::allocator<double> >::begin() const [355]
                0.00    0.00  421744/9549935     std::vector<double, std::allocator<double> >::size() const [339]
                0.00    0.00  422461/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
                0.00    0.00  420846/1020775     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [884]
-----------------------------------------------
                0.00    0.00   30542/420488      FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.04  389946/420488      Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
[295]    0.5    0.00    0.04  420488         Math::Matrix::getVals() const [295]
                0.00    0.04  420726/420726      std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
-----------------------------------------------
                0.00    0.01  548862/1722945     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const [103]
                0.00    0.02 1174083/1722945     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const [54]
[296]    0.5    0.01    0.03 1722945         std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [296]
                0.01    0.03 1725253/3299481     std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [214]
-----------------------------------------------
                0.01    0.02 1162959/1162959     std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [38]
[297]    0.5    0.01    0.02 1162959         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [297]
                0.01    0.00 1163219/1163219     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [407]
                0.01    0.00 1166415/1166415     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [573]
-----------------------------------------------
                0.00    0.04   99265/99265       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [198]
[298]    0.5    0.00    0.04   99265         std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [298]
                0.00    0.04   99267/392285      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.00   99248/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.03    0.01 5604932/5604932     std::mutex::unlock() [300]
[299]    0.5    0.03    0.01 5604932         __gthread_mutex_unlock(pthread_mutex_t*) [299]
                0.01    0.00 5613097/12773250     __gthread_active_p() [348]
-----------------------------------------------
                0.00    0.04 5595315/5595315     std::unique_lock<std::mutex>::unlock() [207]
[300]    0.5    0.00    0.04 5595315         std::mutex::unlock() [300]
                0.03    0.01 5604932/5604932     __gthread_mutex_unlock(pthread_mutex_t*) [299]
-----------------------------------------------
                0.01    0.03 5444392/5444392     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
[301]    0.5    0.01    0.03 5444392         std::unique_lock<std::mutex>::lock() [301]
                0.01    0.02 5424194/5424194     std::mutex::lock() [350]
-----------------------------------------------
                0.01    0.00  531444/1698718     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::future({lambda()#1}&&) [368]
                0.02    0.01 1167274/1698718     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::future({lambda()#1}&&) [310]
[302]    0.5    0.03    0.01 1698718         std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [302]
                0.01    0.00 1704791/1704791     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&) [441]
                0.00    0.00 1702664/1702664     std::remove_reference<std::shared_ptr<std::packaged_task<void ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<void ()> >&>(std::shared_ptr<std::packaged_task<void ()> >&) [848]
-----------------------------------------------
                0.01    0.03 1702008/1702008     std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl() [280]
[303]    0.5    0.01    0.03 1702008         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [303]
                0.01    0.02 1704006/1704006     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [351]
-----------------------------------------------
                0.00    0.04 1587219/1587219     std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [239]
[304]    0.5    0.00    0.04 1587219         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [304]
                0.00    0.03 1588167/4879967     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [149]
-----------------------------------------------
                0.03    0.01 2386598/2386598     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::get_deleter() [306]
[305]    0.5    0.03    0.01 2386598         std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [305]
                0.00    0.01 2386523/2386523     std::tuple_element<1ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [551]
-----------------------------------------------
                0.00    0.04 2383347/2383347     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
[306]    0.5    0.00    0.04 2383347         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::get_deleter() [306]
                0.03    0.01 2386598/2386598     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [305]
-----------------------------------------------
                0.00    0.04   93432/93432       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [308]
[307]    0.5    0.00    0.04   93432         std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [307]
                0.00    0.04   93332/392285      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.00   93480/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.00    0.04   93404/93404       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [198]
[308]    0.5    0.00    0.04   93404         std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [308]
                0.00    0.04   93432/93432       std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [307]
                0.00    0.00   93501/850683      std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.00    0.00       7/260453      Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.01   92671/260453      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.02  167775/260453      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
[309]    0.5    0.00    0.04  260453         Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.00    0.03  263452/6609718     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.00    0.00  259437/5551531     std::vector<double, std::allocator<double> >::vector() [182]
                0.00    0.00  264491/9549935     std::vector<double, std::allocator<double> >::size() const [339]
-----------------------------------------------
                0.01    0.03 1169777/1169777     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [243]
[310]    0.5    0.01    0.03 1169777         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::future({lambda()#1}&&) [310]
                0.02    0.01 1167274/1698718     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [302]
-----------------------------------------------
                0.00    0.04 1698189/1698189     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<void>*) [212]
[311]    0.5    0.00    0.04 1698189         std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [311]
                0.00    0.04 1697145/1697145     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [312]
-----------------------------------------------
                0.00    0.04 1697145/1697145     std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [311]
[312]    0.5    0.00    0.04 1697145         std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [312]
                0.01    0.01 1698289/1698289     std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [366]
                0.01    0.01 1708146/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
-----------------------------------------------
                0.00    0.00       7/9297560     Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00    4600/9297560     generateData(int) [611]
                0.00    0.00   99724/9297560     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.00  199574/9297560     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.00    0.00  260220/9297560     Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.00    0.00  421976/9297560     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.00  564052/9297560     std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
                0.00    0.00  599938/9297560     std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
                0.03    0.00 7147469/9297560     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [331]
[313]    0.5    0.04    0.00 9297560         std::allocator<double>::~allocator() [313]
-----------------------------------------------
                0.00    0.00  538511/6755659     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
                0.00    0.00  542400/6755659     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00  550392/6755659     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.01    0.00 1156881/6755659     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.01    0.00 1158825/6755659     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
                0.01    0.00 1164788/6755659     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.01    0.00 1643862/6755659     std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::~_Sp_ebo_helper() [364]
[314]    0.5    0.04    0.00 6755659         std::allocator<std::packaged_task<void ()> >::~allocator() [314]
-----------------------------------------------
                0.00    0.04  686276/686276      std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [316]
[315]    0.5    0.00    0.04  686276         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [315]
                0.00    0.04  686272/686272      std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [317]
-----------------------------------------------
                0.00    0.04  686276/686276      std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [231]
[316]    0.5    0.00    0.04  686276         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [316]
                0.00    0.04  686276/686276      std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [315]
-----------------------------------------------
                0.00    0.04  686272/686272      std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [315]
[317]    0.5    0.00    0.04  686272         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [317]
                0.02    0.01  686263/686263      std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [318]
-----------------------------------------------
                0.02    0.01  686263/686263      std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [317]
[318]    0.5    0.02    0.01  686263         std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [318]
                0.01    0.01  686247/686247      std::__future_base::_Result_base* const& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [431]
-----------------------------------------------
                0.00    0.00  546037/10436871     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [365]
                0.00    0.00  546478/10436871     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
                0.00    0.00  546507/10436871     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [173]
                0.00    0.00  546887/10436871     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [154]
                0.00    0.00  547449/10436871     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00  547918/10436871     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00  549782/10436871     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
                0.00    0.00  550143/10436871     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
                0.00    0.00  550239/10436871     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00  550318/10436871     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
                0.00    0.00  550389/10436871     std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [50]
                0.00    0.00  550520/10436871     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [102]
                0.00    0.00  550546/10436871     void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [72]
                0.00    0.00  550561/10436871     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [53]
                0.00    0.00  550576/10436871     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [105]
                0.00    0.00  550624/10436871     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
                0.00    0.00  550625/10436871     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [52]
                0.00    0.00  550633/10436871     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.00    0.00  550639/10436871     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [77]
[319]    0.5    0.03    0.00 10436871         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
-----------------------------------------------
                0.01    0.02  559591/559591      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[320]    0.5    0.01    0.02  559591         Math::ThreadPool::getPoolSize() const [320]
                0.02    0.00  559620/559632      std::vector<std::thread, std::allocator<std::thread> >::size() const [403]
-----------------------------------------------
                0.01    0.02 5561687/5561687     std::_Vector_base<double, std::allocator<double> >::_Vector_base() [256]
[321]    0.5    0.01    0.02 5561687         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [321]
                0.00    0.02 5565813/6129898     std::allocator<double>::allocator() [386]
                0.01    0.00 5569690/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data() [474]
-----------------------------------------------
                0.01    0.02  773503/773503      std::function<double (double)>::operator()(double) const [268]
[322]    0.5    0.01    0.02  773503         std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [322]
                0.00    0.02  774374/774374      std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [371]
                0.00    0.00  773652/773652      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [634]
                0.00    0.00  773539/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
-----------------------------------------------
                0.00    0.03   99842/99842       FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[323]    0.4    0.00    0.03   99842         Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [323]
                0.00    0.02   99842/114796      Math::operator-(Math::Matrix, Math::Matrix const&) [406]
                0.00    0.01   99839/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00   99843/5015028     Math::Matrix::~Matrix() [117]
-----------------------------------------------
                0.03    0.00 1175384/1175384     std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [45]
[324]    0.4    0.03    0.00 1175384         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [324]
                0.00    0.00 1177454/1177454     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() const [612]
-----------------------------------------------
                0.00    0.01 1642275/5006930     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [419]
                0.01    0.02 3364655/5006930     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
[325]    0.4    0.01    0.02 5006930         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [325]
                0.01    0.01 4993293/4993293     std::tuple_element<1ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [363]
-----------------------------------------------
                0.01    0.02 1633713/1633713     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [219]
[326]    0.4    0.01    0.02 1633713         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [326]
                0.01    0.01 1639796/1639796     std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::~_Sp_ebo_helper() [364]
-----------------------------------------------
                0.00    0.03 1695735/1695735     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [329]
[327]    0.4    0.00    0.03 1695735         std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>&&) [327]
                0.00    0.03 1694589/1694589     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [328]
-----------------------------------------------
                0.00    0.03 1694589/1694589     std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>&&) [327]
[328]    0.4    0.00    0.03 1694589         std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [328]
                0.02    0.00 1697188/1697188     std::remove_reference<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [398]
                0.01    0.01 1700847/11506648     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [189]
                0.00    0.00 1701058/1701058     std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [851]
-----------------------------------------------
                0.00    0.01  540144/1693355     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [128]
                0.00    0.02 1153211/1693355     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [58]
[329]    0.4    0.00    0.03 1693355         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [329]
                0.00    0.03 1695735/1695735     std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>&&) [327]
-----------------------------------------------
                0.00    0.00       7/981313      std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) [725]
                0.00    0.01  421859/981313      std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.02  559447/981313      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
[330]    0.4    0.00    0.03  981313         std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
                0.00    0.02  981503/981503      std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [369]
                0.00    0.01  981052/1585582     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [417]
-----------------------------------------------
                0.01    0.03 7143205/7143205     std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [166]
[331]    0.4    0.01    0.03 7143205         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [331]
                0.03    0.00 7147469/9297560     std::allocator<double>::~allocator() [313]
-----------------------------------------------
                0.01    0.02 1165419/1165419     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
[332]    0.4    0.01    0.02 1165419         std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&) [332]
                0.02    0.00 1166184/1166184     std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&) [400]
                0.00    0.00 1167567/1167567     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [643]
-----------------------------------------------
                0.00    0.03 1157284/1157284     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[333]    0.4    0.00    0.03 1157284         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [333]
                0.01    0.01 1152409/1152409     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [372]
                0.01    0.00 1149315/2293341     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [393]
-----------------------------------------------
                0.00    0.03  500477/500477      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [277]
[334]    0.4    0.00    0.03  500477         void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [334]
                0.00    0.03  498433/498433      void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [336]
-----------------------------------------------
                0.00    0.03  499812/499812      void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [336]
[335]    0.4    0.00    0.03  499812         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state() [335]
                0.00    0.03  501987/1642678     std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [172]
                0.00    0.00  499296/499296      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::~_Impl() [642]
-----------------------------------------------
                0.00    0.03  498433/498433      void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [334]
[336]    0.4    0.00    0.03  498433         void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [336]
                0.00    0.03  499812/499812      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state() [335]
-----------------------------------------------
                0.00    0.03   99879/99879       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[337]    0.4    0.00    0.03   99879         std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~tuple() [337]
                0.00    0.03   99878/99878       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [338]
-----------------------------------------------
                0.00    0.03   99878/99878       std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~tuple() [337]
[338]    0.4    0.00    0.03   99878         std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [338]
                0.01    0.01   99880/99880       std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [380]
                0.00    0.01   99883/99883       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [455]
-----------------------------------------------
                0.00    0.00    4600/9549935     Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [679]
                0.00    0.00  264491/9549935     Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.00    0.00  421744/9549935     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.00  785493/9549935     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.03    0.00 8073607/9549935     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[339]    0.4    0.03    0.00 9549935         std::vector<double, std::allocator<double> >::size() const [339]
-----------------------------------------------
                0.03    0.00 9015715/9015715     Math::Matrix::operator[](int) const [213]
[340]    0.4    0.03    0.00 9015715         std::vector<double, std::allocator<double> >::operator[](unsigned long) const [340]
-----------------------------------------------
                0.00    0.00       1/8398530     main [1]
                0.00    0.00       1/8398530     std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [754]
                0.00    0.00       2/8398530     std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [753]
                0.00    0.00  498928/8398530     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::~_Impl() [642]
                0.00    0.00  544014/8398530     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [78]
                0.00    0.00  544947/8398530     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00  547462/8398530     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00 1139344/8398530     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::~_Impl() [608]
                0.00    0.00 1155112/8398530     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1160108/8398530     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.00    0.00 1167832/8398530     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
                0.01    0.00 1640779/8398530     std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [420]
[341]    0.4    0.03    0.00 8398530         std::allocator<int>::~allocator() [341]
-----------------------------------------------
                0.00    0.00  421428/3171298     std::allocator_traits<std::allocator<double> >::select_on_container_copy_construction(std::allocator<double> const&) [610]
                0.00    0.00  564082/3171298     std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
                0.00    0.00  599941/3171298     std::_Vector_base<double, std::allocator<double> >::get_allocator() const [556]
                0.01    0.01 1585847/3171298     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [417]
[342]    0.4    0.02    0.01 3171298         std::allocator<double>::allocator(std::allocator<double> const&) [342]
                0.01    0.00 3171980/3171980     __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [488]
-----------------------------------------------
                0.02    0.01 2844969/2844969     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [253]
[343]    0.4    0.02    0.01 2844969         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [343]
                0.01    0.00 2868174/2868174     std::operator==(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [490]
-----------------------------------------------
                0.01    0.02 1701575/1701575     std::__future_base::_State_baseV2::_State_baseV2() [125]
[344]    0.4    0.01    0.02 1701575         std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [344]
                0.02    0.00 1700342/1700342     std::atomic<unsigned int>::atomic(unsigned int) [396]
-----------------------------------------------
                0.03    0.00 1701323/1701323     std::__future_base::_State_baseV2::_State_baseV2() [125]
[345]    0.4    0.03    0.00 1701323         std::once_flag::once_flag() [345]
-----------------------------------------------
                0.03    0.00 1668431/1668431     void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [161]
[346]    0.4    0.03    0.00 1668431         std::once_flag::_Prepare_execution::~_Prepare_execution() [346]
-----------------------------------------------
                0.03    0.00 1600709/1600709     std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [291]
[347]    0.4    0.03    0.00 1600709         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [347]
-----------------------------------------------
                0.00    0.00 1716863/12773250     __gthread_once(int*, void (*)()) [362]
                0.01    0.00 5443290/12773250     __gthread_mutex_lock(pthread_mutex_t*) [409]
                0.01    0.00 5613097/12773250     __gthread_mutex_unlock(pthread_mutex_t*) [299]
[348]    0.4    0.03    0.00 12773250         __gthread_active_p() [348]
-----------------------------------------------
                0.00    0.00   92839/493327      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.01  171172/493327      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.00    0.01  229316/493327      Math::Matrix::operator*=(Math::Matrix const&) [14]
[349]    0.4    0.01    0.02  493327         std::function<void (int, int)>::~function() [349]
                0.00    0.02  489228/7687065     std::_Function_base::~_Function_base() [68]
-----------------------------------------------
                0.01    0.02 5424194/5424194     std::unique_lock<std::mutex>::lock() [301]
[350]    0.4    0.01    0.02 5424194         std::mutex::lock() [350]
                0.00    0.01 5448160/5448160     __gthread_mutex_lock(pthread_mutex_t*) [409]
-----------------------------------------------
                0.01    0.02 1704006/1704006     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [303]
[351]    0.4    0.01    0.02 1704006         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [351]
                0.01    0.01 1703137/1703137     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [415]
-----------------------------------------------
                0.01    0.02 1141199/1141199     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
[352]    0.3    0.01    0.02 1141199         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [352]
                0.00    0.01 1142485/1142485     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [452]
                0.01    0.00 1148186/3286582     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [427]
-----------------------------------------------
                0.00    0.03  535025/535025      void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [266]
[353]    0.3    0.00    0.03  535025         void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [353]
                0.01    0.01  531673/531673      Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::future({lambda()#1}&&) [368]
                0.00    0.00  533179/1008023     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() [577]
                0.00    0.00  535333/3837245     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.00    0.03  559567/559567      double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [270]
[354]    0.3    0.00    0.03  559567         double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [354]
                0.00    0.02  559588/559595      double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
                0.00    0.00  559588/559588      void std::_Construct<double>(double*) [685]
                0.00    0.00  559585/559585      double* std::__addressof<double>(double&) [918]
-----------------------------------------------
                0.00    0.00  422548/7061657     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.01    0.01 6639109/7061657     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[355]    0.3    0.02    0.01 7061657         std::vector<double, std::allocator<double> >::begin() const [355]
                0.01    0.00 7064842/14128896     __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&) [381]
-----------------------------------------------
                0.01    0.00 1702664/3407164     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [415]
                0.01    0.00 1704500/3407164     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [439]
[356]    0.3    0.03    0.00 3407164         std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [356]
                0.00    0.00 3410044/3410044     std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [823]
-----------------------------------------------
                0.02    0.01 1705686/1705686     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [224]
[357]    0.3    0.02    0.01 1705686         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [357]
                0.01    0.00 1706254/1706254     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [570]
-----------------------------------------------
                0.00    0.01  550267/1703820     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [48]
                0.00    0.01 1153553/1703820     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
[358]    0.3    0.01    0.02 1703820         std::allocator<std::packaged_task<void ()> >::allocator() [358]
                0.02    0.00 1708714/1708714     __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator() [395]
-----------------------------------------------
                0.00    0.00       7/559595      double* std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [736]
                0.00    0.02  559588/559595      double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [354]
[359]    0.3    0.00    0.03  559595         double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
                0.00    0.01  559555/559555      double* std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag) [432]
                0.01    0.00  559565/559565      std::iterator_traits<double*>::iterator_category std::__iterator_category<double*>(double* const&) [518]
                0.00    0.00  559567/559567      std::__size_to_integer(unsigned long) [919]
-----------------------------------------------
                0.00    0.00       1/1702583     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
                0.02    0.00 1702582/1702583     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
[360]    0.3    0.02    0.00 1702583         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [360]
                0.00    0.00 1704395/3426395     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [486]
-----------------------------------------------
                0.01    0.00 1439954/2881368     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*) [281]
                0.01    0.00 1441414/2881368     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
[361]    0.3    0.02    0.00 2881368         double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [361]
                0.00    0.00 2885300/3129693     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [561]
-----------------------------------------------
                0.02    0.00 1718563/1718563     void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [161]
[362]    0.3    0.02    0.00 1718563         __gthread_once(int*, void (*)()) [362]
                0.00    0.00 1716863/12773250     __gthread_active_p() [348]
-----------------------------------------------
                0.01    0.01 4993293/4993293     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [325]
[363]    0.3    0.01    0.01 4993293         std::tuple_element<1ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [363]
                0.01    0.00 4998601/7385433     std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [383]
-----------------------------------------------
                0.01    0.01 1639796/1639796     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [326]
[364]    0.3    0.01    0.01 1639796         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::~_Sp_ebo_helper() [364]
                0.01    0.00 1643862/6755659     std::allocator<std::packaged_task<void ()> >::~allocator() [314]
-----------------------------------------------
                0.02    0.00  546333/546333      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [173]
[365]    0.3    0.02    0.00  546333         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [365]
                0.00    0.00  546037/10436871     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&) [319]
                0.00    0.00  546376/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
-----------------------------------------------
                0.01    0.01 1698289/1698289     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [312]
[366]    0.3    0.01    0.01 1698289         std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [366]
                0.00    0.01 1703885/1703885     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [439]
-----------------------------------------------
                0.02    0.00  393703/393703      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[367]    0.3    0.02    0.00  393703         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() const [367]
                0.00    0.00  393852/787514      __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix const* const&) [578]
-----------------------------------------------
                0.01    0.01  531673/531673      void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [353]
[368]    0.3    0.01    0.01  531673         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::future({lambda()#1}&&) [368]
                0.01    0.00  531444/1698718     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [302]
-----------------------------------------------
                0.00    0.02  981503/981503      std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
[369]    0.3    0.00    0.02  981503         std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [369]
                0.00    0.02  981623/6186170     std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [126]
-----------------------------------------------
                0.00    0.02 1199882/1199882     std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
[370]    0.3    0.00    0.02 1199882         std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&) [370]
                0.02    0.00 3599661/3599661     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_copy_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data const&) [388]
                0.00    0.00 1199885/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data() [474]
-----------------------------------------------
                0.00    0.02  774374/774374      std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [322]
[371]    0.3    0.00    0.02  774374         std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [371]
                0.01    0.01  774828/774828      double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [421]
                0.00    0.00  774721/1549664     Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>::type&) [505]
                0.00    0.00  774481/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
-----------------------------------------------
                0.01    0.01 1152409/1152409     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [333]
[372]    0.3    0.01    0.01 1152409         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [372]
                0.01    0.00 1153883/1153883     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [510]
                0.00    0.00 1148544/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.01 1146743/2311911     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.01    0.01 1165168/2311911     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[373]    0.3    0.01    0.01 2311911         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [373]
                0.00    0.01 1148469/1148469     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [449]
-----------------------------------------------
                0.00    0.02 1174841/1174841     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
[374]    0.3    0.00    0.02 1174841         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
                0.01    0.00 1173132/1173132     bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [507]
                0.00    0.01 1177139/1177139     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [543]
                0.00    0.00 1176216/3525659     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [484]
                0.00    0.00 1172465/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.00    0.00    3671/105306      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.01    0.01  101635/105306      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
[375]    0.3    0.01    0.01  105306         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [375]
                0.01    0.00   26321/26321       std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [554]
-----------------------------------------------
                0.01    0.01  699185/699185      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long) [377]
[376]    0.3    0.01    0.01  699185         std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long) [376]
                0.01    0.00  699191/699191      __gnu_cxx::new_allocator<Math::Matrix>::deallocate(Math::Matrix*, unsigned long) [538]
                0.00    0.00  699175/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.00       7/699181      void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.02  699174/699181      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base() [378]
[377]    0.3    0.00    0.02  699181         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long) [377]
                0.01    0.01  699185/699185      std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long) [376]
-----------------------------------------------
                0.00    0.02  699171/699171      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
[378]    0.3    0.00    0.02  699171         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base() [378]
                0.00    0.02  699174/699181      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long) [377]
                0.00    0.00  699150/699150      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::~_Vector_impl() [896]
-----------------------------------------------
                0.00    0.02 1724464/1724464     std::packaged_task<void ()>::operator()() [44]
[379]    0.3    0.00    0.02 1724464         void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<void ()> >(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [379]
                0.02    0.00 1726142/3375200     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [288]
-----------------------------------------------
                0.01    0.01   99880/99880       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [338]
[380]    0.3    0.01    0.01   99880         std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [380]
                0.00    0.01   99879/699099      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
-----------------------------------------------
                0.01    0.00 7064054/14128896     std::vector<double, std::allocator<double> >::end() const [292]
                0.01    0.00 7064842/14128896     std::vector<double, std::allocator<double> >::begin() const [355]
[381]    0.3    0.02    0.00 14128896         __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&) [381]
-----------------------------------------------
                0.01    0.01 11499939/11499939     std::tuple_element<0ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [274]
[382]    0.3    0.01    0.01 11499939         std::__future_base::_Result<void>*& std::__get_helper<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [382]
                0.01    0.00 11514948/11514948     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [473]
-----------------------------------------------
                0.01    0.00 2386832/7385433     std::tuple_element<1ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [551]
                0.01    0.00 4998601/7385433     std::tuple_element<1ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [363]
[383]    0.3    0.02    0.00 7385433         std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [383]
                0.00    0.00 7397073/7397073     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [808]
-----------------------------------------------
                0.00    0.00  382202/6521323     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() const [451]
                0.00    0.00  545015/6521323     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [649]
                0.00    0.00  549188/6521323     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() const [645]
                0.00    0.00  577267/6521323     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() const [443]
                0.00    0.00  596663/6521323     Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() const [640]
                0.00    0.00  750953/6521323     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() const [635]
                0.00    0.00  774020/6521323     Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() const [633]
                0.00    0.00 1167428/6521323     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [407]
                0.00    0.00 1178587/6521323     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() const [612]
[384]    0.3    0.02    0.00 6521323         std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.02    0.00 6133985/6133985     std::allocator<double>::allocator() [386]
[385]    0.3    0.02    0.00 6133985         __gnu_cxx::new_allocator<double>::new_allocator() [385]
-----------------------------------------------
                0.00    0.00       7/6129898     Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00    4600/6129898     generateData(int) [611]
                0.00    0.00   99767/6129898     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.00  199463/6129898     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.00    0.00  260248/6129898     Math::Matrix::operator*=(Math::Matrix const&) [14]
                0.00    0.02 5565813/6129898     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [321]
[386]    0.3    0.00    0.02 6129898         std::allocator<double>::allocator() [386]
                0.02    0.00 6133985/6133985     __gnu_cxx::new_allocator<double>::new_allocator() [385]
-----------------------------------------------
                0.01    0.00 1713467/5151404     void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
                0.01    0.00 1717420/5151404     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
                0.01    0.00 1720517/5151404     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
[387]    0.3    0.02    0.00 5151404         std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [387]
-----------------------------------------------
                0.02    0.00 3599661/3599661     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&) [370]
[388]    0.3    0.02    0.00 3599661         std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_copy_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data const&) [388]
-----------------------------------------------
                0.01    0.00 1620949/3261261     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
                0.01    0.00 1640312/3261261     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
[389]    0.3    0.02    0.00 3261261         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [389]
                0.00    0.00 3276753/3276753     std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>&) [828]
-----------------------------------------------
                0.01    0.01 3096185/3096185     std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [391]
[390]    0.3    0.01    0.01 3096185         std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [390]
                0.01    0.00 3097361/3097361     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [489]
-----------------------------------------------
                0.00    0.01 1371608/3095516     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.00    0.01 1723908/3095516     std::packaged_task<void ()>::operator()() [44]
[391]    0.3    0.00    0.02 3095516         std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [391]
                0.01    0.01 3096185/3096185     std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [390]
-----------------------------------------------
                0.00    0.00 1144677/2295267     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.01    0.01 1150590/2295267     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[392]    0.3    0.01    0.01 2295267         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [392]
                0.01    0.00 2298292/2298292     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [492]
-----------------------------------------------
                0.01    0.00 1144026/2293341     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.01    0.00 1149315/2293341     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [333]
[393]    0.3    0.02    0.00 2293341         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [393]
                0.00    0.00 2290016/2290016     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [837]
-----------------------------------------------
                0.01    0.01 1727164/1727164     std::function<void ()>::swap(std::function<void ()>&) [254]
[394]    0.3    0.01    0.01 1727164         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [394]
                0.01    0.00 5191221/5191221     std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [480]
-----------------------------------------------
                0.02    0.00 1708714/1708714     std::allocator<std::packaged_task<void ()> >::allocator() [358]
[395]    0.3    0.02    0.00 1708714         __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator() [395]
-----------------------------------------------
                0.02    0.00 1700342/1700342     std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [344]
[396]    0.3    0.02    0.00 1700342         std::atomic<unsigned int>::atomic(unsigned int) [396]
                0.00    0.00 1700577/1700577     std::__atomic_base<unsigned int>::__atomic_base(unsigned int) [852]
-----------------------------------------------
                0.00    0.00  549469/1699957     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.01    0.01 1150488/1699957     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
[397]    0.3    0.01    0.01 1699957         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [397]
                0.01    0.00 1699843/1699843     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [496]
-----------------------------------------------
                0.02    0.00 1697188/1697188     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [328]
[398]    0.3    0.02    0.00 1697188         std::remove_reference<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [398]
-----------------------------------------------
                0.02    0.00 1577806/1577806     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[399]    0.3    0.02    0.00 1577806         std::function<void ()>::function() [399]
                0.00    0.00 1569244/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.02    0.00 1166184/1166184     std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&) [332]
[400]    0.3    0.02    0.00 1166184         std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&) [400]
-----------------------------------------------
                0.00    0.02 1149505/1149505     std::_Function_base::~_Function_base() [68]
[401]    0.3    0.00    0.02 1149505         std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [401]
                0.02    0.00 1139744/1139744     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [402]
-----------------------------------------------
                0.02    0.00 1139744/1139744     std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [401]
[402]    0.3    0.02    0.00 1139744         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [402]
                0.00    0.00 1139515/1139515     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [877]
-----------------------------------------------
                0.00    0.00      12/559632      std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [734]
                0.02    0.00  559620/559632      Math::ThreadPool::getPoolSize() const [320]
[403]    0.3    0.02    0.00  559632         std::vector<std::thread, std::allocator<std::thread> >::size() const [403]
-----------------------------------------------
                                                 <spontaneous>
[404]    0.3    0.02    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [404]
-----------------------------------------------
                0.00    0.00 2380102/14295698     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [418]
                0.00    0.00 2380301/14295698     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
                0.00    0.00 2380780/14295698     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [209]
                0.00    0.00 2382105/14295698     std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [618]
                0.00    0.00 2382564/14295698     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235]
                0.00    0.00 2389846/14295698     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [94]
[405]    0.3    0.02    0.00 14295698         std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.00    0.00   14954/114796      Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.02   99842/114796      Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [323]
[406]    0.2    0.00    0.02  114796         Math::operator-(Math::Matrix, Math::Matrix const&) [406]
                0.00    0.02  114796/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00  114796/115196      Math::Matrix::operator-=(Math::Matrix const&) [639]
-----------------------------------------------
                0.01    0.00 1163219/1163219     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [297]
[407]    0.2    0.01    0.00 1163219         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [407]
                0.00    0.00 1167428/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.01  199456/458327      Activation::Sigmoid::fnDerv(Math::Matrix) [206]
                0.00    0.01  258871/458327      Activation::Sigmoid::fn(Math::Matrix) [192]
[408]    0.2    0.00    0.02  458327         std::function<double (double)>::~function() [408]
                0.00    0.02  458395/7687065     std::_Function_base::~_Function_base() [68]
-----------------------------------------------
                0.00    0.01 5448160/5448160     std::mutex::lock() [350]
[409]    0.2    0.00    0.01 5448160         __gthread_mutex_lock(pthread_mutex_t*) [409]
                0.01    0.00 5443290/12773250     __gthread_active_p() [348]
-----------------------------------------------
                0.01    0.01 1686676/1686676     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
[410]    0.2    0.01    0.01 1686676         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base*> >, std::is_move_constructible<std::__future_base::_Result_base*>, std::is_move_assignable<std::__future_base::_Result_base*> >::value, void>::type std::swap<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&, std::__future_base::_Result_base*&) [410]
                0.01    0.00 5046157/6698503     std::remove_reference<std::__future_base::_Result_base*&>::type&& std::move<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [478]
-----------------------------------------------
                                                 <spontaneous>
[411]    0.2    0.01    0.00                 _GLOBAL__sub_I__ZN10Activation7Sigmoid2fnEN4Math6MatrixE [411]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [619]
-----------------------------------------------
                                                 <spontaneous>
[412]    0.2    0.00    0.02                 Math::ThreadPool::~ThreadPool() [412]
                0.00    0.02       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [414]
                0.00    0.00       1/1           Math::ThreadPool::stop() [741]
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::~vector() [776]
-----------------------------------------------
                0.00    0.02       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [414]
[413]    0.2    0.00    0.02       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
                0.01    0.01       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [422]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [625]
                0.00    0.00       1/1702583     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [360]
                0.00    0.00       1/1720633     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [560]
                0.00    0.00       1/1734994     std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [839]
-----------------------------------------------
                0.00    0.02       1/1           Math::ThreadPool::~ThreadPool() [412]
[414]    0.2    0.00    0.02       1         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [414]
                0.00    0.02       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
-----------------------------------------------
                0.01    0.01 1703137/1703137     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [351]
[415]    0.2    0.01    0.01 1703137         std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [415]
                0.01    0.00 1702664/3407164     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [356]
                0.00    0.00 1703960/1703960     std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base() [846]
-----------------------------------------------
                0.00    0.00       7/564087      std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) [725]
                0.00    0.00    4600/564087      void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
                0.01    0.01  559480/564087      std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [171]
[416]    0.2    0.01    0.01  564087         std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
                0.00    0.00  564082/3171298     std::allocator<double>::allocator(std::allocator<double> const&) [342]
                0.00    0.00  564052/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00  564077/564077      std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&) [912]
-----------------------------------------------
                0.00    0.01  604530/1585582     std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&) [552]
                0.00    0.01  981052/1585582     std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
[417]    0.2    0.00    0.02 1585582         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [417]
                0.01    0.01 1585847/3171298     std::allocator<double>::allocator(std::allocator<double> const&) [342]
                0.00    0.00 1586197/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data() [474]
-----------------------------------------------
                0.01    0.01 2383471/2383471     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
[418]    0.2    0.01    0.01 2383471         std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [418]
                0.00    0.00 2381037/2381037     std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [618]
                0.00    0.00 2380102/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.01    0.01 1643897/1643897     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
[419]    0.2    0.01    0.01 1643897         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [419]
                0.00    0.01 1642275/5006930     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [325]
-----------------------------------------------
                0.00    0.00  492317/1638241     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [606]
                0.01    0.00 1145924/1638241     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [452]
[420]    0.2    0.01    0.01 1638241         std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [420]
                0.01    0.00 1640779/8398530     std::allocator<int>::~allocator() [341]
-----------------------------------------------
                0.01    0.01  774828/774828      std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [371]
[421]    0.2    0.01    0.01  774828         double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [421]
                0.01    0.00  774943/1549664     Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>::type&) [505]
                0.00    0.00  775145/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
                0.00    0.00  775295/775295      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}::operator()(double) const [892]
-----------------------------------------------
                0.01    0.01       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
[422]    0.2    0.01    0.01       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [422]
                0.00    0.01       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [464]
                0.00    0.00       2/3426395     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [486]
-----------------------------------------------
                0.00    0.00 2888799/14164397     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [177]
                0.01    0.00 11275598/14164397     double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
[423]    0.2    0.02    0.00 14164397         double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [423]
                0.00    0.00 14168029/14168029     __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base() const [800]
-----------------------------------------------
                0.02    0.00 1443181/1443181     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*) [281]
[424]    0.2    0.02    0.00 1443181         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const [424]
                0.00    0.00 1441914/4414338     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [817]
-----------------------------------------------
                0.00    0.00 2379893/7147746     std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [602]
                0.00    0.00 2382358/7147746     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
                0.01    0.00 2385495/7147746     std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235]
[425]    0.2    0.01    0.00 7147746         std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [425]
-----------------------------------------------
                0.01    0.00 5050189/5050189     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [287]
[426]    0.2    0.01    0.00 5050189         __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_ptr() [426]
                0.00    0.00 5057570/5057570     __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_addr() [816]
-----------------------------------------------
                0.00    0.00  493870/3286582     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [544]
                0.01    0.00 1148186/3286582     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [352]
                0.01    0.00 1644526/3286582     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [219]
[427]    0.2    0.01    0.00 3286582         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [427]
-----------------------------------------------
                0.01    0.01 1733312/1733312     std::function<void ()>::swap(std::function<void ()>&) [254]
[428]    0.2    0.01    0.01 1733312         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [428]
                0.01    0.00 5199985/5199985     std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [564]
-----------------------------------------------
                0.01    0.01 1680003/1680003     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [179]
[429]    0.2    0.01    0.01 1680003         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base::_Deleter> >, std::is_move_constructible<std::__future_base::_Result_base::_Deleter>, std::is_move_assignable<std::__future_base::_Result_base::_Deleter> >::value, void>::type std::swap<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&, std::__future_base::_Result_base::_Deleter&) [429]
                0.01    0.00 5033794/5033794     std::remove_reference<std::__future_base::_Result_base::_Deleter&>::type&& std::move<std::__future_base::_Result_base::_Deleter&>(std::__future_base::_Result_base::_Deleter&) [482]
-----------------------------------------------
                0.01    0.01 1647684/1647684     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [230]
[430]    0.2    0.01    0.01 1647684         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [430]
                0.01    0.00 1650548/1650548     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [499]
-----------------------------------------------
                0.01    0.01  686247/686247      std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [318]
[431]    0.2    0.01    0.01  686247         std::__future_base::_Result_base* const& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [431]
                0.01    0.00  686260/686260      std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [579]
-----------------------------------------------
                0.00    0.01  559555/559555      double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
[432]    0.2    0.00    0.01  559555         double* std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag) [432]
                0.00    0.01  559535/559535      void std::__fill_a<double*, double>(double*, double*, double const&) [434]
-----------------------------------------------
                0.01    0.00  559555/559555      void std::__fill_a<double*, double>(double*, double*, double const&) [434]
[433]    0.2    0.01    0.00  559555         __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double>(double*, double*, double const&) [433]
-----------------------------------------------
                0.00    0.01  559535/559535      double* std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag) [432]
[434]    0.2    0.00    0.01  559535         void std::__fill_a<double*, double>(double*, double*, double const&) [434]
                0.01    0.00  559555/559555      __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double>(double*, double*, double const&) [433]
-----------------------------------------------
                0.00    0.00 1149049/21992229     std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [23]
                0.00    0.00 1151119/21992229     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.00    0.00 1154298/21992229     std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [43]
                0.00    0.00 1155225/21992229     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
                0.00    0.00 1156328/21992229     void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [34]
                0.00    0.00 1156534/21992229     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
                0.00    0.00 1157254/21992229     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [101]
                0.00    0.00 1157459/21992229     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [28]
                0.00    0.00 1157960/21992229     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1158199/21992229     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [66]
                0.00    0.00 1158282/21992229     std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [24]
                0.00    0.00 1158439/21992229     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [59]
                0.00    0.00 1158747/21992229     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1158766/21992229     std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [37]
                0.00    0.00 1158840/21992229     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.00    0.00 1158955/21992229     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [26]
                0.00    0.00 1160123/21992229     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [36]
                0.00    0.00 1162838/21992229     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [440]
                0.00    0.00 1163814/21992229     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [111]
[435]    0.2    0.01    0.00 21992229         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.00    0.00      30/14211546     Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00    2200/14211546     Math::Matrix::operator*=(double const&) [721]
                0.00    0.00  231787/14211546     Math::Matrix::operator-=(Math::Matrix const&) [639]
                0.00    0.00  588556/14211546     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.00  760515/14211546     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [257]
                0.00    0.00 1410084/14211546     Math::Matrix::operator[](int) [550]
                0.00    0.00 1543486/14211546     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [261]
                0.00    0.00 2739713/14211546     Math::Matrix::applyFnHere(std::function<double (double)>) [264]
                0.00    0.00 2924628/14211546     Math::Matrix::operator+=(Math::Matrix const&) [278]
                0.00    0.00 4010547/14211546     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [122]
[436]    0.2    0.01    0.00 14211546         std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.01    0.00 5425038/5425038     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
[437]    0.2    0.01    0.00 5425038         std::mutex* std::__addressof<std::mutex>(std::mutex&) [437]
-----------------------------------------------
                0.00    0.01  109570/109570      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [152]
[438]    0.2    0.00    0.01  109570         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
                0.00    0.00  109458/109459      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [547]
                0.00    0.01  109331/1731035     void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [174]
                0.00    0.00  109266/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.00  109469/1734994     std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [839]
-----------------------------------------------
                0.00    0.01 1703885/1703885     std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [366]
[439]    0.2    0.00    0.01 1703885         std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [439]
                0.01    0.00 1704500/3407164     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [356]
                0.00    0.00 1708700/1708700     std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_Head_base() [844]
-----------------------------------------------
                0.01    0.00 1162488/1162488     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [111]
[440]    0.2    0.01    0.00 1162488         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [440]
                0.00    0.00 1162564/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00 1162838/21992229     Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&) [435]
-----------------------------------------------
                0.01    0.00 1704791/1704791     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [302]
[441]    0.2    0.01    0.00 1704791         std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&) [441]
                0.00    0.00 1702942/3414022     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [567]
                0.00    0.00 1701812/3411759     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [822]
-----------------------------------------------
                0.00    0.01  481650/481650      std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [40]
[442]    0.2    0.00    0.01  481650         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.01  489383/489383      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [544]
                0.00    0.00  491296/1040779     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [575]
                0.00    0.00  463711/1008979     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [576]
                0.00    0.00  491315/1037019     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [683]
                0.00    0.00  490979/1039520     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [882]
                0.00    0.00  484705/982841      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [885]
-----------------------------------------------
                0.01    0.00  576469/576469      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [444]
[443]    0.2    0.01    0.00  576469         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() const [443]
                0.00    0.00  577267/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.01  575736/575736      std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [203]
[444]    0.2    0.00    0.01  575736         std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [444]
                0.01    0.00  576469/576469      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() const [443]
-----------------------------------------------
                0.00    0.01 1644081/1644081     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [244]
[445]    0.2    0.00    0.01 1644081         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [445]
                0.01    0.00 1641489/1641489     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [503]
                0.00    0.00 1634281/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.01    0.00  549096/549096      std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [83]
[446]    0.2    0.01    0.00  549096         std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [446]
                0.00    0.00  548935/548935      Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() const [645]
-----------------------------------------------
                0.00    0.00  550498/1710287     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.01    0.00 1159789/1710287     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
[447]    0.2    0.01    0.00 1710287         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >) [447]
                0.00    0.00 1704211/1704211     std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<void ()> > const&) [650]
-----------------------------------------------
                0.01    0.00 1443286/1443286     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[448]    0.2    0.01    0.00 1443286         void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::allocator<double>&) [448]
                0.00    0.00 1443141/1443141     void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [652]
-----------------------------------------------
                0.00    0.01 1148469/1148469     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [373]
[449]    0.1    0.00    0.01 1148469         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [449]
                0.01    0.00 1146657/1146657     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [511]
                0.00    0.00 1143670/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.01  382140/382140      std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [220]
[450]    0.1    0.00    0.01  382140         std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [450]
                0.01    0.00  382042/382042      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() const [451]
-----------------------------------------------
                0.01    0.00  382042/382042      std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [450]
[451]    0.1    0.01    0.00  382042         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() const [451]
                0.00    0.00  382202/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.01 1142485/1142485     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [352]
[452]    0.1    0.00    0.01 1142485         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [452]
                0.01    0.00 1145924/1638241     std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [420]
-----------------------------------------------
                0.01    0.00  547789/547789      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
[453]    0.1    0.01    0.00  547789         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [453]
                0.00    0.00  547557/1701144     std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [631]
-----------------------------------------------
                0.01    0.00  546872/546872      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
[454]    0.1    0.01    0.00  546872         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
                0.00    0.00  546875/546875      void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [686]
                0.00    0.00  546413/1639180     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [857]
                0.00    0.00  545843/7726071     std::_Function_base::_Function_base() [806]
                0.00    0.00  545801/545801      bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [926]
-----------------------------------------------
                0.00    0.01   99883/99883       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [338]
[455]    0.1    0.00    0.01   99883         std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [455]
                0.00    0.01   99881/99881       std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [456]
-----------------------------------------------
                0.00    0.01   99881/99881       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [455]
[456]    0.1    0.00    0.01   99881         std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [456]
                0.00    0.01   99880/699099      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
-----------------------------------------------
                0.00    0.01   30549/30549       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[457]    0.1    0.00    0.01   30549         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [457]
                0.00    0.01   30546/30546       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter) [458]
                0.00    0.00   30547/590242      __gnu_cxx::__ops::__iter_less_iter() [909]
-----------------------------------------------
                0.00    0.01   30546/30546       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [457]
[458]    0.1    0.00    0.01   30546         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter) [458]
                0.01    0.00   91645/91645       bool __gnu_cxx::operator==<double*, double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [558]
                0.00    0.01   30548/30548       bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const [588]
                0.00    0.00   61097/61097       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++() [1003]
-----------------------------------------------
                0.00    0.01  197575/197575      Activation::Sigmoid::fnDerv(Math::Matrix) [206]
[459]    0.1    0.00    0.01  197575         std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
                0.00    0.01  197845/197845      void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [546]
                0.00    0.00  197765/593613      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&) [514]
                0.00    0.00  197622/197622      bool std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&) [964]
                0.00    0.00  197600/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.00    0.01 1718796/1718796     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
[460]    0.1    0.00    0.01 1718796         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [460]
                0.00    0.01 1716630/1716630     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [461]
-----------------------------------------------
                0.00    0.01 1716630/1716630     std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [460]
[461]    0.1    0.00    0.01 1716630         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [461]
                0.00    0.01 1720632/1720633     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [560]
                0.01    0.00 1719639/3423469     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [487]
-----------------------------------------------
                0.01    0.00       3/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [463]
[462]    0.1    0.01    0.00       3         void std::_Destroy<int*>(int*, int*) [462]
                0.00    0.00       3/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       3/3           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1134]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
                0.00    0.01       2/3           std::vector<int, std::allocator<int> >::~vector() [548]
[463]    0.1    0.00    0.01       3         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [463]
                0.01    0.00       3/3           void std::_Destroy<int*>(int*, int*) [462]
-----------------------------------------------
                0.00    0.01       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [422]
[464]    0.1    0.00    0.01       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [464]
                0.01    0.00       1/1           void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [465]
                0.00    0.00       1/1734994     std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [839]
-----------------------------------------------
                0.01    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [464]
[465]    0.1    0.01    0.00       1         void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [465]
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [793]
-----------------------------------------------
                0.01    0.00 6191998/6191998     __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [252]
[466]    0.1    0.01    0.00 6191998         __gnu_cxx::new_allocator<double>::_M_max_size() const [466]
-----------------------------------------------
                0.00    0.00    4600/5637526     double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
                0.01    0.00 5632926/5637526     double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
[467]    0.1    0.01    0.00 5637526         double* std::__niter_wrap<double*>(double* const&, double*) [467]
-----------------------------------------------
                0.00    0.00  101045/3837245     void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
                0.00    0.00  528857/3837245     decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [134]
                0.00    0.00  532460/3837245     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [135]
                0.00    0.00  533770/3837245     void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [216]
                0.00    0.00  534875/3837245     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [221]
                0.00    0.00  535320/3837245     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [266]
                0.00    0.00  535333/3837245     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [353]
                0.00    0.00  535585/3837245     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
[468]    0.1    0.01    0.00 3837245         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&) [468]
-----------------------------------------------
                0.00    0.00   61099/1500824     FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.01    0.00 1439725/1500824     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[469]    0.1    0.01    0.00 1500824         std::vector<double, std::allocator<double> >::begin() [469]
                0.00    0.00 1501825/4414338     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [817]
-----------------------------------------------
                0.00    0.00   30551/1470787     FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.01    0.00 1440236/1470787     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[470]    0.1    0.01    0.00 1470787         std::vector<double, std::allocator<double> >::end() [470]
                0.00    0.00 1470599/4414338     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [817]
-----------------------------------------------
                                                 <spontaneous>
[471]    0.1    0.01    0.00                 frame_dummy [471]
-----------------------------------------------
                0.00    0.00       3/12671680     decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&) [766]
                0.00    0.00       4/12671680     decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [760]
                0.00    0.00       7/12671680     decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&) [724]
                0.00    0.00    2300/12671680     decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [673]
                0.00    0.00    2558/12671680     void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&) [663]
                0.00    0.00  198107/12671680     void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [613]
                0.00    0.00  256659/12671680     void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [702]
                0.00    0.00  536190/12671680     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [221]
                0.00    0.00  546256/12671680     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [687]
                0.00    0.00  547409/12671680     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
                0.00    0.00  547836/12671680     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00  550469/12671680     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00  551009/12671680     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [77]
                0.00    0.00  559599/12671680     void std::_Construct<double>(double*) [685]
                0.00    0.00  599941/12671680     void std::_Construct<Math::Matrix>(Math::Matrix*) [151]
                0.00    0.00  792567/12671680     void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
                0.00    0.00 1154826/12671680     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.00    0.00 1160048/12671680     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1160488/12671680     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
                0.00    0.00 1161912/12671680     decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [36]
                0.00    0.00 1168637/12671680     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [143]
                0.00    0.00 1174855/12671680     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [607]
[472]    0.1    0.01    0.00 12671680         operator new(unsigned long, void*) [472]
-----------------------------------------------
                0.01    0.00 11514948/11514948     std::__future_base::_Result<void>*& std::__get_helper<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [382]
[473]    0.1    0.01    0.00 11514948         std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [473]
                0.00    0.00 11516179/11516179     std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result<void>*, false>&) [804]
-----------------------------------------------
                0.00    0.00 1199885/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&) [370]
                0.00    0.00 1586197/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [417]
                0.01    0.00 5569690/8355772     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [321]
[474]    0.1    0.01    0.00 8355772         std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data() [474]
-----------------------------------------------
                0.01    0.00 7371176/7371176     std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [476]
[475]    0.1    0.01    0.00 7371176         std::__future_base::_Result_base*& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [475]
                0.00    0.00 7379425/7379425     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [810]
-----------------------------------------------
                0.00    0.01 7366301/7366301     std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [286]
[476]    0.1    0.00    0.01 7366301         std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [476]
                0.01    0.00 7371176/7371176     std::__future_base::_Result_base*& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [475]
-----------------------------------------------
                0.00    0.00       1/6807381     std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [777]
                0.00    0.00       1/6807381     std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [754]
                0.00    0.00  546376/6807381     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [365]
                0.00    0.00  547058/6807381     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00  547980/6807381     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00 1150532/6807381     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1151198/6807381     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.00    0.00 1162564/6807381     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [440]
                0.00    0.00 1701671/6807381     std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [631]
[477]    0.1    0.01    0.00 6807381         std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00 6814124/6814124     __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [811]
-----------------------------------------------
                0.00    0.00 1652346/6698503     std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [104]
                0.01    0.00 5046157/6698503     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base*> >, std::is_move_constructible<std::__future_base::_Result_base*>, std::is_move_assignable<std::__future_base::_Result_base*> >::value, void>::type std::swap<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&, std::__future_base::_Result_base*&) [410]
[478]    0.1    0.01    0.00 6698503         std::remove_reference<std::__future_base::_Result_base*&>::type&& std::move<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [478]
-----------------------------------------------
                0.01    0.00 6198286/6198286     std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [282]
[479]    0.1    0.01    0.00 6198286         __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [479]
-----------------------------------------------
                0.01    0.00 5191221/5191221     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [394]
[480]    0.1    0.01    0.00 5191221         std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [480]
-----------------------------------------------
                0.00    0.00 1717027/5154885     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
                0.00    0.00 1718515/5154885     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
                0.00    0.00 1719343/5154885     void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
[481]    0.1    0.01    0.00 5154885         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [481]
-----------------------------------------------
                0.01    0.00 5033794/5033794     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base::_Deleter> >, std::is_move_constructible<std::__future_base::_Result_base::_Deleter>, std::is_move_assignable<std::__future_base::_Result_base::_Deleter> >::value, void>::type std::swap<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&, std::__future_base::_Result_base::_Deleter&) [429]
[482]    0.1    0.01    0.00 5033794         std::remove_reference<std::__future_base::_Result_base::_Deleter&>::type&& std::move<std::__future_base::_Result_base::_Deleter&>(std::__future_base::_Result_base::_Deleter&) [482]
-----------------------------------------------
                0.00    0.00  120749/3577640     FFNN::feedForward(Math::Matrix) [46]
                0.00    0.00  800932/3577640     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.01    0.00 2655959/3577640     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[483]    0.1    0.01    0.00 3577640         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long) [483]
-----------------------------------------------
                0.00    0.00 1174701/3525659     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [543]
                0.00    0.00 1174742/3525659     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [607]
                0.00    0.00 1176216/3525659     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
[484]    0.1    0.01    0.00 3525659         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [484]
-----------------------------------------------
                0.00    0.00 1718374/3438702     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
                0.01    0.00 1720328/3438702     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
[485]    0.1    0.01    0.00 3438702         void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [485]
-----------------------------------------------
                0.00    0.00       2/3426395     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [422]
                0.00    0.00 1704395/3426395     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [360]
                0.01    0.00 1721998/3426395     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [560]
[486]    0.1    0.01    0.00 3426395         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [486]
-----------------------------------------------
                0.00    0.00 1703830/3423469     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
                0.01    0.00 1719639/3423469     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [461]
[487]    0.1    0.01    0.00 3423469         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [487]
-----------------------------------------------
                0.01    0.00 3171980/3171980     std::allocator<double>::allocator(std::allocator<double> const&) [342]
[488]    0.1    0.01    0.00 3171980         __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [488]
-----------------------------------------------
                0.01    0.00 3097361/3097361     std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [390]
[489]    0.1    0.01    0.00 3097361         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [489]
-----------------------------------------------
                0.01    0.00 2868174/2868174     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [343]
[490]    0.1    0.01    0.00 2868174         std::operator==(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [490]
-----------------------------------------------
                0.00    0.00  538706/2374057     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [128]
                0.00    0.00  686057/2374057     std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
                0.00    0.00 1149294/2374057     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [58]
[491]    0.1    0.01    0.00 2374057         std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [491]
-----------------------------------------------
                0.01    0.00 2298292/2298292     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [392]
[492]    0.1    0.01    0.00 2298292         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [492]
-----------------------------------------------
                0.01    0.00 1715014/1715014     std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
[493]    0.1    0.01    0.00 1715014         bool* std::__addressof<bool>(bool&) [493]
-----------------------------------------------
                0.01    0.00 1712564/1712564     void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [161]
[494]    0.1    0.01    0.00 1712564         std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [494]
                0.00    0.00 1718001/1718001     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator void (*)()() const [842]
                0.00    0.00 1716218/1716218     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [843]
-----------------------------------------------
                0.01    0.00 1708662/1708662     std::allocator<int>::allocator() [255]
[495]    0.1    0.01    0.00 1708662         __gnu_cxx::new_allocator<int>::new_allocator() [495]
-----------------------------------------------
                0.01    0.00 1699843/1699843     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [397]
[496]    0.1    0.01    0.00 1699843         std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [496]
-----------------------------------------------
                0.01    0.00 1699511/1699511     std::__future_base::_State_baseV2::_State_baseV2() [125]
[497]    0.1    0.01    0.00 1699511         std::atomic_flag::atomic_flag(bool) [497]
                0.00    0.00 1700338/1700338     std::atomic_flag::_S_init(bool) [853]
-----------------------------------------------
                             1651097             std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
[498]    0.1    0.01    0.00 1651097         std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr() <cycle 1> [498]
                             1642249             std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [502]
-----------------------------------------------
                0.01    0.00 1650548/1650548     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [430]
[499]    0.1    0.01    0.00 1650548         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [499]
-----------------------------------------------
                             1647923             std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [236]
[500]    0.1    0.01    0.00 1647923         void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*) <cycle 1> [500]
                             1641787             void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*) <cycle 1> [571]
-----------------------------------------------
                0.01    0.00 1643196/1643196     std::__future_base::_Result<void>::_M_destroy() [289]
[501]    0.1    0.01    0.00 1643196         std::__future_base::_Result<void>::~_Result() [501]
                0.00    0.00 1649552/1649552     std::__future_base::_Result<void>::~_Result() [856]
-----------------------------------------------
                             1642249             std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr() <cycle 1> [498]
[502]    0.1    0.01    0.00 1642249         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [502]
                             1646510             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [204]
-----------------------------------------------
                0.01    0.00 1641489/1641489     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [445]
[503]    0.1    0.01    0.00 1641489         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [503]
-----------------------------------------------
                0.00    0.00  489303/1582031     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [277]
                0.00    0.00  545153/1582031     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00  547575/1582031     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
[504]    0.1    0.01    0.00 1582031         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [504]
                0.00    0.00 1591020/1591020     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_ptr() [858]
-----------------------------------------------
                0.00    0.00  774721/1549664     std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [371]
                0.01    0.00  774943/1549664     double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [421]
[505]    0.1    0.01    0.00 1549664         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>::type&) [505]
-----------------------------------------------
                0.01    0.00 1536439/1536439     std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [88]
[506]    0.1    0.01    0.00 1536439         void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [506]
                0.00    0.00 1550811/1550811     std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [860]
-----------------------------------------------
                0.01    0.00 1173132/1173132     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
[507]    0.1    0.01    0.00 1173132         bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [507]
-----------------------------------------------
                0.01    0.01 1171336/1171336     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [80]
[508]    0.1    0.01    0.01 1171336         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [508]
                0.01    0.00 1176926/1176926     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [572]
                0.00    0.00 1173998/1720645     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [840]
-----------------------------------------------
                0.01    0.00 1167574/1167574     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
[509]    0.1    0.01    0.00 1167574         std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [509]
-----------------------------------------------
                0.01    0.00 1153883/1153883     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [372]
[510]    0.1    0.01    0.00 1153883         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [510]
                0.00    0.00 1152127/1152127     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [873]
-----------------------------------------------
                0.01    0.00 1146657/1146657     std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [449]
[511]    0.1    0.01    0.00 1146657         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [511]
-----------------------------------------------
                0.01    0.00 1141128/1141128     std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [6]
[512]    0.1    0.01    0.00 1141128         std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [512]
-----------------------------------------------
                0.01    0.00  599950/599950      std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&) [210]
[513]    0.1    0.01    0.00  599950         std::remove_reference<std::vector<double, std::allocator<double> >&>::type&& std::move<std::vector<double, std::allocator<double> >&>(std::vector<double, std::allocator<double> >&) [513]
-----------------------------------------------
                0.00    0.00  197765/593613      std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
                0.00    0.00  197838/593613      void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [546]
                0.00    0.00  198010/593613      void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [613]
[514]    0.1    0.01    0.00  593613         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&) [514]
-----------------------------------------------
                0.01    0.00  559707/559707      int const* std::min_element<int const*>(int const*, int const*) [516]
[515]    0.1    0.01    0.00  559707         int const* std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>(int const*, int const*, __gnu_cxx::__ops::_Iter_less_iter) [515]
                0.00    0.00  559689/559689      bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int const*, int const*>(int const*, int const*) const [914]
-----------------------------------------------
                0.00    0.01  559686/559686      int std::min<int>(std::initializer_list<int>) [517]
[516]    0.1    0.00    0.01  559686         int const* std::min_element<int const*>(int const*, int const*) [516]
                0.01    0.00  559707/559707      int const* std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>(int const*, int const*, __gnu_cxx::__ops::_Iter_less_iter) [515]
                0.00    0.00  559695/590242      __gnu_cxx::__ops::__iter_less_iter() [909]
-----------------------------------------------
                0.00    0.01  559624/559624      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[517]    0.1    0.00    0.01  559624         int std::min<int>(std::initializer_list<int>) [517]
                0.00    0.01  559686/559686      int const* std::min_element<int const*>(int const*, int const*) [516]
                0.00    0.00  559675/1119344     std::initializer_list<int>::begin() const [878]
                0.00    0.00  559643/559644      std::initializer_list<int>::end() const [917]
-----------------------------------------------
                0.01    0.00  559565/559565      double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
[518]    0.1    0.01    0.00  559565         std::iterator_traits<double*>::iterator_category std::__iterator_category<double*>(double* const&) [518]
-----------------------------------------------
                0.01    0.00  546064/546064      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [165]
[519]    0.1    0.01    0.00  546064         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [519]
                0.00    0.00  547315/547315      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [925]
                0.00    0.00  546647/1720645     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [840]
-----------------------------------------------
                0.01    0.00  545330/545330      std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
[520]    0.1    0.01    0.00  545330         std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [520]
-----------------------------------------------
                0.01    0.00  449189/449189      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[521]    0.1    0.01    0.00  449189         void std::condition_variable::wait<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}>(std::unique_lock<std::mutex>&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}) [521]
                0.00    0.00  576886/576886      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}::operator()() const [911]
-----------------------------------------------
                0.00    0.01  258879/258879      std::_Function_base::~_Function_base() [68]
[522]    0.1    0.00    0.01  258879         std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [522]
                0.00    0.01  258802/258802      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [523]
-----------------------------------------------
                0.00    0.01  258802/258802      std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [522]
[523]    0.1    0.00    0.01  258802         std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [523]
                0.00    0.01  258770/258770      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [524]
-----------------------------------------------
                0.00    0.01  258770/258770      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [523]
[524]    0.1    0.00    0.01  258770         std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [524]
                0.01    0.00  258728/258728      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() [525]
-----------------------------------------------
                0.01    0.00  258728/258728      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [524]
[525]    0.1    0.01    0.00  258728         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() [525]
                0.00    0.00  258758/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.01    0.00  227749/227749      std::_Function_base::~_Function_base() [68]
[526]    0.1    0.01    0.00  227749         std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [526]
                0.00    0.00  225064/225064      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [952]
-----------------------------------------------
                0.00    0.01  199458/199458      std::_Function_base::~_Function_base() [68]
[527]    0.1    0.00    0.01  199458         std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [527]
                0.00    0.01  199439/199439      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [528]
-----------------------------------------------
                0.00    0.01  199439/199439      std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [527]
[528]    0.1    0.00    0.01  199439         std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [528]
                0.01    0.00  199436/199436      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [529]
-----------------------------------------------
                0.01    0.00  199436/199436      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [528]
[529]    0.1    0.01    0.00  199436         std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [529]
                0.00    0.00  199440/199440      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() [963]
-----------------------------------------------
                0.00    0.01  170824/170824      std::_Function_base::~_Function_base() [68]
[530]    0.1    0.00    0.01  170824         std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [530]
                0.00    0.01  167299/167299      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [531]
-----------------------------------------------
                0.00    0.01  167299/167299      std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [530]
[531]    0.1    0.00    0.01  167299         std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [531]
                0.01    0.00  166650/166650      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [532]
-----------------------------------------------
                0.01    0.00  166650/166650      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [531]
[532]    0.1    0.01    0.00  166650         std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [532]
                0.00    0.00  169771/369402      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() [940]
-----------------------------------------------
                0.00    0.00   14954/30232       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.01    0.00   15278/30232       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[533]    0.1    0.01    0.00   30232         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [533]
-----------------------------------------------
                                                 <spontaneous>
[534]    0.1    0.01    0.00                 bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> const&) [534]
-----------------------------------------------
                                                 <spontaneous>
[535]    0.1    0.01    0.00                 std::function<void ()>** std::__copy_move_backward_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [535]
-----------------------------------------------
                0.00    0.00    3638/8157253     void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00 1153901/8157253     decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [90]
                0.00    0.00 1162226/8157253     std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
                0.00    0.00 1164241/8157253     void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [141]
                0.00    0.00 1167096/8157253     decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [143]
                0.00    0.00 1168071/8157253     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [191]
                0.00    0.00 1169014/8157253     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [243]
                0.00    0.00 1169066/8157253     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
[536]    0.1    0.01    0.00 8157253         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.00    0.00  547112/3400513     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00  549966/3400513     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.00    0.00 1149328/3400513     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1154107/3400513     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
[537]    0.1    0.01    0.00 3400513         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [537]
-----------------------------------------------
                0.01    0.00  699191/699191      std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long) [376]
[538]    0.1    0.01    0.00  699191         __gnu_cxx::new_allocator<Math::Matrix>::deallocate(Math::Matrix*, unsigned long) [538]
-----------------------------------------------
                0.00    0.00       2/692030      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
                0.00    0.00  105197/692030      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
                0.00    0.00  109418/692030      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [547]
                0.01    0.00  477413/692030      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [545]
[539]    0.1    0.01    0.00  692030         std::__deque_buf_size(unsigned long) [539]
-----------------------------------------------
                0.00    0.00    2558/32790       void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&) [663]
                0.00    0.00   14955/32790       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15277/32790       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[540]    0.1    0.00    0.01   32790         std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [540]
                0.00    0.01   32788/32788       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [541]
-----------------------------------------------
                0.00    0.01   32788/32788       std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [540]
[541]    0.1    0.00    0.01   32788         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [541]
                0.00    0.00   32788/32788       std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix> const&) [603]
                0.00    0.00   32783/32783       std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false> const&) [605]
-----------------------------------------------
                0.00    0.01 1722890/1722890     std::function<void ()>::function(std::function<void ()>&&) [142]
[542]    0.1    0.00    0.01 1722890         std::function<void ()>::operator bool() const [542]
                0.01    0.00 1728763/8242539     std::_Function_base::_M_empty() const [285]
-----------------------------------------------
                0.00    0.01 1177139/1177139     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
[543]    0.1    0.00    0.01 1177139         void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [543]
                0.00    0.00 1175118/1175118     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [607]
                0.00    0.00 1174701/3525659     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [484]
-----------------------------------------------
                0.00    0.01  489383/489383      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
[544]    0.1    0.00    0.01  489383         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [544]
                0.00    0.00  491178/491178      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [606]
                0.00    0.00  493870/3286582     std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [427]
-----------------------------------------------
                0.00    0.00  105066/476174      std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [653]
                0.00    0.01  371108/476174      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
[545]    0.1    0.00    0.01  476174         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [545]
                0.01    0.00  477413/692030      std::__deque_buf_size(unsigned long) [539]
-----------------------------------------------
                0.00    0.01  197845/197845      std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
[546]    0.1    0.00    0.01  197845         void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [546]
                0.00    0.00  197955/197955      void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [613]
                0.00    0.00  197838/593613      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&) [514]
-----------------------------------------------
                0.00    0.00       1/109459      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [740]
                0.00    0.00  109458/109459      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
[547]    0.1    0.01    0.00  109459         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [547]
                0.00    0.00  109418/692030      std::__deque_buf_size(unsigned long) [539]
                0.00    0.00  109404/109404      std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long) [703]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           FFNN::~FFNN() [616]
[548]    0.1    0.00    0.01       2         std::vector<int, std::allocator<int> >::~vector() [548]
                0.00    0.01       2/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [463]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [751]
                0.00    0.00       2/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1095]
-----------------------------------------------
                0.01    0.00 1699637/1699637     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [225]
[549]    0.1    0.01    0.00 1699637         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [549]
                0.00    0.00  105191/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
-----------------------------------------------
                0.00    0.00   59809/1408266     Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.00  588686/1408266     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.00  759771/1408266     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const [257]
[550]    0.1    0.01    0.00 1408266         Math::Matrix::operator[](int) [550]
                0.00    0.00 1410084/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.01 2386523/2386523     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [305]
[551]    0.1    0.00    0.01 2386523         std::tuple_element<1ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [551]
                0.01    0.00 2386832/7385433     std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [383]
-----------------------------------------------
                0.00    0.00    4600/604528      std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
                0.00    0.01  599928/604528      std::vector<double, std::allocator<double> >::vector(std::allocator<double> const&) [553]
[552]    0.1    0.00    0.01  604528         std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&) [552]
                0.00    0.01  604530/1585582     std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [417]
-----------------------------------------------
                0.00    0.01  599937/599937      std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
[553]    0.1    0.00    0.01  599937         std::vector<double, std::allocator<double> >::vector(std::allocator<double> const&) [553]
                0.00    0.01  599928/604528      std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&) [552]
-----------------------------------------------
                0.01    0.00   26321/26321       std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [375]
[554]    0.1    0.01    0.00   26321         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [554]
                0.00    0.00   52335/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.00   26208/26208       std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [716]
-----------------------------------------------
                0.00    0.01   14952/14952       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
[555]    0.1    0.00    0.01   14952         Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
                0.00    0.00   14954/114796      Math::operator-(Math::Matrix, Math::Matrix const&) [406]
                0.00    0.00   14952/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00   29906/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00   59809/1408266     Math::Matrix::operator[](int) [550]
                0.00    0.00   44857/44857       Math::Matrix::getSize() const [1015]
-----------------------------------------------
                0.00    0.01  599936/599936      std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
[556]    0.1    0.00    0.01  599936         std::_Vector_base<double, std::allocator<double> >::get_allocator() const [556]
                0.00    0.00  599941/3171298     std::allocator<double>::allocator(std::allocator<double> const&) [342]
                0.00    0.00  599929/1020775     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [884]
-----------------------------------------------
                0.00    0.00       2/371557      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
                0.00    0.00    3661/371557      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00   52335/371557      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [554]
                0.00    0.00  101102/371557      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
                0.00    0.00  105191/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [549]
                0.00    0.00  109266/371557      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
[557]    0.1    0.00    0.01  371557         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.01  371108/476174      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [545]
-----------------------------------------------
                0.01    0.00   91645/91645       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter) [458]
[558]    0.1    0.01    0.00   91645         bool __gnu_cxx::operator==<double*, double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [558]
                0.00    0.00  183291/3129693     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [561]
-----------------------------------------------
                0.01    0.00  256326/256326      Activation::Sigmoid::fn(Math::Matrix) [192]
[559]    0.1    0.01    0.00  256326         std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
                0.00    0.00  256562/256562      void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [701]
                0.00    0.00  256451/769366      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&) [894]
                0.00    0.00  256262/7726071     std::_Function_base::_Function_base() [806]
                0.00    0.00  256209/256209      bool std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&) [947]
-----------------------------------------------
                0.00    0.00       1/1720633     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
                0.00    0.01 1720632/1720633     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [461]
[560]    0.1    0.00    0.01 1720633         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [560]
                0.01    0.00 1721998/3426395     std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [486]
-----------------------------------------------
                0.00    0.00   61102/3129693     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [705]
                0.00    0.00  183291/3129693     bool __gnu_cxx::operator==<double*, double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [558]
                0.00    0.00 2885300/3129693     double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [361]
[561]    0.1    0.01    0.00 3129693         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [561]
-----------------------------------------------
                0.01    0.00 12385172/12385172     void std::_Destroy<double*>(double*, double*) [215]
[562]    0.1    0.01    0.00 12385172         void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [562]
-----------------------------------------------
                0.00    0.00  596360/5482947     std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [614]
                0.00    0.00  596809/5482947     std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [656]
                0.00    0.00  597101/5482947     double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [682]
                0.00    0.00  773539/5482947     std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [322]
                0.00    0.00  774481/5482947     std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [371]
                0.00    0.00  775145/5482947     double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [421]
                0.00    0.00 1369512/5482947     std::function<double (double)>::operator()(double) const [268]
[563]    0.1    0.01    0.00 5482947         double&& std::forward<double>(std::remove_reference<double>::type&) [563]
-----------------------------------------------
                0.01    0.00 5199985/5199985     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [428]
[564]    0.1    0.01    0.00 5199985         std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [564]
-----------------------------------------------
                0.01    0.00 5196530/5196530     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [569]
[565]    0.1    0.01    0.00 5196530         std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [565]
-----------------------------------------------
                0.00    0.00  550015/5115127     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [67]
                0.00    0.00  550058/5115127     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00 1154425/5115127     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1155126/5115127     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [32]
                0.00    0.00 1705503/5115127     std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<void ()> > const&) [650]
[566]    0.1    0.01    0.00 5115127         std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
                0.00    0.00 5121650/5121650     __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<void ()> > const&) [815]
-----------------------------------------------
                0.00    0.00  544359/3414022     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [661]
                0.00    0.00 1166721/3414022     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [643]
                0.00    0.00 1702942/3414022     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&) [441]
[567]    0.1    0.01    0.00 3414022         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [567]
-----------------------------------------------
                0.00    0.00  550501/3343559     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00 1159104/3343559     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1633954/3343559     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
[568]    0.1    0.01    0.00 3343559         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [568]
                0.00    0.00 3344406/3344406     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [824]
-----------------------------------------------
                0.00    0.01 1730916/1730916     std::function<void ()>::swap(std::function<void ()>&) [254]
[569]    0.1    0.00    0.01 1730916         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [569]
                0.01    0.00 5196530/5196530     std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [565]
-----------------------------------------------
                0.01    0.00 1706254/1706254     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [357]
[570]    0.1    0.01    0.00 1706254         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [570]
-----------------------------------------------
                             1641787             void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*) <cycle 1> [500]
[571]    0.1    0.01    0.00 1641787         void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*) <cycle 1> [571]
                             1644240             std::packaged_task<void ()>::~packaged_task() <cycle 1> [82]
-----------------------------------------------
                0.01    0.00 1176926/1176926     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [508]
[572]    0.1    0.01    0.00 1176926         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [572]
-----------------------------------------------
                0.01    0.00 1166415/1166415     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [297]
[573]    0.1    0.01    0.00 1166415         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [573]
-----------------------------------------------
                0.01    0.00 1041067/1041067     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [575]
[574]    0.1    0.01    0.00 1041067         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [574]
-----------------------------------------------
                0.00    0.00  491296/1040779     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.00  549483/1040779     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[575]    0.1    0.00    0.01 1040779         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [575]
                0.01    0.00 1041067/1041067     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [574]
-----------------------------------------------
                0.00    0.00  463711/1008979     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.00  545268/1008979     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[576]    0.1    0.01    0.00 1008979         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [576]
-----------------------------------------------
                0.00    0.00  474844/1008023     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [242]
                0.00    0.00  533179/1008023     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [353]
[577]    0.1    0.01    0.00 1008023         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() [577]
                0.00    0.00 1011916/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  393662/787514      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() const [632]
                0.00    0.00  393852/787514      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() const [367]
[578]    0.1    0.01    0.00  787514         __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix const* const&) [578]
-----------------------------------------------
                0.01    0.00  686260/686260      std::__future_base::_Result_base* const& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [431]
[579]    0.1    0.01    0.00  686260         std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [579]
                0.00    0.00  686256/686256      std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false> const&) [901]
-----------------------------------------------
                0.01    0.00  299959/299959      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [581]
[580]    0.1    0.01    0.00  299959         std::allocator_traits<std::allocator<Math::Matrix> >::max_size(std::allocator<Math::Matrix> const&) [580]
-----------------------------------------------
                0.00    0.00      14/299959      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const [739]
                0.00    0.00  299945/299959      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [600]
[581]    0.1    0.00    0.01  299959         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [581]
                0.01    0.00  299959/299959      std::allocator_traits<std::allocator<Math::Matrix> >::max_size(std::allocator<Math::Matrix> const&) [580]
                0.00    0.00  299962/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
-----------------------------------------------
                0.01    0.00  260219/260219      Math::Matrix::operator*=(Math::Matrix const&) [14]
[582]    0.1    0.01    0.00  260219         std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
                0.00    0.00  260237/260237      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [945]
                0.00    0.00  260232/780704      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&) [891]
                0.00    0.00  260229/260229      bool std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1} const&) [946]
                0.00    0.00  260224/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.00    0.00    3673/105068      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00  101395/105068      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
[583]    0.1    0.01    0.00  105068         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [583]
                0.00    0.00  105233/105233      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [967]
                0.00    0.00  105118/105120      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [969]
-----------------------------------------------
                0.01    0.00   61099/61099       bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const [588]
[584]    0.1    0.01    0.00   61099         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const [584]
-----------------------------------------------
                0.01    0.00   50016/50016       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [587]
[585]    0.1    0.01    0.00   50016         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [585]
                0.00    0.00   50016/50016       unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [1009]
-----------------------------------------------
                0.00    0.00      50/50000       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
                0.00    0.00   49950/50000       std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [601]
[586]    0.1    0.00    0.01   50000         unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [586]
                0.00    0.01   50000/50000       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [587]
-----------------------------------------------
                0.00    0.01   50000/50000       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [586]
[587]    0.1    0.00    0.01   50000         unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [587]
                0.01    0.00   50016/50016       std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [585]
                0.00    0.00  100000/100000      std::uniform_int_distribution<unsigned long>::param_type::a() const [973]
                0.00    0.00   50000/50000       std::uniform_int_distribution<unsigned long>::param_type::b() const [1010]
-----------------------------------------------
                0.00    0.01   30548/30548       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter) [458]
[588]    0.1    0.00    0.01   30548         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const [588]
                0.01    0.00   61099/61099       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const [584]
-----------------------------------------------
                0.00    0.00     101/202         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const [629]
                0.00    0.00     101/202         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const [628]
[589]    0.1    0.01    0.00     202         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix> const* const&) [589]
-----------------------------------------------
                0.00    0.00     100/200         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00     100/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const [630]
[590]    0.1    0.01    0.00     200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const [590]
                0.00    0.00     200/200         std::__detail::__extent_storage<18446744073709551615ul>::_M_extent() const [1044]
-----------------------------------------------
                0.01    0.00     100/100         FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[591]    0.1    0.01    0.00     100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [591]
                0.00    0.00     100/100         auto std::to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1049]
                0.00    0.00     100/50122       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1006]
                0.00    0.00     100/100         std::__detail::__extent_storage<18446744073709551615ul>::__extent_storage(unsigned long) [1048]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [627]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [626]
[592]    0.1    0.01    0.00       2         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [592]
                0.00    0.00       2/105120      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [969]
                0.00    0.00       2/2           std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [1154]
-----------------------------------------------
                                                 <spontaneous>
[593]    0.1    0.01    0.00                 Activation::LeakyRelu::fnDerv(Math::Matrix) [593]
-----------------------------------------------
                                                 <spontaneous>
[594]    0.1    0.01    0.00                 std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> const&) [594]
-----------------------------------------------
                                                 <spontaneous>
[595]    0.1    0.01    0.00                 double* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<double const*, double*>(double const*, double const*, double*) [595]
-----------------------------------------------
                                                 <spontaneous>
[596]    0.1    0.01    0.00                 void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&>(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [596]
-----------------------------------------------
                                                 <spontaneous>
[597]    0.1    0.01    0.00                 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy() [597]
-----------------------------------------------
                                                 <spontaneous>
[598]    0.1    0.01    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned long) [598]
-----------------------------------------------
                                                 <spontaneous>
[599]    0.1    0.01    0.00                 double* std::copy<double*, double*>(double*, double*, double*) [599]
-----------------------------------------------
                0.00    0.00  299934/299934      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
[600]    0.1    0.00    0.00  299934         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [600]
                0.00    0.00  299945/299959      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [581]
                0.00    0.00  299949/1692170     std::allocator<Math::Matrix>::~allocator() [855]
                0.00    0.00  299940/1385247     std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [866]
-----------------------------------------------
                0.00    0.00   49950/49950       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[601]    0.1    0.00    0.00   49950         std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [601]
                0.00    0.00   49950/50000       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [586]
                0.00    0.00   49950/50000       std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long) [1012]
                0.00    0.00   49950/49950       std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&) [1014]
-----------------------------------------------
                0.00    0.00 2382249/2382249     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [276]
[602]    0.1    0.00    0.00 2382249         std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [602]
                0.00    0.00 2379893/7147746     std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [425]
-----------------------------------------------
                0.00    0.00   32788/32788       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [541]
[603]    0.1    0.00    0.00   32788         std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix> const&) [603]
                0.00    0.00   32786/32786       std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false> const&) [604]
-----------------------------------------------
                0.00    0.00   32786/32786       std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix> const&) [603]
[604]    0.1    0.00    0.00   32786         std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false> const&) [604]
                0.00    0.00   32785/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
-----------------------------------------------
                0.00    0.00   32783/32783       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [541]
[605]    0.1    0.00    0.00   32783         std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false> const&) [605]
                0.00    0.00   32783/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
-----------------------------------------------
                0.00    0.00  491178/491178      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [544]
[606]    0.1    0.00    0.00  491178         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [606]
                0.00    0.00  492317/1638241     std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [420]
-----------------------------------------------
                0.00    0.00 1175118/1175118     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [543]
[607]    0.1    0.00    0.00 1175118         void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [607]
                0.00    0.00 1174742/3525659     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [484]
                0.00    0.00 1174855/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00 1174181/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00 1138498/1138498     std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state() [201]
[608]    0.1    0.00    0.00 1138498         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::~_Impl() [608]
                0.00    0.00 1139344/8398530     std::allocator<int>::~allocator() [341]
-----------------------------------------------
                0.00    0.00  421686/421686      std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
[609]    0.1    0.00    0.00  421686         __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_select_on_copy(std::allocator<double> const&) [609]
                0.00    0.00  421420/421420      std::allocator_traits<std::allocator<double> >::select_on_container_copy_construction(std::allocator<double> const&) [610]
-----------------------------------------------
                0.00    0.00  421420/421420      __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_select_on_copy(std::allocator<double> const&) [609]
[610]    0.1    0.00    0.00  421420         std::allocator_traits<std::allocator<double> >::select_on_container_copy_construction(std::allocator<double> const&) [610]
                0.00    0.00  421428/3171298     std::allocator<double>::allocator(std::allocator<double> const&) [342]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[611]    0.1    0.00    0.00       2         generateData(int) [611]
                0.00    0.00    2300/2300        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&) [647]
                0.00    0.00    2300/2300        std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&) [678]
                0.00    0.00    4600/4600        Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [679]
                0.00    0.00    4600/4600        std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
                0.00    0.00    4600/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00    2300/37388       std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
                0.00    0.00    4600/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00    4600/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00    4600/6129898     std::allocator<double>::allocator() [386]
                0.00    0.00    4600/4600        std::abs(double) [1035]
                0.00    0.00       2/2           std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::vector() [1165]
-----------------------------------------------
                0.00    0.00 1177454/1177454     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [324]
[612]    0.0    0.00    0.00 1177454         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() const [612]
                0.00    0.00 1178587/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00  197955/197955      void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [546]
[613]    0.0    0.00    0.00  197955         void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [613]
                0.00    0.00  198010/593613      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&) [514]
                0.00    0.00  198107/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  198063/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  596335/596335      std::function<double (double)>::operator()(double) const [268]
[614]    0.0    0.00    0.00  596335         std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [614]
                0.00    0.00  596477/596477      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [641]
                0.00    0.00  596751/596751      std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [656]
                0.00    0.00  596360/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[615]    0.0    0.00    0.00       1         FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&) [720]
                0.00    0.00       7/7           Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00       7/5015028     Math::Matrix::~Matrix() [117]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [744]
                0.00    0.00       6/6           std::vector<int, std::allocator<int> >::operator[](unsigned long) [1098]
                0.00    0.00       4/4           bool __gnu_cxx::operator==<int*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [1102]
                0.00    0.00       3/3           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector() [1140]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [1133]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [1130]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::size() const [1153]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::begin() [1210]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::end() [1209]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[616]    0.0    0.00    0.00       1         FFNN::~FFNN() [616]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::~vector() [548]
                0.00    0.00       3/699099      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
-----------------------------------------------
                0.00    0.00       1/1           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[617]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
                0.00    0.00       1/3           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [463]
                0.00    0.00       1/1           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [774]
                0.00    0.00       1/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [768]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign() [1183]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::size() const [1153]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::capacity() const [1187]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::end() const [1185]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::begin() const [1186]
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1095]
-----------------------------------------------
                0.00    0.00 2381037/2381037     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [418]
[618]    0.0    0.00    0.00 2381037         std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [618]
                0.00    0.00 2382105/14295698     std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [405]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10Activation7Sigmoid2fnEN4Math6MatrixE [411]
[619]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [619]
                0.00    0.00       1/1           Math::ThreadPool::ThreadPool(unsigned long) [620]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [619]
[620]    0.0    0.00    0.00       1         Math::ThreadPool::ThreadPool(unsigned long) [620]
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [624]
                0.00    0.00       1/1           Math::ThreadPool::start(unsigned long) [732]
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::vector() [1207]
                0.00    0.00       1/1           std::mutex::mutex() [1206]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [622]
[621]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [626]
                0.00    0.00       2/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.00       2/692030      std::__deque_buf_size(unsigned long) [539]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [749]
                0.00    0.00       1/33          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [1059]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [623]
[622]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [622]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [1192]
-----------------------------------------------
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [624]
[623]    0.0    0.00    0.00       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [623]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [622]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::ThreadPool(unsigned long) [620]
[624]    0.0    0.00    0.00       1         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [624]
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [623]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
[625]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [625]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [627]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [740]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [1193]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
[626]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [626]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [592]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long) [780]
                0.00    0.00       1/2           std::allocator<std::function<void ()>*>::~allocator() [1155]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [625]
[627]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [627]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [592]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [779]
                0.00    0.00       1/2           std::allocator<std::function<void ()>*>::~allocator() [1155]
-----------------------------------------------
                0.00    0.00      50/101         FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00      51/101         FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[628]    0.0    0.00    0.00     101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const [628]
                0.00    0.00     101/202         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix> const* const&) [589]
-----------------------------------------------
                0.00    0.00      50/101         FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00      51/101         FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[629]    0.0    0.00    0.00     101         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const [629]
                0.00    0.00     101/202         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix> const* const&) [589]
-----------------------------------------------
                0.00    0.00     100/100         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[630]    0.0    0.00    0.00     100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const [630]
                0.00    0.00     100/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const [590]
                0.00    0.00     100/200         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [1043]
-----------------------------------------------
                0.00    0.00  547557/1701144     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [453]
                0.00    0.00 1153587/1701144     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [644]
[631]    0.0    0.00    0.00 1701144         std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [631]
                0.00    0.00 1701671/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
-----------------------------------------------
                0.00    0.00  393786/393786      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[632]    0.0    0.00    0.00  393786         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() const [632]
                0.00    0.00  393662/787514      __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix const* const&) [578]
-----------------------------------------------
                0.00    0.00  773836/773836      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [634]
[633]    0.0    0.00    0.00  773836         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() const [633]
                0.00    0.00  774020/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00  773652/773652      std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [322]
[634]    0.0    0.00    0.00  773652         std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [634]
                0.00    0.00  773836/773836      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() const [633]
                0.00    0.00  774171/774171      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&) [893]
-----------------------------------------------
                0.00    0.00  749971/749971      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [636]
[635]    0.0    0.00    0.00  749971         Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() const [635]
                0.00    0.00  750953/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00  749272/749272      std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [118]
[636]    0.0    0.00    0.00  749272         std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [636]
                0.00    0.00  749971/749971      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() const [635]
-----------------------------------------------
                0.00    0.00   37388/37388       std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
[637]    0.0    0.00    0.00   37388         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl() [637]
                0.00    0.00   37390/37390       std::_Head_base<0ul, Math::Matrix, false>::~_Head_base() [657]
                0.00    0.00   37387/37387       std::_Tuple_impl<1ul, Math::Matrix>::~_Tuple_impl() [658]
-----------------------------------------------
                0.00    0.00    2300/37388       generateData(int) [611]
                0.00    0.00    4858/37388       void std::destroy_at<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [698]
                0.00    0.00   14950/37388       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15280/37388       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[638]    0.0    0.00    0.00   37388         std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
                0.00    0.00   37388/37388       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl() [637]
-----------------------------------------------
                0.00    0.00     400/115196      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00  114796/115196      Math::operator-(Math::Matrix, Math::Matrix const&) [406]
[639]    0.0    0.00    0.00  115196         Math::Matrix::operator-=(Math::Matrix const&) [639]
                0.00    0.00  231786/9009094     Math::Matrix::operator[](int) const [213]
                0.00    0.00  231787/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.00  596555/596555      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [641]
[640]    0.0    0.00    0.00  596555         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() const [640]
                0.00    0.00  596663/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00  596477/596477      std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [614]
[641]    0.0    0.00    0.00  596477         std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [641]
                0.00    0.00  596555/596555      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() const [640]
                0.00    0.00  596752/596752      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&) [907]
-----------------------------------------------
                0.00    0.00  499296/499296      std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state() [335]
[642]    0.0    0.00    0.00  499296         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::~_Impl() [642]
                0.00    0.00  498928/8398530     std::allocator<int>::~allocator() [341]
-----------------------------------------------
                0.00    0.00 1167567/1167567     std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&) [332]
[643]    0.0    0.00    0.00 1167567         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [643]
                0.00    0.00 1166721/3414022     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [567]
                0.00    0.00 1165547/3411759     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [822]
-----------------------------------------------
                0.00    0.00 1156571/1156571     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
[644]    0.0    0.00    0.00 1156571         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [644]
                0.00    0.00 1153587/1701144     std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [631]
-----------------------------------------------
                0.00    0.00  548935/548935      std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [446]
[645]    0.0    0.00    0.00  548935         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() const [645]
                0.00    0.00  549188/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00    2300/2300        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&) [647]
[646]    0.0    0.00    0.00    2300         std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
                0.00    0.00      22/22          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00    2278/2300        void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [672]
                0.00    0.00    2300/6922        std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&) [1030]
                0.00    0.00    2300/2300        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back() [1040]
                0.00    0.00      22/2422        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [1038]
-----------------------------------------------
                0.00    0.00    2300/2300        generateData(int) [611]
[647]    0.0    0.00    0.00    2300         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&) [647]
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
                0.00    0.00    2300/2300        std::remove_reference<std::tuple<Math::Matrix, Math::Matrix>&>::type&& std::move<std::tuple<Math::Matrix, Math::Matrix>&>(std::tuple<Math::Matrix, Math::Matrix>&) [1041]
-----------------------------------------------
                0.00    0.00  544295/544295      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [93]
[648]    0.0    0.00    0.00  544295         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [648]
                0.00    0.00  544173/544173      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [649]
                0.00    0.00  544753/544753      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [928]
-----------------------------------------------
                0.00    0.00  544173/544173      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [648]
[649]    0.0    0.00    0.00  544173         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [649]
                0.00    0.00  545015/6521323     std::_Any_data::_M_access() const [384]
-----------------------------------------------
                0.00    0.00 1704211/1704211     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >) [447]
[650]    0.0    0.00    0.00 1704211         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<void ()> > const&) [650]
                0.00    0.00 1705503/5115127     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
-----------------------------------------------
                0.00    0.00       1/105186      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [749]
                0.00    0.00    3667/105186      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00  101518/105186      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
[651]    0.0    0.00    0.00  105186         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
                0.00    0.00  105197/692030      std::__deque_buf_size(unsigned long) [539]
                0.00    0.00  105236/105236      std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long) [704]
-----------------------------------------------
                0.00    0.00 1443141/1443141     void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::allocator<double>&) [448]
[652]    0.0    0.00    0.00 1443141         void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [652]
                0.00    0.00 1444321/42275828     std::is_constant_evaluated() [272]
                0.00    0.00 1447848/1447848     void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [862]
-----------------------------------------------
                0.00    0.00  104915/104915      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const [654]
[653]    0.0    0.00    0.00  104915         std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [653]
                0.00    0.00  105066/476174      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [545]
-----------------------------------------------
                0.00    0.00    3651/104657      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00  101006/104657      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [218]
[654]    0.0    0.00    0.00  104657         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const [654]
                0.00    0.00  104915/104915      std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [653]
-----------------------------------------------
                0.00    0.00    3653/3653        std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [91]
[655]    0.0    0.00    0.00    3653         void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [655]
                0.00    0.00    3671/105306      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [375]
                0.00    0.00    3646/1165226     void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [141]
                0.00    0.00    3673/105068      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [583]
                0.00    0.00    3667/105186      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
                0.00    0.00    3651/104657      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const [654]
                0.00    0.00    3661/371557      std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [557]
                0.00    0.00    3638/8157253     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&) [536]
-----------------------------------------------
                0.00    0.00  596751/596751      std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [614]
[656]    0.0    0.00    0.00  596751         std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [656]
                0.00    0.00  596959/596959      double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [682]
                0.00    0.00  596809/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
                0.00    0.00  596909/1193876     Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>::type&) [867]
-----------------------------------------------
                0.00    0.00   37390/37390       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl() [637]
[657]    0.0    0.00    0.00   37390         std::_Head_base<0ul, Math::Matrix, false>::~_Head_base() [657]
                0.00    0.00   37390/5015028     Math::Matrix::~Matrix() [117]
-----------------------------------------------
                0.00    0.00   37387/37387       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl() [637]
[658]    0.0    0.00    0.00   37387         std::_Tuple_impl<1ul, Math::Matrix>::~_Tuple_impl() [658]
                0.00    0.00   37385/37385       std::_Head_base<1ul, Math::Matrix, false>::~_Head_base() [659]
-----------------------------------------------
                0.00    0.00   37385/37385       std::_Tuple_impl<1ul, Math::Matrix>::~_Tuple_impl() [658]
[659]    0.0    0.00    0.00   37385         std::_Head_base<1ul, Math::Matrix, false>::~_Head_base() [659]
                0.00    0.00   37383/5015028     Math::Matrix::~Matrix() [117]
-----------------------------------------------
                0.00    0.00      22/22          std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
[660]    0.0    0.00    0.00      22         void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [667]
                0.00    0.00      22/24          void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [697]
                0.00    0.00      22/2300        void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [672]
                0.00    0.00      22/22          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_allocate(unsigned long) [746]
                0.00    0.00      22/24          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [745]
                0.00    0.00      66/68          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() [1053]
                0.00    0.00      44/200388      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [956]
                0.00    0.00      22/22          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [1068]
                0.00    0.00      22/222         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() [1042]
                0.00    0.00      22/50122       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1006]
                0.00    0.00      22/6922        std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&) [1030]
-----------------------------------------------
                0.00    0.00  545114/545114      std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&) [662]
[661]    0.0    0.00    0.00  545114         std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [661]
                0.00    0.00  544359/3414022     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [567]
                0.00    0.00  544400/3411759     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [822]
-----------------------------------------------
                0.00    0.00  544563/544563      std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [84]
[662]    0.0    0.00    0.00  544563         std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&) [662]
                0.00    0.00  545114/545114      std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [661]
                0.00    0.00  544614/544614      std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&) [929]
-----------------------------------------------
                0.00    0.00    2558/2558        std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [664]
[663]    0.0    0.00    0.00    2558         void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&) [663]
                0.00    0.00    2558/32790       std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [540]
                0.00    0.00    2558/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00    2558/2558        std::tuple<Math::Matrix, Math::Matrix> const& std::forward<std::tuple<Math::Matrix, Math::Matrix> const&>(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> const&>::type&) [1037]
-----------------------------------------------
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::uninitialized_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [665]
[664]    0.0    0.00    0.00      44         std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [664]
                0.00    0.00    2558/2558        void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&) [663]
                0.00    0.00    2558/7416        std::tuple<Math::Matrix, Math::Matrix>* std::__addressof<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&) [1029]
-----------------------------------------------
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy_a<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [666]
[665]    0.0    0.00    0.00      44         std::tuple<Math::Matrix, Math::Matrix>* std::uninitialized_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [665]
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [664]
-----------------------------------------------
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [667]
[666]    0.0    0.00    0.00      44         std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy_a<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [666]
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::uninitialized_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [665]
-----------------------------------------------
                0.00    0.00      44/44          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[667]    0.0    0.00    0.00      44         std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [667]
                0.00    0.00      44/44          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy_a<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [666]
                0.00    0.00      88/88          std::tuple<Math::Matrix, Math::Matrix> const* std::__make_move_if_noexcept_iterator<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const*>(std::tuple<Math::Matrix, Math::Matrix>*) [1052]
-----------------------------------------------
                0.00    0.00  693272/693272      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long) [669]
[668]    0.0    0.00    0.00  693272         std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long) [668]
                0.00    0.00  693006/42275828     std::is_constant_evaluated() [272]
                0.00    0.00  693176/693176      __gnu_cxx::new_allocator<Math::Matrix>::allocate(unsigned long, void const*) [899]
-----------------------------------------------
                0.00    0.00       7/693150      void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.00  693143/693150      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_create_storage(unsigned long) [670]
[669]    0.0    0.00    0.00  693150         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long) [669]
                0.00    0.00  693272/693272      std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long) [668]
-----------------------------------------------
                0.00    0.00  692988/692988      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [671]
[670]    0.0    0.00    0.00  692988         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_create_storage(unsigned long) [670]
                0.00    0.00  693143/693150      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long) [669]
-----------------------------------------------
                0.00    0.00  299946/692583      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [120]
                0.00    0.00  392637/692583      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[671]    0.0    0.00    0.00  692583         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [671]
                0.00    0.00  692988/692988      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_create_storage(unsigned long) [670]
                0.00    0.00  692568/692568      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&) [900]
-----------------------------------------------
                0.00    0.00      22/2300        void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00    2278/2300        std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
[672]    0.0    0.00    0.00    2300         void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [672]
                0.00    0.00    2300/2300        decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [673]
                0.00    0.00    2300/6922        std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&) [1030]
-----------------------------------------------
                0.00    0.00    2300/2300        void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [672]
[673]    0.0    0.00    0.00    2300         decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [673]
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix>&&) [676]
                0.00    0.00    2300/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00    2300/6922        std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&) [1030]
-----------------------------------------------
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix>&&) [676]
[674]    0.0    0.00    0.00    2300         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&) [674]
                0.00    0.00    2300/2300        std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix>&&) [694]
                0.00    0.00    2300/2300        std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false>&&) [691]
-----------------------------------------------
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&) [677]
[675]    0.0    0.00    0.00    2300         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [675]
                0.00    0.00    2300/2300        std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&) [695]
                0.00    0.00    2300/2300        std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [690]
                0.00    0.00    4600/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    2300/2300        decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [673]
[676]    0.0    0.00    0.00    2300         std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix>&&) [676]
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&) [674]
-----------------------------------------------
                0.00    0.00    2300/2300        std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&) [678]
[677]    0.0    0.00    0.00    2300         std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&) [677]
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [675]
                0.00    0.00    4600/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    2300/2300        generateData(int) [611]
[678]    0.0    0.00    0.00    2300         std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&) [678]
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&) [677]
                0.00    0.00    4600/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    4600/4600        generateData(int) [611]
[679]    0.0    0.00    0.00    4600         Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [679]
                0.00    0.00    4600/6609718     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
                0.00    0.00    4600/5551531     std::vector<double, std::allocator<double> >::vector() [182]
                0.00    0.00    4600/9549935     std::vector<double, std::allocator<double> >::size() const [339]
-----------------------------------------------
                0.00    0.00  550068/550068      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[680]    0.0    0.00    0.00  550068         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [680]
                0.00    0.00  549482/549482      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [681]
                0.00    0.00  548541/1039520     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [882]
-----------------------------------------------
                0.00    0.00  549482/549482      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [680]
[681]    0.0    0.00    0.00  549482         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [681]
                0.00    0.00  548831/42275828     std::is_constant_evaluated() [272]
                0.00    0.00  549322/549322      __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [920]
-----------------------------------------------
                0.00    0.00  596959/596959      std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [656]
[682]    0.0    0.00    0.00  596959         double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [682]
                0.00    0.00  597101/5482947     double&& std::forward<double>(std::remove_reference<double>::type&) [563]
                0.00    0.00  597157/597157      Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}::operator()(double) const [906]
                0.00    0.00  596967/1193876     Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>::type&) [867]
-----------------------------------------------
                0.00    0.00  491315/1037019     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.00  545704/1037019     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[683]    0.0    0.00    0.00 1037019         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [683]
                0.00    0.00  492630/492630      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [684]
-----------------------------------------------
                0.00    0.00  492630/492630      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [683]
[684]    0.0    0.00    0.00  492630         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [684]
                0.00    0.00  487156/42275828     std::is_constant_evaluated() [272]
                0.00    0.00  489396/489396      __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [932]
-----------------------------------------------
                0.00    0.00  559588/559588      double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [354]
[685]    0.0    0.00    0.00  559588         void std::_Construct<double>(double*) [685]
                0.00    0.00  559599/12671680     operator new(unsigned long, void*) [472]
-----------------------------------------------
                0.00    0.00  546875/546875      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
[686]    0.0    0.00    0.00  546875         void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [686]
                0.00    0.00  546310/546310      void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [687]
                0.00    0.00  546447/1639180     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [857]
-----------------------------------------------
                0.00    0.00  546310/546310      void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [686]
[687]    0.0    0.00    0.00  546310         void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [687]
                0.00    0.00  546256/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  546320/1639180     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [857]
                0.00    0.00  546301/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00    4600/4600        generateData(int) [611]
[688]    0.0    0.00    0.00    4600         std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
                0.00    0.00    4600/4600        void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
                0.00    0.00    4600/604528      std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&) [552]
                0.00    0.00    4600/4600        std::initializer_list<double>::end() const [1031]
                0.00    0.00    4600/9200        std::initializer_list<double>::begin() const [1026]
-----------------------------------------------
                0.00    0.00    4600/4600        std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
[689]    0.0    0.00    0.00    4600         void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
                0.00    0.00    4600/564087      std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
                0.00    0.00    4600/6186170     std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [126]
                0.00    0.00    4600/4600        double* std::__uninitialized_copy_a<double const*, double*, double>(double const*, double const*, double*, std::allocator<double>&) [711]
                0.00    0.00    9200/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
                0.00    0.00    4600/4600        std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*) [1036]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [675]
[690]    0.0    0.00    0.00    2300         std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [690]
                0.00    0.00    2300/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00    2300/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&) [674]
[691]    0.0    0.00    0.00    2300         std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false>&&) [691]
                0.00    0.00    2300/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix>&&) [694]
[692]    0.0    0.00    0.00    2300         std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false>&&) [692]
                0.00    0.00    2300/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&) [695]
[693]    0.0    0.00    0.00    2300         std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [693]
                0.00    0.00    2300/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00    2300/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&) [674]
[694]    0.0    0.00    0.00    2300         std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix>&&) [694]
                0.00    0.00    2300/2300        std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false>&&) [692]
-----------------------------------------------
                0.00    0.00    2300/2300        std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [675]
[695]    0.0    0.00    0.00    2300         std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&) [695]
                0.00    0.00    2300/2300        std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [693]
                0.00    0.00    2300/20700       Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [697]
[696]    0.0    0.00    0.00      24         void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [696]
                0.00    0.00      24/24          void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [700]
                0.00    0.00      24/42275828     std::is_constant_evaluated() [272]
-----------------------------------------------
                0.00    0.00       2/24          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector() [717]
                0.00    0.00      22/24          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[697]    0.0    0.00    0.00      24         void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [697]
                0.00    0.00      24/24          void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [696]
-----------------------------------------------
                0.00    0.00    4858/4858        void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [699]
[698]    0.0    0.00    0.00    4858         void std::destroy_at<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [698]
                0.00    0.00    4858/37388       std::tuple<Math::Matrix, Math::Matrix>::~tuple() [638]
-----------------------------------------------
                0.00    0.00    4858/4858        void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [700]
[699]    0.0    0.00    0.00    4858         void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [699]
                0.00    0.00    4858/4858        void std::destroy_at<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [698]
-----------------------------------------------
                0.00    0.00      24/24          void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [696]
[700]    0.0    0.00    0.00      24         void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [700]
                0.00    0.00    4858/4858        void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [699]
                0.00    0.00    4858/7416        std::tuple<Math::Matrix, Math::Matrix>* std::__addressof<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&) [1029]
-----------------------------------------------
                0.00    0.00  256562/256562      std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
[701]    0.0    0.00    0.00  256562         void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [701]
                0.00    0.00  256497/256497      void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [702]
                0.00    0.00  256454/769366      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&) [894]
-----------------------------------------------
                0.00    0.00  256497/256497      void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [701]
[702]    0.0    0.00    0.00  256497         void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [702]
                0.00    0.00  256659/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00  256560/8646925     std::_Any_data::_M_access() [805]
                0.00    0.00  256461/769366      Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&) [894]
-----------------------------------------------
                0.00    0.00  109404/109404      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [547]
[703]    0.0    0.00    0.00  109404         std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long) [703]
                0.00    0.00  109301/42275828     std::is_constant_evaluated() [272]
                0.00    0.00  109365/109365      __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long) [966]
-----------------------------------------------
                0.00    0.00  105236/105236      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
[704]    0.0    0.00    0.00  105236         std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long) [704]
                0.00    0.00  104766/42275828     std::is_constant_evaluated() [272]
                0.00    0.00  104762/104762      __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*) [971]
-----------------------------------------------
                0.00    0.00   30550/30550       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::random_access_iterator_tag) [706]
[705]    0.0    0.00    0.00   30550         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [705]
                0.00    0.00   61102/3129693     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [561]
-----------------------------------------------
                0.00    0.00   30550/30550       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [707]
[706]    0.0    0.00    0.00   30550         std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::random_access_iterator_tag) [706]
                0.00    0.00   30550/30550       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [705]
-----------------------------------------------
                0.00    0.00   30547/30547       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[707]    0.0    0.00    0.00   30547         std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [707]
                0.00    0.00   30550/30550       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::random_access_iterator_tag) [706]
                0.00    0.00   30547/30547       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [1016]
-----------------------------------------------
                0.00    0.00    4600/4600        double* std::uninitialized_copy<double const*, double*>(double const*, double const*, double*) [710]
[708]    0.0    0.00    0.00    4600         double* std::__uninitialized_copy<true>::__uninit_copy<double const*, double*>(double const*, double const*, double*) [708]
                0.00    0.00    4600/4600        double* std::copy<double const*, double*>(double const*, double const*, double*) [712]
-----------------------------------------------
                0.00    0.00    4600/4600        double* std::copy<double const*, double*>(double const*, double const*, double*) [712]
[709]    0.0    0.00    0.00    4600         double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
                0.00    0.00    4600/7092191     double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*) [137]
                0.00    0.00    4600/5637526     double* std::__niter_wrap<double*>(double* const&, double*) [467]
                0.00    0.00    9200/9200        double const* std::__niter_base<double const*>(double const*) [1028]
                0.00    0.00    4600/5636922     double* std::__niter_base<double*>(double*) [813]
-----------------------------------------------
                0.00    0.00    4600/4600        double* std::__uninitialized_copy_a<double const*, double*, double>(double const*, double const*, double*, std::allocator<double>&) [711]
[710]    0.0    0.00    0.00    4600         double* std::uninitialized_copy<double const*, double*>(double const*, double const*, double*) [710]
                0.00    0.00    4600/4600        double* std::__uninitialized_copy<true>::__uninit_copy<double const*, double*>(double const*, double const*, double*) [708]
-----------------------------------------------
                0.00    0.00    4600/4600        void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
[711]    0.0    0.00    0.00    4600         double* std::__uninitialized_copy_a<double const*, double*, double>(double const*, double const*, double*, std::allocator<double>&) [711]
                0.00    0.00    4600/4600        double* std::uninitialized_copy<double const*, double*>(double const*, double const*, double*) [710]
-----------------------------------------------
                0.00    0.00    4600/4600        double* std::__uninitialized_copy<true>::__uninit_copy<double const*, double*>(double const*, double const*, double*) [708]
[712]    0.0    0.00    0.00    4600         double* std::copy<double const*, double*>(double const*, double const*, double*) [712]
                0.00    0.00    4600/4600        double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
                0.00    0.00    9200/9200        double const* std::__miter_base<double const*>(double const*) [1027]
-----------------------------------------------
                0.00    0.00   26335/26335       std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [714]
[713]    0.0    0.00    0.00   26335         std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [713]
                0.00    0.00   26218/26218       std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [715]
-----------------------------------------------
                0.00    0.00   26317/26317       std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [716]
[714]    0.0    0.00    0.00   26317         std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [714]
                0.00    0.00   26335/26335       std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [713]
                0.00    0.00   78992/78992       std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**) [1002]
                0.00    0.00   26189/26189       std::function<void ()>** std::__niter_wrap<std::function<void ()>**>(std::function<void ()>** const&, std::function<void ()>**) [1024]
-----------------------------------------------
                0.00    0.00   26218/26218       std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [713]
[715]    0.0    0.00    0.00   26218         std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [715]
                0.00    0.00   26162/42275828     std::is_constant_evaluated() [272]
                0.00    0.00   26251/26251       std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [1023]
-----------------------------------------------
                0.00    0.00   26208/26208       std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [554]
[716]    0.0    0.00    0.00   26208         std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [716]
                0.00    0.00   26317/26317       std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [714]
                0.00    0.00   52536/52536       std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**) [1005]
-----------------------------------------------
                0.00    0.00       2/2           main [1]
[717]    0.0    0.00    0.00       2         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector() [717]
                0.00    0.00       2/24          void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [697]
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base() [775]
                0.00    0.00       2/68          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() [1053]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&) [720]
[718]    0.0    0.00    0.00       7         Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
                0.00    0.00       7/7           void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.00       7/28          Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&) [1063]
                0.00    0.00       7/14          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() [1072]
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [1089]
-----------------------------------------------
                0.00    0.00       7/7           Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
[719]    0.0    0.00    0.00       7         void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.00       7/7           void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&) [723]
                0.00    0.00      14/14          Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [729]
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [730]
                0.00    0.00       7/699115      void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [246]
                0.00    0.00       7/699181      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long) [377]
                0.00    0.00       7/693150      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long) [669]
                0.00    0.00      21/1392409     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [863]
                0.00    0.00      14/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [1061]
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() [1090]
                0.00    0.00       7/7           __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::difference_type __gnu_cxx::operator-<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [1083]
                0.00    0.00       7/28          Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&) [1063]
-----------------------------------------------
                0.00    0.00       7/7           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[720]    0.0    0.00    0.00       7         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&) [720]
                0.00    0.00       7/7           Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
                0.00    0.00       7/599707      std::remove_reference<Math::Matrix&>::type&& std::move<Math::Matrix&>(Math::Matrix&) [904]
-----------------------------------------------
                0.00    0.00     400/400         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[721]    0.0    0.00    0.00     400         Math::Matrix::operator*=(double const&) [721]
                0.00    0.00    2200/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
-----------------------------------------------
                0.00    0.00       7/7           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[722]    0.0    0.00    0.00       7         Math::Matrix::generateRandom(int, int, double) [722]
                0.00    0.00       7/260453      Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [309]
                0.00    0.00       7/7           std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) [725]
                0.00    0.00       7/7151775     std::vector<double, std::allocator<double> >::~vector() [86]
                0.00    0.00      30/14211546     std::vector<double, std::allocator<double> >::operator[](unsigned long) [436]
                0.00    0.00       7/9297560     std::allocator<double>::~allocator() [313]
                0.00    0.00       7/6129898     std::allocator<double>::allocator() [386]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[723]    0.0    0.00    0.00       7         void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&) [723]
                0.00    0.00       7/7           decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&) [724]
                0.00    0.00       7/28          Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&) [1063]
-----------------------------------------------
                0.00    0.00       7/7           void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&) [723]
[724]    0.0    0.00    0.00       7         decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&) [724]
                0.00    0.00       7/4087017     Math::Matrix::Matrix(Math::Matrix const&) [33]
                0.00    0.00       7/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00       7/28          Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&) [1063]
-----------------------------------------------
                0.00    0.00       7/7           Math::Matrix::generateRandom(int, int, double) [722]
[725]    0.0    0.00    0.00       7         std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) [725]
                0.00    0.00       7/7           std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&) [735]
                0.00    0.00       7/981313      std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [330]
                0.00    0.00       7/564087      std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
-----------------------------------------------
                0.00    0.00      14/14          Math::Matrix* std::uninitialized_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [727]
[726]    0.0    0.00    0.00      14         Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [726]
                0.00    0.00       5/792030      void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
                0.00    0.00       5/2790156     Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&) [830]
-----------------------------------------------
                0.00    0.00      14/14          Math::Matrix* std::__uninitialized_copy_a<Math::Matrix const*, Math::Matrix*, Math::Matrix>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*, std::allocator<Math::Matrix>&) [728]
[727]    0.0    0.00    0.00      14         Math::Matrix* std::uninitialized_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [727]
                0.00    0.00      14/14          Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [726]
-----------------------------------------------
                0.00    0.00      14/14          Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [729]
[728]    0.0    0.00    0.00      14         Math::Matrix* std::__uninitialized_copy_a<Math::Matrix const*, Math::Matrix*, Math::Matrix>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*, std::allocator<Math::Matrix>&) [728]
                0.00    0.00      14/14          Math::Matrix* std::uninitialized_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [727]
-----------------------------------------------
                0.00    0.00      14/14          void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[729]    0.0    0.00    0.00      14         Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [729]
                0.00    0.00      14/14          Math::Matrix* std::__uninitialized_copy_a<Math::Matrix const*, Math::Matrix*, Math::Matrix>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*, std::allocator<Math::Matrix>&) [728]
                0.00    0.00      28/28          Math::Matrix const* std::__make_move_if_noexcept_iterator<Math::Matrix, Math::Matrix const*>(Math::Matrix*) [1062]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[730]    0.0    0.00    0.00       7         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [730]
                0.00    0.00      28/3429962     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [275]
                0.00    0.00      14/14          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const [739]
                0.00    0.00       7/33          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [1059]
-----------------------------------------------
                0.00    0.00       4/4           Math::ThreadPool::start(unsigned long) [732]
[731]    0.0    0.00    0.00       4         std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
                0.00    0.00       1/4           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [759]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
                0.00    0.00       4/4           std::vector<std::thread, std::allocator<std::thread> >::back() [1122]
                0.00    0.00       3/8           std::vector<std::thread, std::allocator<std::thread> >::end() [1080]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::ThreadPool(unsigned long) [620]
[732]    0.0    0.00    0.00       1         Math::ThreadPool::start(unsigned long) [732]
                0.00    0.00       4/4           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
-----------------------------------------------
                0.00    0.00       3/3           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
[733]    0.0    0.00    0.00       3         void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
                0.00    0.00       3/3           std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [734]
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long) [756]
                0.00    0.00       3/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long) [755]
                0.00    0.00       3/4           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [759]
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [761]
                0.00    0.00       6/7           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [1087]
                0.00    0.00       6/22          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [1067]
                0.00    0.00       3/4           std::vector<std::thread, std::allocator<std::thread> >::begin() [1123]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1131]
                0.00    0.00       3/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[734]    0.0    0.00    0.00       3         std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [734]
                0.00    0.00      12/559632      std::vector<std::thread, std::allocator<std::thread> >::size() const [403]
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [1094]
                0.00    0.00       3/33          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [1059]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&) [725]
[735]    0.0    0.00    0.00       7         std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&) [735]
                0.00    0.00       7/7           double* std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&) [738]
                0.00    0.00       7/21191045     std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [227]
-----------------------------------------------
                0.00    0.00       7/7           double* std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [737]
[736]    0.0    0.00    0.00       7         double* std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [736]
                0.00    0.00       7/559595      double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
-----------------------------------------------
                0.00    0.00       7/7           double* std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&) [738]
[737]    0.0    0.00    0.00       7         double* std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [737]
                0.00    0.00       7/7           double* std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [736]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&) [735]
[738]    0.0    0.00    0.00       7         double* std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&) [738]
                0.00    0.00       7/7           double* std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [737]
-----------------------------------------------
                0.00    0.00      14/14          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [730]
[739]    0.0    0.00    0.00      14         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const [739]
                0.00    0.00      14/299959      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [581]
                0.00    0.00      14/392340      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() const [939]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [625]
[740]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [740]
                0.00    0.00       1/109459      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [547]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::~ThreadPool() [412]
[741]    0.0    0.00    0.00       1         Math::ThreadPool::stop() [741]
                0.00    0.00       1/5408717     std::unique_lock<std::mutex>::unique_lock(std::mutex&) [133]
                0.00    0.00       1/5615318     std::unique_lock<std::mutex>::~unique_lock() [153]
                0.00    0.00       5/5           bool __gnu_cxx::operator==<std::thread*, std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1100]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [1075]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [1101]
                0.00    0.00       1/4           std::vector<std::thread, std::allocator<std::thread> >::begin() [1123]
                0.00    0.00       1/8           std::vector<std::thread, std::allocator<std::thread> >::end() [1080]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [743]
[742]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [742]
                0.00    0.00       1/1706161     std::allocator<int>::allocator() [255]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [1163]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [744]
[743]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [743]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [742]
-----------------------------------------------
                0.00    0.00       1/1           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[744]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [744]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [743]
-----------------------------------------------
                0.00    0.00       2/24          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base() [775]
                0.00    0.00      22/24          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[745]    0.0    0.00    0.00      24         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [745]
                0.00    0.00      22/22          std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [747]
-----------------------------------------------
                0.00    0.00      22/22          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[746]    0.0    0.00    0.00      22         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_allocate(unsigned long) [746]
                0.00    0.00      22/22          std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long) [748]
-----------------------------------------------
                0.00    0.00      22/22          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [745]
[747]    0.0    0.00    0.00      22         std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [747]
                0.00    0.00      22/42275828     std::is_constant_evaluated() [272]
                0.00    0.00      22/22          __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [1064]
-----------------------------------------------
                0.00    0.00      22/22          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_allocate(unsigned long) [746]
[748]    0.0    0.00    0.00      22         std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long) [748]
                0.00    0.00      22/42275828     std::is_constant_evaluated() [272]
                0.00    0.00      22/22          __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocate(unsigned long, void const*) [1065]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
[749]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [749]
                0.00    0.00       1/105186      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [651]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[750]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
                0.00    0.00       1/1           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(std::allocator<int> const&) [778]
                0.00    0.00       1/559644      std::initializer_list<int>::end() const [917]
                0.00    0.00       1/1119344     std::initializer_list<int>::begin() const [878]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::~vector() [548]
[751]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [751]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [753]
                0.00    0.00       2/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [768]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
[752]    0.0    0.00    0.00       1         void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [754]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [769]
                0.00    0.00       1/1           int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&) [788]
                0.00    0.00       2/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1095]
                0.00    0.00       1/1           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [1213]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [751]
[753]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [753]
                0.00    0.00       2/8398530     std::allocator<int>::~allocator() [341]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
[754]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [754]
                0.00    0.00       1/8398530     std::allocator<int>::~allocator() [341]
                0.00    0.00       1/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1208]
-----------------------------------------------
                0.00    0.00       1/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [794]
                0.00    0.00       3/4           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[755]    0.0    0.00    0.00       4         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long) [755]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long) [757]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[756]    0.0    0.00    0.00       3         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long) [756]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long) [758]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long) [755]
[757]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long) [757]
                0.00    0.00       3/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long) [1128]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long) [756]
[758]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long) [758]
                0.00    0.00       3/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [1129]
-----------------------------------------------
                0.00    0.00       1/4           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
                0.00    0.00       3/4           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[759]    0.0    0.00    0.00       4         void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [759]
                0.00    0.00       4/4           decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [760]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00       4/4           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [759]
[760]    0.0    0.00    0.00       4         decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [760]
                0.00    0.00       4/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
                0.00    0.00       4/4           std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[761]    0.0    0.00    0.00       6         std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [761]
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>) [762]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [761]
[762]    0.0    0.00    0.00       6         std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>) [762]
                0.00    0.00       6/6           std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [763]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>) [762]
[763]    0.0    0.00    0.00       6         std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [763]
                0.00    0.00       6/6           std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [764]
                0.00    0.00      18/18          std::thread* std::__niter_base<std::thread*>(std::thread*) [1069]
-----------------------------------------------
                0.00    0.00       6/6           std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [763]
[764]    0.0    0.00    0.00       6         std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [764]
                0.00    0.00       3/3           void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
                0.00    0.00       6/13          std::thread* std::__addressof<std::thread>(std::thread&) [1073]
-----------------------------------------------
                0.00    0.00       3/3           void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
[765]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&) [765]
                0.00    0.00       3/3           decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&) [766]
                0.00    0.00       3/6           std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&) [1099]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&) [765]
[766]    0.0    0.00    0.00       3         decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&) [766]
                0.00    0.00       3/12671680     operator new(unsigned long, void*) [472]
                0.00    0.00       3/6           std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&) [1099]
                0.00    0.00       3/3           std::thread::thread(std::thread&&) [1139]
-----------------------------------------------
                0.00    0.00       3/3           std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [764]
[767]    0.0    0.00    0.00       3         void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&) [765]
                0.00    0.00       3/3           std::remove_reference<std::thread&>::type&& std::move<std::thread&>(std::thread&) [1143]
                0.00    0.00       3/13          std::thread* std::__addressof<std::thread>(std::thread&) [1073]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*) [1137]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
                0.00    0.00       2/3           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [751]
[768]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [768]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [770]
-----------------------------------------------
                0.00    0.00       1/2           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
                0.00    0.00       1/2           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [774]
[769]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [769]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [771]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [768]
[770]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [770]
                0.00    0.00       2/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [1147]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [769]
[771]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [771]
                0.00    0.00       2/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1148]
-----------------------------------------------
                0.00    0.00       1/2           int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
                0.00    0.00       1/2           int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
[772]    0.0    0.00    0.00       2         int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*) [772]
                0.00    0.00       2/2           int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) [773]
-----------------------------------------------
                0.00    0.00       2/2           int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*) [772]
[773]    0.0    0.00    0.00       2         int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) [773]
                0.00    0.00       2/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       2/2           int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [1158]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[774]    0.0    0.00    0.00       1         int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [774]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [769]
                0.00    0.00       1/1           int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) [787]
                0.00    0.00       1/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1095]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector() [717]
[775]    0.0    0.00    0.00       2         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base() [775]
                0.00    0.00       2/24          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [745]
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::~_Vector_impl() [1160]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::~ThreadPool() [412]
[776]    0.0    0.00    0.00       1         std::vector<std::thread, std::allocator<std::thread> >::~vector() [776]
                0.00    0.00       1/1           void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [792]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [794]
                0.00    0.00       1/7           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [1087]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(std::allocator<int> const&) [778]
[777]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [777]
                0.00    0.00       1/6807381     std::allocator<int>::allocator(std::allocator<int> const&) [477]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [1163]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
[778]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base(std::allocator<int> const&) [778]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [777]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [627]
[779]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [779]
                0.00    0.00       1/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long) [1179]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [626]
[780]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long) [780]
                0.00    0.00       1/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*) [1180]
-----------------------------------------------
                0.00    0.00       1/1           int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [785]
[781]    0.0    0.00    0.00       1         int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [781]
                0.00    0.00       1/1           int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [789]
-----------------------------------------------
                0.00    0.00       1/1           int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*) [786]
[782]    0.0    0.00    0.00       1         int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*) [782]
                0.00    0.00       1/1           int* std::copy<int const*, int*>(int const*, int const*, int*) [790]
-----------------------------------------------
                0.00    0.00       1/1           int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [789]
[783]    0.0    0.00    0.00       1         int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
                0.00    0.00       1/2           int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*) [772]
                0.00    0.00       2/2           int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [1169]
                0.00    0.00       1/2           int* std::__niter_base<int*>(int*) [1170]
                0.00    0.00       1/2           int* std::__niter_wrap<int*>(int* const&, int*) [1171]
-----------------------------------------------
                0.00    0.00       1/1           int* std::copy<int const*, int*>(int const*, int const*, int*) [790]
[784]    0.0    0.00    0.00       1         int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
                0.00    0.00       1/2           int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*) [772]
                0.00    0.00       2/2           int const* std::__niter_base<int const*>(int const*) [1168]
                0.00    0.00       1/2           int* std::__niter_base<int*>(int*) [1170]
                0.00    0.00       1/2           int* std::__niter_wrap<int*>(int* const&, int*) [1171]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) [787]
[785]    0.0    0.00    0.00       1         int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [785]
                0.00    0.00       1/1           int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [781]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&) [788]
[786]    0.0    0.00    0.00       1         int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*) [786]
                0.00    0.00       1/1           int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*) [782]
-----------------------------------------------
                0.00    0.00       1/1           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [774]
[787]    0.0    0.00    0.00       1         int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) [787]
                0.00    0.00       1/1           int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [785]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
[788]    0.0    0.00    0.00       1         int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&) [788]
                0.00    0.00       1/1           int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*) [786]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [781]
[789]    0.0    0.00    0.00       1         int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [789]
                0.00    0.00       1/1           int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [1166]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*) [782]
[790]    0.0    0.00    0.00       1         int* std::copy<int const*, int*>(int const*, int const*, int*) [790]
                0.00    0.00       1/1           int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
                0.00    0.00       2/2           int const* std::__miter_base<int const*>(int const*) [1167]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [792]
[791]    0.0    0.00    0.00       1         void std::_Destroy<std::thread*>(std::thread*, std::thread*) [791]
                0.00    0.00       1/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [1195]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::~vector() [776]
[792]    0.0    0.00    0.00       1         void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [792]
                0.00    0.00       1/1           void std::_Destroy<std::thread*>(std::thread*, std::thread*) [791]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [465]
[793]    0.0    0.00    0.00       1         void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [793]
                0.00    0.00       1/42275828     std::is_constant_evaluated() [272]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [1196]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::~vector() [776]
[794]    0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [794]
                0.00    0.00       1/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long) [755]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [1198]
-----------------------------------------------
                0.00    0.00 14168029/14168029     double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [423]
[800]    0.0    0.00    0.00 14168029         __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base() const [800]
-----------------------------------------------
                0.00    0.00 2883880/14146436     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [162]
                0.00    0.00 11262556/14146436     double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [107]
[801]    0.0    0.00    0.00 14146436         __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [801]
-----------------------------------------------
                0.00    0.00  762856/13672235     std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [220]
                0.00    0.00  763190/13672235     std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [258]
                0.00    0.00  764331/13672235     void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [259]
                0.00    0.00 1151851/13672235     std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [203]
                0.00    0.00 1152951/13672235     std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [263]
                0.00    0.00 1155138/13672235     void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [262]
                0.00    0.00 1499575/13672235     std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [118]
                0.00    0.00 1500287/13672235     std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [124]
                0.00    0.00 1502965/13672235     void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [123]
                0.00    0.00 3419091/13672235     std::function<void (int, int)>::operator()(int, int) const [70]
[802]    0.0    0.00    0.00 13672235         int&& std::forward<int>(std::remove_reference<int>::type&) [802]
-----------------------------------------------
                0.00    0.00  546326/11927243     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [154]
                0.00    0.00  547283/11927243     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [169]
                0.00    0.00  547714/11927243     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
                0.00    0.00  547736/11927243     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [119]
                0.00    0.00  549880/11927243     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [109]
                0.00    0.00  550113/11927243     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [105]
                0.00    0.00  550268/11927243     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [102]
                0.00    0.00 1152234/11927243     std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [69]
                0.00    0.00 1153708/11927243     void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [101]
                0.00    0.00 1153868/11927243     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [66]
                0.00    0.00 1153986/11927243     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
                0.00    0.00 1156165/11927243     std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [59]
                0.00    0.00 1157640/11927243     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1160322/11927243     decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [110]
[803]    0.0    0.00    0.00 11927243         std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [803]
-----------------------------------------------
                0.00    0.00 11516179/11516179     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [473]
[804]    0.0    0.00    0.00 11516179         std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result<void>*, false>&) [804]
-----------------------------------------------
                0.00    0.00  192892/8646925     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() [965]
                0.00    0.00  198063/8646925     void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [613]
                0.00    0.00  199452/8646925     Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() [963]
                0.00    0.00  256560/8646925     void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [702]
                0.00    0.00  258758/8646925     Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() [525]
                0.00    0.00  371648/8646925     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() [940]
                0.00    0.00  490414/8646925     Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() [934]
                0.00    0.00  491545/8646925     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [933]
                0.00    0.00  546301/8646925     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [687]
                0.00    0.00 1011916/8646925     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() [577]
                0.00    0.00 1143971/8646925     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [876]
                0.00    0.00 1174181/8646925     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [607]
                0.00    0.00 2311224/8646925     Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() [835]
[805]    0.0    0.00    0.00 8646925         std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00   99757/7726071     std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
                0.00    0.00  197600/7726071     std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
                0.00    0.00  199589/7726071     std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
                0.00    0.00  256262/7726071     std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
                0.00    0.00  260224/7726071     std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
                0.00    0.00  533566/7726071     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
                0.00    0.00  545843/7726071     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
                0.00    0.00 1164823/7726071     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
                0.00    0.00 1172465/7726071     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [374]
                0.00    0.00 1569244/7726071     std::function<void ()>::function() [399]
                0.00    0.00 1726698/7726071     std::function<void ()>::function(std::function<void ()>&&) [142]
[806]    0.0    0.00    0.00 7726071         std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.00    0.00 7400096/7400096     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [808]
[807]    0.0    0.00    0.00 7400096         std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>&) [807]
-----------------------------------------------
                0.00    0.00 7397073/7397073     std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [383]
[808]    0.0    0.00    0.00 7397073         std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [808]
                0.00    0.00 7400096/7400096     std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>&) [807]
-----------------------------------------------
                0.00    0.00 7380871/7380871     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [810]
[809]    0.0    0.00    0.00 7380871         std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false>&) [809]
-----------------------------------------------
                0.00    0.00 7379425/7379425     std::__future_base::_Result_base*& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [475]
[810]    0.0    0.00    0.00 7379425         std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [810]
                0.00    0.00 7380871/7380871     std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false>&) [809]
-----------------------------------------------
                0.00    0.00 6814124/6814124     std::allocator<int>::allocator(std::allocator<int> const&) [477]
[811]    0.0    0.00    0.00 6814124         __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [811]
-----------------------------------------------
                0.00    0.00 6618956/6618956     std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [27]
[812]    0.0    0.00    0.00 6618956         __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_propagate_on_copy_assign() [812]
-----------------------------------------------
                0.00    0.00    4600/5636922     double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
                0.00    0.00 5632322/5636922     double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [114]
[813]    0.0    0.00    0.00 5636922         double* std::__niter_base<double*>(double*) [813]
-----------------------------------------------
                0.00    0.00 1712781/5144272     std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [18]
                0.00    0.00 1713657/5144272     std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [19]
                0.00    0.00 1717834/5144272     void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [20]
[814]    0.0    0.00    0.00 5144272         bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [814]
-----------------------------------------------
                0.00    0.00 5121650/5121650     std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [566]
[815]    0.0    0.00    0.00 5121650         __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<void ()> > const&) [815]
-----------------------------------------------
                0.00    0.00 5057570/5057570     __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_ptr() [426]
[816]    0.0    0.00    0.00 5057570         __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_addr() [816]
-----------------------------------------------
                0.00    0.00 1441914/4414338     __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const [424]
                0.00    0.00 1470599/4414338     std::vector<double, std::allocator<double> >::end() [470]
                0.00    0.00 1501825/4414338     std::vector<double, std::allocator<double> >::begin() [469]
[817]    0.0    0.00    0.00 4414338         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [817]
-----------------------------------------------
                0.00    0.00 3462322/3462322     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_ptr() [819]
[818]    0.0    0.00    0.00 3462322         __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_addr() [818]
-----------------------------------------------
                0.00    0.00 3458918/3458918     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [821]
[819]    0.0    0.00    0.00 3458918         __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_ptr() [819]
                0.00    0.00 3462322/3462322     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_addr() [818]
-----------------------------------------------
                0.00    0.00 1724061/3450865     Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const [12]
                0.00    0.00 1726804/3450865     std::function<void ()>::operator=(std::function<void ()>&&) [71]
[820]    0.0    0.00    0.00 3450865         std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [820]
-----------------------------------------------
                0.00    0.00 1130465/3448951     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [167]
                0.00    0.00 1156789/3448951     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [87]
                0.00    0.00 1161697/3448951     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[821]    0.0    0.00    0.00 3448951         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [821]
                0.00    0.00 3458918/3458918     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_ptr() [819]
-----------------------------------------------
                0.00    0.00  544400/3411759     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [661]
                0.00    0.00 1165547/3411759     std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [643]
                0.00    0.00 1701812/3411759     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&) [441]
[822]    0.0    0.00    0.00 3411759         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [822]
-----------------------------------------------
                0.00    0.00 3410044/3410044     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [356]
[823]    0.0    0.00    0.00 3410044         std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [823]
-----------------------------------------------
                0.00    0.00 3344406/3344406     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [568]
[824]    0.0    0.00    0.00 3344406         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [824]
-----------------------------------------------
                0.00    0.00 3327922/3327922     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [826]
[825]    0.0    0.00    0.00 3327922         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [825]
-----------------------------------------------
                0.00    0.00 1636904/3327561     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
                0.00    0.00 1690657/3327561     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [208]
[826]    0.0    0.00    0.00 3327561         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [826]
                0.00    0.00 3327922/3327922     std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&) [825]
-----------------------------------------------
                0.00    0.00  541474/3299112     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00 1163635/3299112     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
                0.00    0.00 1594003/3299112     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [155]
[827]    0.0    0.00    0.00 3299112         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [827]
-----------------------------------------------
                0.00    0.00 3276753/3276753     std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [389]
[828]    0.0    0.00    0.00 3276753         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>&) [828]
-----------------------------------------------
                0.00    0.00  987697/3270631     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [885]
                0.00    0.00 2282934/3270631     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [838]
[829]    0.0    0.00    0.00 3270631         std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [829]
-----------------------------------------------
                0.00    0.00       5/2790156     Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [726]
                0.00    0.00  599926/2790156     Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [131]
                0.00    0.00  791940/2790156     Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
                0.00    0.00 1398285/2790156     void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [250]
[830]    0.0    0.00    0.00 2790156         Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&) [830]
-----------------------------------------------
                0.00    0.00 2380933/2380933     bool __gnu_cxx::operator==<Math::Matrix const*, Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [869]
[831]    0.0    0.00    0.00 2380933         __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [831]
-----------------------------------------------
                0.00    0.00 1176355/2352727     void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [51]
                0.00    0.00 1176372/2352727     std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&) [49]
[832]    0.0    0.00    0.00 2352727         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>::type&) [832]
-----------------------------------------------
                0.00    0.00 1165167/2330923     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [57]
                0.00    0.00 1165756/2330923     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [42]
[833]    0.0    0.00    0.00 2330923         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [833]
-----------------------------------------------
                0.00    0.00 1162237/2326409     std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [63]
                0.00    0.00 1164172/2326409     void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&) [62]
[834]    0.0    0.00    0.00 2326409         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&) [834]
-----------------------------------------------
                0.00    0.00 1137772/2304955     std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [121]
                0.00    0.00 1167183/2304955     void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [243]
[835]    0.0    0.00    0.00 2304955         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() [835]
                0.00    0.00 2311224/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00 1128327/2294960     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
                0.00    0.00 1166633/2294960     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[836]    0.0    0.00    0.00 2294960         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [836]
-----------------------------------------------
                0.00    0.00 2290016/2290016     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [393]
[837]    0.0    0.00    0.00 2290016         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [837]
-----------------------------------------------
                0.00    0.00 1137308/2277962     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [167]
                0.00    0.00 1140654/2277962     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [195]
[838]    0.0    0.00    0.00 2277962         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [838]
                0.00    0.00 2282934/3270631     std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [829]
-----------------------------------------------
                0.00    0.00       1/1734994     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [413]
                0.00    0.00       1/1734994     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [464]
                0.00    0.00  109469/1734994     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [438]
                0.00    0.00 1625523/1734994     std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [152]
[839]    0.0    0.00    0.00 1734994         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [839]
-----------------------------------------------
                0.00    0.00  546647/1720645     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [519]
                0.00    0.00 1173998/1720645     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [508]
[840]    0.0    0.00    0.00 1720645         std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&) [840]
-----------------------------------------------
                0.00    0.00 1720426/1720426     std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [112]
[841]    0.0    0.00    0.00 1720426         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&) [841]
-----------------------------------------------
                0.00    0.00 1718001/1718001     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [494]
[842]    0.0    0.00    0.00 1718001         std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator void (*)()() const [842]
-----------------------------------------------
                0.00    0.00 1716218/1716218     std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [494]
[843]    0.0    0.00    0.00 1716218         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [843]
-----------------------------------------------
                0.00    0.00 1708700/1708700     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [439]
[844]    0.0    0.00    0.00 1708700         std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_Head_base() [844]
-----------------------------------------------
                0.00    0.00  542568/1707410     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [55]
                0.00    0.00 1164842/1707410     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [29]
[845]    0.0    0.00    0.00 1707410         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [845]
-----------------------------------------------
                0.00    0.00 1703960/1703960     std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [415]
[846]    0.0    0.00    0.00 1703960         std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base() [846]
-----------------------------------------------
                0.00    0.00  541017/1703542     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [53]
                0.00    0.00 1162525/1703542     std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [28]
[847]    0.0    0.00    0.00 1703542         std::enable_if<!std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<void ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<void ()>, std::packaged_task<void ()> >(std::packaged_task<void ()>*) [847]
-----------------------------------------------
                0.00    0.00 1702664/1702664     std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [302]
[848]    0.0    0.00    0.00 1702664         std::remove_reference<std::shared_ptr<std::packaged_task<void ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<void ()> >&>(std::shared_ptr<std::packaged_task<void ()> >&) [848]
-----------------------------------------------
                0.00    0.00 1701726/1701726     std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [851]
[849]    0.0    0.00    0.00 1701726         std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [849]
                0.00    0.00 1701114/1701114     std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&&) [850]
-----------------------------------------------
                0.00    0.00 1701114/1701114     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [849]
[850]    0.0    0.00    0.00 1701114         std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&&) [850]
-----------------------------------------------
                0.00    0.00 1701058/1701058     std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [328]
[851]    0.0    0.00    0.00 1701058         std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [851]
                0.00    0.00 1701726/1701726     std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [849]
-----------------------------------------------
                0.00    0.00 1700577/1700577     std::atomic<unsigned int>::atomic(unsigned int) [396]
[852]    0.0    0.00    0.00 1700577         std::__atomic_base<unsigned int>::__atomic_base(unsigned int) [852]
-----------------------------------------------
                0.00    0.00 1700338/1700338     std::atomic_flag::atomic_flag(bool) [497]
[853]    0.0    0.00    0.00 1700338         std::atomic_flag::_S_init(bool) [853]
-----------------------------------------------
                0.00    0.00 1698315/1698315     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&) [211]
[854]    0.0    0.00    0.00 1698315         std::__future_base::_Result<void>::_Result() [854]
-----------------------------------------------
                0.00    0.00     200/1692170     FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00  299783/1692170     FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
                0.00    0.00  299949/1692170     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [600]
                0.00    0.00  393083/1692170     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.00  699155/1692170     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::~_Vector_impl() [896]
[855]    0.0    0.00    0.00 1692170         std::allocator<Math::Matrix>::~allocator() [855]
-----------------------------------------------
                0.00    0.00 1649552/1649552     std::__future_base::_Result<void>::~_Result() [501]
[856]    0.0    0.00    0.00 1649552         std::__future_base::_Result<void>::~_Result() [856]
-----------------------------------------------
                0.00    0.00  546320/1639180     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [687]
                0.00    0.00  546413/1639180     std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
                0.00    0.00  546447/1639180     void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [686]
[857]    0.0    0.00    0.00 1639180         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&) [857]
-----------------------------------------------
                0.00    0.00 1591020/1591020     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [504]
[858]    0.0    0.00    0.00 1591020         __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_ptr() [858]
                0.00    0.00 1591013/1591013     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_addr() [859]
-----------------------------------------------
                0.00    0.00 1591013/1591013     __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_ptr() [858]
[859]    0.0    0.00    0.00 1591013         __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_addr() [859]
-----------------------------------------------
                0.00    0.00 1550811/1550811     void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [506]
[860]    0.0    0.00    0.00 1550811         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [860]
-----------------------------------------------
                0.00    0.00  749917/1501176     void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [123]
                0.00    0.00  751259/1501176     std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [124]
[861]    0.0    0.00    0.00 1501176         Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [861]
-----------------------------------------------
                0.00    0.00 1447848/1447848     void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [652]
[862]    0.0    0.00    0.00 1447848         void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [862]
-----------------------------------------------
                0.00    0.00      21/1392409     void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.00  299948/1392409     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long) [132]
                0.00    0.00  393327/1392409     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
                0.00    0.00  699113/1392409     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [199]
[863]    0.0    0.00    0.00 1392409         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [863]
-----------------------------------------------
                0.00    0.00  199553/1391236     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
                0.00    0.00  393958/1391236     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.00  797725/1391236     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
[864]    0.0    0.00    0.00 1391236         Math::Matrix::getCols() const [864]
-----------------------------------------------
                0.00    0.00 1385657/1385657     std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [866]
[865]    0.0    0.00    0.00 1385657         __gnu_cxx::new_allocator<Math::Matrix>::new_allocator(__gnu_cxx::new_allocator<Math::Matrix> const&) [865]
-----------------------------------------------
                0.00    0.00  299940/1385247     std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [600]
                0.00    0.00  392506/1385247     std::allocator_traits<std::allocator<Math::Matrix> >::select_on_container_copy_construction(std::allocator<Math::Matrix> const&) [938]
                0.00    0.00  692801/1385247     std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&) [900]
[866]    0.0    0.00    0.00 1385247         std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [866]
                0.00    0.00 1385657/1385657     __gnu_cxx::new_allocator<Math::Matrix>::new_allocator(__gnu_cxx::new_allocator<Math::Matrix> const&) [865]
-----------------------------------------------
                0.00    0.00  596909/1193876     std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [656]
                0.00    0.00  596967/1193876     double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [682]
[867]    0.0    0.00    0.00 1193876         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>::type&) [867]
-----------------------------------------------
                0.00    0.00  394237/1192189     Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [163]
                0.00    0.00  398858/1192189     Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
                0.00    0.00  399094/1192189     Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
[868]    0.0    0.00    0.00 1192189         Math::Matrix::getRows() const [868]
-----------------------------------------------
                0.00    0.00 1190102/1190102     Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
[869]    0.0    0.00    0.00 1190102         bool __gnu_cxx::operator==<Math::Matrix const*, Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [869]
                0.00    0.00 2380933/2380933     __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [831]
-----------------------------------------------
                0.00    0.00 1165012/1165012     std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [176]
[870]    0.0    0.00    0.00 1165012         bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1} const&) [870]
-----------------------------------------------
                0.00    0.00 1163955/1163955     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[871]    0.0    0.00    0.00 1163955         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [871]
-----------------------------------------------
                0.00    0.00  576610/1154115     void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [262]
                0.00    0.00  577505/1154115     std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [263]
[872]    0.0    0.00    0.00 1154115         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [872]
-----------------------------------------------
                0.00    0.00 1152127/1152127     __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [510]
[873]    0.0    0.00    0.00 1152127         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [873]
-----------------------------------------------
                0.00    0.00 1150542/1150542     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [875]
[874]    0.0    0.00    0.00 1150542         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [874]
-----------------------------------------------
                0.00    0.00 1148769/1148769     std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [74]
[875]    0.0    0.00    0.00 1148769         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [875]
                0.00    0.00 1150542/1150542     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [874]
-----------------------------------------------
                0.00    0.00 1144997/1144997     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [877]
[876]    0.0    0.00    0.00 1144997         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [876]
                0.00    0.00 1143971/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00 1139515/1139515     std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [402]
[877]    0.0    0.00    0.00 1139515         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [877]
                0.00    0.00 1144997/1144997     std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [876]
-----------------------------------------------
                0.00    0.00       1/1119344     std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
                0.00    0.00  559668/1119344     std::initializer_list<int>::end() const [917]
                0.00    0.00  559675/1119344     int std::min<int>(std::initializer_list<int>) [517]
[878]    0.0    0.00    0.00 1119344         std::initializer_list<int>::begin() const [878]
-----------------------------------------------
                0.00    0.00  549039/1098392     std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [96]
                0.00    0.00  549353/1098392     void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&) [98]
[879]    0.0    0.00    0.00 1098392         Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>::type&) [879]
-----------------------------------------------
                0.00    0.00  544406/1089054     std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [95]
                0.00    0.00  544648/1089054     std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&) [127]
[880]    0.0    0.00    0.00 1089054         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&) [880]
-----------------------------------------------
                0.00    0.00  544134/1088605     std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [146]
                0.00    0.00  544471/1088605     void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [145]
[881]    0.0    0.00    0.00 1088605         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&) [881]
-----------------------------------------------
                0.00    0.00  490979/1039520     std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.00  548541/1039520     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [680]
[882]    0.0    0.00    0.00 1039520         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [882]
                0.00    0.00 1038526/1038526     std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [883]
-----------------------------------------------
                0.00    0.00 1038526/1038526     std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [882]
[883]    0.0    0.00    0.00 1038526         std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&) [883]
-----------------------------------------------
                0.00    0.00  420846/1020775     std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&) [294]
                0.00    0.00  599929/1020775     std::_Vector_base<double, std::allocator<double> >::get_allocator() const [556]
[884]    0.0    0.00    0.00 1020775         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [884]
-----------------------------------------------
                0.00    0.00  484705/982841      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [442]
                0.00    0.00  498136/982841      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [277]
[885]    0.0    0.00    0.00  982841         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [885]
                0.00    0.00  987697/3270631     std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [829]
-----------------------------------------------
                0.00    0.00       1/969352      std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1208]
                0.00    0.00       6/969352      std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [1097]
                0.00    0.00      44/969352      std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1058]
                0.00    0.00  105269/969352      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [967]
                0.00    0.00  299962/969352      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [581]
                0.00    0.00  564070/969352      std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&) [912]
[886]    0.0    0.00    0.00  969352         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
-----------------------------------------------
                0.00    0.00   93480/850683      std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [307]
                0.00    0.00   93501/850683      std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [308]
                0.00    0.00   99248/850683      std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [298]
                0.00    0.00  185732/850683      std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [183]
                0.00    0.00  186299/850683      std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [194]
                0.00    0.00  192423/850683      std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [198]
[887]    0.0    0.00    0.00  850683         std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&) [887]
-----------------------------------------------
                0.00    0.00  796189/796189      Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
[888]    0.0    0.00    0.00  796189         __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator++() [888]
-----------------------------------------------
                0.00    0.00  792181/792181      void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&) [147]
[889]    0.0    0.00    0.00  792181         Math::Matrix const& std::forward<Math::Matrix const&>(std::remove_reference<Math::Matrix const&>::type&) [889]
-----------------------------------------------
                0.00    0.00  791843/791843      Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [148]
[890]    0.0    0.00    0.00  791843         __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [890]
-----------------------------------------------
                0.00    0.00  260228/780704      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [944]
                0.00    0.00  260232/780704      std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
                0.00    0.00  260244/780704      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [945]
[891]    0.0    0.00    0.00  780704         Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&) [891]
-----------------------------------------------
                0.00    0.00  775295/775295      double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&) [421]
[892]    0.0    0.00    0.00  775295         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}::operator()(double) const [892]
-----------------------------------------------
                0.00    0.00  774171/774171      std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [634]
[893]    0.0    0.00    0.00  774171         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&) [893]
-----------------------------------------------
                0.00    0.00  256451/769366      std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
                0.00    0.00  256454/769366      void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [701]
                0.00    0.00  256461/769366      void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [702]
[894]    0.0    0.00    0.00  769366         Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&) [894]
-----------------------------------------------
                0.00    0.00  381173/763599      void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [259]
                0.00    0.00  382426/763599      std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&) [258]
[895]    0.0    0.00    0.00  763599         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>::type&) [895]
-----------------------------------------------
                0.00    0.00  699150/699150      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base() [378]
[896]    0.0    0.00    0.00  699150         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::~_Vector_impl() [896]
                0.00    0.00  699155/1692170     std::allocator<Math::Matrix>::~allocator() [855]
-----------------------------------------------
                0.00    0.00  693314/693314      __gnu_cxx::new_allocator<Math::Matrix>::allocate(unsigned long, void const*) [899]
[897]    0.0    0.00    0.00  693314         __gnu_cxx::new_allocator<Math::Matrix>::_M_max_size() const [897]
-----------------------------------------------
                0.00    0.00       3/693191      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl() [1135]
                0.00    0.00  693188/693191      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&) [900]
[898]    0.0    0.00    0.00  693191         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl_data::_Vector_impl_data() [898]
-----------------------------------------------
                0.00    0.00  693176/693176      std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long) [668]
[899]    0.0    0.00    0.00  693176         __gnu_cxx::new_allocator<Math::Matrix>::allocate(unsigned long, void const*) [899]
                0.00    0.00  693314/693314      __gnu_cxx::new_allocator<Math::Matrix>::_M_max_size() const [897]
-----------------------------------------------
                0.00    0.00  692568/692568      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [671]
[900]    0.0    0.00    0.00  692568         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&) [900]
                0.00    0.00  693188/693191      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl_data::_Vector_impl_data() [898]
                0.00    0.00  692801/1385247     std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [866]
-----------------------------------------------
                0.00    0.00  686256/686256      std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [579]
[901]    0.0    0.00    0.00  686256         std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false> const&) [901]
-----------------------------------------------
                0.00    0.00  599964/599964      std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>) [226]
[902]    0.0    0.00    0.00  599964         void std::__alloc_on_move<std::allocator<double> >(std::allocator<double>&, std::allocator<double>&) [902]
                0.00    0.00  599958/599958      std::remove_reference<std::allocator<double>&>::type&& std::move<std::allocator<double>&>(std::allocator<double>&) [903]
-----------------------------------------------
                0.00    0.00  599958/599958      void std::__alloc_on_move<std::allocator<double> >(std::allocator<double>&, std::allocator<double>&) [902]
[903]    0.0    0.00    0.00  599958         std::remove_reference<std::allocator<double>&>::type&& std::move<std::allocator<double>&>(std::allocator<double>&) [903]
-----------------------------------------------
                0.00    0.00       7/599707      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&) [720]
                0.00    0.00  599700/599707      std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&) [184]
[904]    0.0    0.00    0.00  599707         std::remove_reference<Math::Matrix&>::type&& std::move<Math::Matrix&>(Math::Matrix&) [904]
-----------------------------------------------
                0.00    0.00  199600/598858      std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
                0.00    0.00  199616/598858      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [960]
                0.00    0.00  199642/598858      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [959]
[905]    0.0    0.00    0.00  598858         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [905]
-----------------------------------------------
                0.00    0.00  597157/597157      double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&) [682]
[906]    0.0    0.00    0.00  597157         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}::operator()(double) const [906]
-----------------------------------------------
                0.00    0.00  596752/596752      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [641]
[907]    0.0    0.00    0.00  596752         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&) [907]
-----------------------------------------------
                0.00    0.00  591003/591003      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}::operator()() const [911]
[908]    0.0    0.00    0.00  591003         std::__atomic_base<int>::operator int() const [908]
                0.00    0.00  585072/585072      std::operator&(std::memory_order, std::__memory_order_modifier) [910]
-----------------------------------------------
                0.00    0.00   30547/590242      __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [457]
                0.00    0.00  559695/590242      int const* std::min_element<int const*>(int const*, int const*) [516]
[909]    0.0    0.00    0.00  590242         __gnu_cxx::__ops::__iter_less_iter() [909]
-----------------------------------------------
                0.00    0.00  585072/585072      std::__atomic_base<int>::operator int() const [908]
[910]    0.0    0.00    0.00  585072         std::operator&(std::memory_order, std::__memory_order_modifier) [910]
-----------------------------------------------
                0.00    0.00  576886/576886      void std::condition_variable::wait<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}>(std::unique_lock<std::mutex>&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}) [521]
[911]    0.0    0.00    0.00  576886         Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}::operator()() const [911]
                0.00    0.00  591003/591003      std::__atomic_base<int>::operator int() const [908]
-----------------------------------------------
                0.00    0.00  564077/564077      std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&) [416]
[912]    0.0    0.00    0.00  564077         std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&) [912]
                0.00    0.00  564070/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
                0.00    0.00  564050/564050      std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [913]
-----------------------------------------------
                0.00    0.00  564050/564050      std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&) [912]
[913]    0.0    0.00    0.00  564050         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [913]
-----------------------------------------------
                0.00    0.00  559689/559689      int const* std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>(int const*, int const*, __gnu_cxx::__ops::_Iter_less_iter) [515]
[914]    0.0    0.00    0.00  559689         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int const*, int const*>(int const*, int const*) const [914]
-----------------------------------------------
                0.00    0.00  559688/559688      Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [5]
[915]    0.0    0.00    0.00  559688         int const& std::max<int>(int const&, int const&) [915]
-----------------------------------------------
                0.00    0.00  559672/559672      std::initializer_list<int>::end() const [917]
[916]    0.0    0.00    0.00  559672         std::initializer_list<int>::size() const [916]
-----------------------------------------------
                0.00    0.00       1/559644      std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&) [750]
                0.00    0.00  559643/559644      int std::min<int>(std::initializer_list<int>) [517]
[917]    0.0    0.00    0.00  559644         std::initializer_list<int>::end() const [917]
                0.00    0.00  559672/559672      std::initializer_list<int>::size() const [916]
                0.00    0.00  559668/1119344     std::initializer_list<int>::begin() const [878]
-----------------------------------------------
                0.00    0.00  559585/559585      double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [354]
[918]    0.0    0.00    0.00  559585         double* std::__addressof<double>(double&) [918]
-----------------------------------------------
                0.00    0.00  559567/559567      double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [359]
[919]    0.0    0.00    0.00  559567         std::__size_to_integer(unsigned long) [919]
-----------------------------------------------
                0.00    0.00  549322/549322      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [681]
[920]    0.0    0.00    0.00  549322         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [920]
                0.00    0.00  549310/549310      __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [921]
-----------------------------------------------
                0.00    0.00  549310/549310      __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [920]
[921]    0.0    0.00    0.00  549310         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [921]
-----------------------------------------------
                0.00    0.00  549252/549252      std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [25]
[922]    0.0    0.00    0.00  549252         std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&) [922]
-----------------------------------------------
                0.00    0.00  548071/548071      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [924]
[923]    0.0    0.00    0.00  548071         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [923]
-----------------------------------------------
                0.00    0.00  547844/547844      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[924]    0.0    0.00    0.00  547844         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [924]
                0.00    0.00  548071/548071      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [923]
-----------------------------------------------
                0.00    0.00  547315/547315      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [519]
[925]    0.0    0.00    0.00  547315         std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [925]
-----------------------------------------------
                0.00    0.00  545801/545801      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [454]
[926]    0.0    0.00    0.00  545801         bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [926]
-----------------------------------------------
                0.00    0.00  545655/545655      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [115]
[927]    0.0    0.00    0.00  545655         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [927]
-----------------------------------------------
                0.00    0.00  544753/544753      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [648]
[928]    0.0    0.00    0.00  544753         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [928]
-----------------------------------------------
                0.00    0.00  544614/544614      std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&) [662]
[929]    0.0    0.00    0.00  544614         std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&) [929]
-----------------------------------------------
                0.00    0.00  533454/533454      std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [223]
[930]    0.0    0.00    0.00  533454         bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1} const&) [930]
-----------------------------------------------
                0.00    0.00  499999/499999      std::_Function_base::~_Function_base() [68]
[931]    0.0    0.00    0.00  499999         std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [931]
                0.00    0.00  485291/485291      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [935]
-----------------------------------------------
                0.00    0.00  489396/489396      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [684]
[932]    0.0    0.00    0.00  489396         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [932]
-----------------------------------------------
                0.00    0.00  489266/489266      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [936]
[933]    0.0    0.00    0.00  489266         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [933]
                0.00    0.00  491545/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  227128/487354      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [953]
                0.00    0.00  260226/487354      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [944]
[934]    0.0    0.00    0.00  487354         Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() [934]
                0.00    0.00  490414/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  485291/485291      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [931]
[935]    0.0    0.00    0.00  485291         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [935]
                0.00    0.00  482815/482815      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [936]
-----------------------------------------------
                0.00    0.00  482815/482815      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [935]
[936]    0.0    0.00    0.00  482815         std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [936]
                0.00    0.00  489266/489266      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() [933]
-----------------------------------------------
                0.00    0.00  392757/392757      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[937]    0.0    0.00    0.00  392757         __gnu_cxx::__alloc_traits<std::allocator<Math::Matrix>, Math::Matrix>::_S_select_on_copy(std::allocator<Math::Matrix> const&) [937]
                0.00    0.00  392478/392478      std::allocator_traits<std::allocator<Math::Matrix> >::select_on_container_copy_construction(std::allocator<Math::Matrix> const&) [938]
-----------------------------------------------
                0.00    0.00  392478/392478      __gnu_cxx::__alloc_traits<std::allocator<Math::Matrix>, Math::Matrix>::_S_select_on_copy(std::allocator<Math::Matrix> const&) [937]
[938]    0.0    0.00    0.00  392478         std::allocator_traits<std::allocator<Math::Matrix> >::select_on_container_copy_construction(std::allocator<Math::Matrix> const&) [938]
                0.00    0.00  392506/1385247     std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [866]
-----------------------------------------------
                0.00    0.00      14/392340      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const [739]
                0.00    0.00  392326/392340      std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [116]
[939]    0.0    0.00    0.00  392340         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() const [939]
-----------------------------------------------
                0.00    0.00  169771/369402      std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [532]
                0.00    0.00  199631/369402      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [959]
[940]    0.0    0.00    0.00  369402         Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() [940]
                0.00    0.00  371648/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  299945/299945      std::allocator<Math::Matrix>::allocator() [942]
[941]    0.0    0.00    0.00  299945         __gnu_cxx::new_allocator<Math::Matrix>::new_allocator() [941]
-----------------------------------------------
                0.00    0.00       3/299938      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl() [1135]
                0.00    0.00     200/299938      FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
                0.00    0.00  299735/299938      FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [4]
[942]    0.0    0.00    0.00  299938         std::allocator<Math::Matrix>::allocator() [942]
                0.00    0.00  299945/299945      __gnu_cxx::new_allocator<Math::Matrix>::new_allocator() [941]
-----------------------------------------------
                0.00    0.00   99758/299283      void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [997]
                0.00    0.00   99760/299283      std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
                0.00    0.00   99765/299283      void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [995]
[943]    0.0    0.00    0.00  299283         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [943]
-----------------------------------------------
                0.00    0.00  260238/260238      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [945]
[944]    0.0    0.00    0.00  260238         void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [944]
                0.00    0.00  260228/780704      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&) [891]
                0.00    0.00  260226/487354      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() [934]
-----------------------------------------------
                0.00    0.00  260237/260237      std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
[945]    0.0    0.00    0.00  260237         void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [945]
                0.00    0.00  260244/780704      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&) [891]
                0.00    0.00  260238/260238      void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [944]
-----------------------------------------------
                0.00    0.00  260229/260229      std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [582]
[946]    0.0    0.00    0.00  260229         bool std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1} const&) [946]
-----------------------------------------------
                0.00    0.00  256209/256209      std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [559]
[947]    0.0    0.00    0.00  256209         bool std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&) [947]
-----------------------------------------------
                0.00    0.00  230136/230136      std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [949]
[948]    0.0    0.00    0.00  230136         std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false>&) [948]
-----------------------------------------------
                0.00    0.00   30233/230133      Math::Matrix& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [1018]
                0.00    0.00  199900/230133      std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
[949]    0.0    0.00    0.00  230133         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [949]
                0.00    0.00  230136/230136      std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false>&) [948]
-----------------------------------------------
                0.00    0.00  230094/230094      std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&) [951]
[950]    0.0    0.00    0.00  230094         std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false>&) [950]
-----------------------------------------------
                0.00    0.00   30193/230093      Math::Matrix& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix>&) [1021]
                0.00    0.00  199900/230093      std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&) [279]
[951]    0.0    0.00    0.00  230093         std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&) [951]
                0.00    0.00  230094/230094      std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false>&) [950]
-----------------------------------------------
                0.00    0.00  225064/225064      std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [526]
[952]    0.0    0.00    0.00  225064         std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [952]
                0.00    0.00  223515/223515      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [953]
-----------------------------------------------
                0.00    0.00  223515/223515      std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [952]
[953]    0.0    0.00    0.00  223515         std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [953]
                0.00    0.00  227128/487354      Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() [934]
-----------------------------------------------
                0.00    0.00     222/205094      std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() [1042]
                0.00    0.00    2300/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator-(long) const [1039]
                0.00    0.00    2422/205094      std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [1038]
                0.00    0.00   99950/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++(int) [975]
                0.00    0.00  100200/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const [972]
[954]    0.0    0.00    0.00  205094         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00    2300/202200      std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back() [1040]
                0.00    0.00  199900/202200      void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [188]
[955]    0.0    0.00    0.00  202200         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [955]
-----------------------------------------------
                0.00    0.00      44/200388      void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00  100100/200388      bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1007]
                0.00    0.00  100244/200388      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1006]
[956]    0.0    0.00    0.00  200388         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [956]
-----------------------------------------------
                0.00    0.00  199983/199983      bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&) [974]
[957]    0.0    0.00    0.00  199983         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::base() const [957]
-----------------------------------------------
                0.00    0.00   99900/199800      std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&) [1014]
                0.00    0.00   99900/199800      std::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, true>(unsigned long&&, unsigned long&&) [1013]
[958]    0.0    0.00    0.00  199800         unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [958]
-----------------------------------------------
                0.00    0.00  199633/199633      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [960]
[959]    0.0    0.00    0.00  199633         void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [959]
                0.00    0.00  199642/598858      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [905]
                0.00    0.00  199631/369402      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() [940]
-----------------------------------------------
                0.00    0.00  199622/199622      std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
[960]    0.0    0.00    0.00  199622         void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [960]
                0.00    0.00  199633/199633      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [959]
                0.00    0.00  199616/598858      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [905]
-----------------------------------------------
                0.00    0.00  199585/199585      std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
[961]    0.0    0.00    0.00  199585         bool std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1} const&) [961]
-----------------------------------------------
                0.00    0.00  199576/199576      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [15]
[962]    0.0    0.00    0.00  199576         std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [962]
                0.00    0.00  199622/199622      void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [960]
                0.00    0.00  199600/598858      Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [905]
                0.00    0.00  199589/7726071     std::_Function_base::_Function_base() [806]
                0.00    0.00  199585/199585      bool std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1} const&) [961]
-----------------------------------------------
                0.00    0.00  199440/199440      std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [529]
[963]    0.0    0.00    0.00  199440         Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() [963]
                0.00    0.00  199452/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  197622/197622      std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [459]
[964]    0.0    0.00    0.00  197622         bool std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&) [964]
-----------------------------------------------
                0.00    0.00   92573/192324      std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [999]
                0.00    0.00   99751/192324      void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [997]
[965]    0.0    0.00    0.00  192324         Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() [965]
                0.00    0.00  192892/8646925     std::_Any_data::_M_access() [805]
-----------------------------------------------
                0.00    0.00  109365/109365      std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long) [703]
[966]    0.0    0.00    0.00  109365         __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long) [966]
-----------------------------------------------
                0.00    0.00  105233/105233      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [583]
[967]    0.0    0.00    0.00  105233         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [967]
                0.00    0.00  105269/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
                0.00    0.00  105168/105168      std::allocator_traits<std::allocator<std::function<void ()> > >::max_size(std::allocator<std::function<void ()> > const&) [968]
-----------------------------------------------
                0.00    0.00  105168/105168      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [967]
[968]    0.0    0.00    0.00  105168         std::allocator_traits<std::allocator<std::function<void ()> > >::max_size(std::allocator<std::function<void ()> > const&) [968]
-----------------------------------------------
                0.00    0.00       2/105120      std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [592]
                0.00    0.00  105118/105120      std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [583]
[969]    0.0    0.00    0.00  105120         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [969]
-----------------------------------------------
                0.00    0.00  104815/104815      __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*) [971]
[970]    0.0    0.00    0.00  104815         __gnu_cxx::new_allocator<std::function<void ()> >::_M_max_size() const [970]
-----------------------------------------------
                0.00    0.00  104762/104762      std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long) [704]
[971]    0.0    0.00    0.00  104762         __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*) [971]
                0.00    0.00  104815/104815      __gnu_cxx::new_allocator<std::function<void ()> >::_M_max_size() const [970]
-----------------------------------------------
                0.00    0.00     200/100200      FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
                0.00    0.00  100000/100200      void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[972]    0.0    0.00    0.00  100200         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const [972]
                0.00    0.00  100200/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00  100000/100000      unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [587]
[973]    0.0    0.00    0.00  100000         std::uniform_int_distribution<unsigned long>::param_type::a() const [973]
-----------------------------------------------
                0.00    0.00   99989/99989       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[974]    0.0    0.00    0.00   99989         bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&) [974]
                0.00    0.00  199983/199983      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::base() const [957]
-----------------------------------------------
                0.00    0.00   99950/99950       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[975]    0.0    0.00    0.00   99950         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++(int) [975]
                0.00    0.00   99950/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00   99950/99950       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [185]
[976]    0.0    0.00    0.00   99950         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_tail(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [976]
-----------------------------------------------
                0.00    0.00   99895/99895       std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [978]
[977]    0.0    0.00    0.00   99895         Math::Matrix const& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix> const&) [977]
                0.00    0.00   99891/99891       std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix> const&) [981]
-----------------------------------------------
                0.00    0.00   99895/99895       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[978]    0.0    0.00    0.00   99895         std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [978]
                0.00    0.00   99895/99895       Math::Matrix const& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix> const&) [977]
-----------------------------------------------
                0.00    0.00   99894/99894       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[979]    0.0    0.00    0.00   99894         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator++() [979]
-----------------------------------------------
                0.00    0.00   99892/99892       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[980]    0.0    0.00    0.00   99892         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator*() const [980]
-----------------------------------------------
                0.00    0.00   99891/99891       Math::Matrix const& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix> const&) [977]
[981]    0.0    0.00    0.00   99891         std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix> const&) [981]
                0.00    0.00   99890/99890       std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false> const&) [982]
-----------------------------------------------
                0.00    0.00   99890/99890       std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix> const&) [981]
[982]    0.0    0.00    0.00   99890         std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false> const&) [982]
-----------------------------------------------
                0.00    0.00   99890/99890       std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [984]
[983]    0.0    0.00    0.00   99890         Math::Matrix const& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [983]
                0.00    0.00   99887/99887       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [986]
-----------------------------------------------
                0.00    0.00   99889/99889       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[984]    0.0    0.00    0.00   99889         std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&) [984]
                0.00    0.00   99890/99890       Math::Matrix const& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [983]
-----------------------------------------------
                0.00    0.00   99887/99887       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [986]
[985]    0.0    0.00    0.00   99887         std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false> const&) [985]
-----------------------------------------------
                0.00    0.00   99887/99887       Math::Matrix const& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [983]
[986]    0.0    0.00    0.00   99887         std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [986]
                0.00    0.00   99887/99887       std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false> const&) [985]
-----------------------------------------------
                0.00    0.00   99862/99862       std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>&) [988]
[987]    0.0    0.00    0.00   99862         std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [987]
                0.00    0.00   99859/99859       std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [989]
-----------------------------------------------
                0.00    0.00   99862/99862       std::tuple_element<1ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [990]
[988]    0.0    0.00    0.00   99862         std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>&) [988]
                0.00    0.00   99862/99862       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [987]
-----------------------------------------------
                0.00    0.00   99859/99859       std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [987]
[989]    0.0    0.00    0.00   99859         std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [989]
-----------------------------------------------
                0.00    0.00   99859/99859       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[990]    0.0    0.00    0.00   99859         std::tuple_element<1ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [990]
                0.00    0.00   99862/99862       std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>&) [988]
-----------------------------------------------
                0.00    0.00   99832/99832       std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [993]
[991]    0.0    0.00    0.00   99832         std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [991]
                0.00    0.00   99831/99831       std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [992]
-----------------------------------------------
                0.00    0.00   99831/99831       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [991]
[992]    0.0    0.00    0.00   99831         std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [992]
-----------------------------------------------
                0.00    0.00   99829/99829       std::tuple_element<0ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [994]
[993]    0.0    0.00    0.00   99829         std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [993]
                0.00    0.00   99832/99832       std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [991]
-----------------------------------------------
                0.00    0.00   99827/99827       FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[994]    0.0    0.00    0.00   99827         std::tuple_element<0ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [994]
                0.00    0.00   99829/99829       std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [993]
-----------------------------------------------
                0.00    0.00   99772/99772       std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
[995]    0.0    0.00    0.00   99772         void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [995]
                0.00    0.00   99765/299283      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [943]
                0.00    0.00   99758/99758       void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [997]
-----------------------------------------------
                0.00    0.00   99759/99759       std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
[996]    0.0    0.00    0.00   99759         bool std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1} const&) [996]
-----------------------------------------------
                0.00    0.00   99758/99758       void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [995]
[997]    0.0    0.00    0.00   99758         void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [997]
                0.00    0.00   99758/299283      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [943]
                0.00    0.00   99751/192324      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() [965]
-----------------------------------------------
                0.00    0.00   99735/99735       Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [35]
[998]    0.0    0.00    0.00   99735         std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [998]
                0.00    0.00   99772/99772       void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [995]
                0.00    0.00   99760/299283      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&) [943]
                0.00    0.00   99759/99759       bool std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1} const&) [996]
                0.00    0.00   99757/7726071     std::_Function_base::_Function_base() [806]
-----------------------------------------------
                0.00    0.00   91783/91783       std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1000]
[999]    0.0    0.00    0.00   91783         std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [999]
                0.00    0.00   92573/192324      Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() [965]
-----------------------------------------------
                0.00    0.00   91643/91643       std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1001]
[1000]   0.0    0.00    0.00   91643         std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1000]
                0.00    0.00   91783/91783       std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [999]
-----------------------------------------------
                0.00    0.00   91615/91615       std::_Function_base::~_Function_base() [68]
[1001]   0.0    0.00    0.00   91615         std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1001]
                0.00    0.00   91643/91643       std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1000]
-----------------------------------------------
                0.00    0.00   78992/78992       std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [714]
[1002]   0.0    0.00    0.00   78992         std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**) [1002]
-----------------------------------------------
                0.00    0.00   61097/61097       __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter) [458]
[1003]   0.0    0.00    0.00   61097         __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++() [1003]
-----------------------------------------------
                0.00    0.00   60667/60667       bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1017]
[1004]   0.0    0.00    0.00   60667         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [1004]
-----------------------------------------------
                0.00    0.00   52536/52536       std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [716]
[1005]   0.0    0.00    0.00   52536         std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**) [1005]
-----------------------------------------------
                0.00    0.00      22/50122       void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00     100/50122       std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [591]
                0.00    0.00   50000/50122       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[1006]   0.0    0.00    0.00   50122         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1006]
                0.00    0.00  100244/200388      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [956]
-----------------------------------------------
                0.00    0.00   50050/50050       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
[1007]   0.0    0.00    0.00   50050         bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1007]
                0.00    0.00  100100/200388      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [956]
-----------------------------------------------
                0.00    0.00   50016/50016       unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [1009]
[1008]   0.0    0.00    0.00   50016         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [1008]
-----------------------------------------------
                0.00    0.00   50016/50016       std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [585]
[1009]   0.0    0.00    0.00   50016         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [1009]
                0.00    0.00   50016/50016       std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [1008]
-----------------------------------------------
                0.00    0.00   50000/50000       unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [587]
[1010]   0.0    0.00    0.00   50000         std::uniform_int_distribution<unsigned long>::param_type::b() const [1010]
-----------------------------------------------
                0.00    0.00   50000/50000       std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long) [1012]
[1011]   0.0    0.00    0.00   50000         std::uniform_int_distribution<unsigned long>::param_type::param_type(unsigned long, unsigned long) [1011]
-----------------------------------------------
                0.00    0.00      50/50000       void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [181]
                0.00    0.00   49950/50000       std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [601]
[1012]   0.0    0.00    0.00   50000         std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long) [1012]
                0.00    0.00   50000/50000       std::uniform_int_distribution<unsigned long>::param_type::param_type(unsigned long, unsigned long) [1011]
-----------------------------------------------
                0.00    0.00   49950/49950       std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&) [1014]
[1013]   0.0    0.00    0.00   49950         std::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, true>(unsigned long&&, unsigned long&&) [1013]
                0.00    0.00   99900/199800      unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [958]
-----------------------------------------------
                0.00    0.00   49950/49950       std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [601]
[1014]   0.0    0.00    0.00   49950         std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&) [1014]
                0.00    0.00   99900/199800      unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [958]
                0.00    0.00   49950/49950       std::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, true>(unsigned long&&, unsigned long&&) [1013]
-----------------------------------------------
                0.00    0.00   44857/44857       Cost::L2Cost::func(Math::Matrix, Math::Matrix) [555]
[1015]   0.0    0.00    0.00   44857         Math::Matrix::getSize() const [1015]
-----------------------------------------------
                0.00    0.00   30547/30547       std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [707]
[1016]   0.0    0.00    0.00   30547         std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [1016]
-----------------------------------------------
                0.00    0.00   15003/30331       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15328/30331       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[1017]   0.0    0.00    0.00   30331         bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1017]
                0.00    0.00   60667/60667       __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [1004]
-----------------------------------------------
                0.00    0.00   30233/30233       std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1019]
[1018]   0.0    0.00    0.00   30233         Math::Matrix& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [1018]
                0.00    0.00   30233/230133      std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [949]
-----------------------------------------------
                0.00    0.00   14956/30233       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15277/30233       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[1019]   0.0    0.00    0.00   30233         std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1019]
                0.00    0.00   30233/30233       Math::Matrix& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [1018]
-----------------------------------------------
                0.00    0.00   14952/30229       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15277/30229       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[1020]   0.0    0.00    0.00   30229         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++() [1020]
-----------------------------------------------
                0.00    0.00   30194/30194       std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1022]
[1021]   0.0    0.00    0.00   30194         Math::Matrix& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix>&) [1021]
                0.00    0.00   30193/230093      std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&) [951]
-----------------------------------------------
                0.00    0.00   14936/30191       FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [81]
                0.00    0.00   15255/30191       FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
[1022]   0.0    0.00    0.00   30191         std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&) [1022]
                0.00    0.00   30194/30194       Math::Matrix& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix>&) [1021]
-----------------------------------------------
                0.00    0.00   26251/26251       std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [715]
[1023]   0.0    0.00    0.00   26251         std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [1023]
-----------------------------------------------
                0.00    0.00   26189/26189       std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [714]
[1024]   0.0    0.00    0.00   26189         std::function<void ()>** std::__niter_wrap<std::function<void ()>**>(std::function<void ()>** const&, std::function<void ()>**) [1024]
-----------------------------------------------
                0.00    0.00    2300/20700       std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&) [695]
                0.00    0.00    2300/20700       std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [690]
                0.00    0.00    2300/20700       std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [693]
                0.00    0.00    4600/20700       std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&) [678]
                0.00    0.00    4600/20700       std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&) [677]
                0.00    0.00    4600/20700       std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [675]
[1025]   0.0    0.00    0.00   20700         Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&) [1025]
-----------------------------------------------
                0.00    0.00    4600/9200        std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
                0.00    0.00    4600/9200        std::initializer_list<double>::end() const [1031]
[1026]   0.0    0.00    0.00    9200         std::initializer_list<double>::begin() const [1026]
-----------------------------------------------
                0.00    0.00    9200/9200        double* std::copy<double const*, double*>(double const*, double const*, double*) [712]
[1027]   0.0    0.00    0.00    9200         double const* std::__miter_base<double const*>(double const*) [1027]
-----------------------------------------------
                0.00    0.00    9200/9200        double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*) [709]
[1028]   0.0    0.00    0.00    9200         double const* std::__niter_base<double const*>(double const*) [1028]
-----------------------------------------------
                0.00    0.00    2558/7416        std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [664]
                0.00    0.00    4858/7416        void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [700]
[1029]   0.0    0.00    0.00    7416         std::tuple<Math::Matrix, Math::Matrix>* std::__addressof<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&) [1029]
-----------------------------------------------
                0.00    0.00      22/6922        void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00    2300/6922        std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
                0.00    0.00    2300/6922        decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [673]
                0.00    0.00    2300/6922        void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [672]
[1030]   0.0    0.00    0.00    6922         std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&) [1030]
-----------------------------------------------
                0.00    0.00    4600/4600        std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&) [688]
[1031]   0.0    0.00    0.00    4600         std::initializer_list<double>::end() const [1031]
                0.00    0.00    4600/9200        std::initializer_list<double>::begin() const [1026]
                0.00    0.00    4600/4600        std::initializer_list<double>::size() const [1032]
-----------------------------------------------
                0.00    0.00    4600/4600        std::initializer_list<double>::end() const [1031]
[1032]   0.0    0.00    0.00    4600         std::initializer_list<double>::size() const [1032]
-----------------------------------------------
                0.00    0.00    4600/4600        std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*) [1036]
[1033]   0.0    0.00    0.00    4600         std::iterator_traits<double const*>::difference_type std::__distance<double const*>(double const*, double const*, std::random_access_iterator_tag) [1033]
-----------------------------------------------
                0.00    0.00    4600/4600        std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*) [1036]
[1034]   0.0    0.00    0.00    4600         std::iterator_traits<double const*>::iterator_category std::__iterator_category<double const*>(double const* const&) [1034]
-----------------------------------------------
                0.00    0.00    4600/4600        generateData(int) [611]
[1035]   0.0    0.00    0.00    4600         std::abs(double) [1035]
-----------------------------------------------
                0.00    0.00    4600/4600        void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag) [689]
[1036]   0.0    0.00    0.00    4600         std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*) [1036]
                0.00    0.00    4600/4600        std::iterator_traits<double const*>::iterator_category std::__iterator_category<double const*>(double const* const&) [1034]
                0.00    0.00    4600/4600        std::iterator_traits<double const*>::difference_type std::__distance<double const*>(double const*, double const*, std::random_access_iterator_tag) [1033]
-----------------------------------------------
                0.00    0.00    2558/2558        void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&) [663]
[1037]   0.0    0.00    0.00    2558         std::tuple<Math::Matrix, Math::Matrix> const& std::forward<std::tuple<Math::Matrix, Math::Matrix> const&>(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> const&>::type&) [1037]
-----------------------------------------------
                0.00    0.00      22/2422        std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
                0.00    0.00     100/2422        FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
                0.00    0.00    2300/2422        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back() [1040]
[1038]   0.0    0.00    0.00    2422         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [1038]
                0.00    0.00    2422/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00    2300/2300        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back() [1040]
[1039]   0.0    0.00    0.00    2300         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator-(long) const [1039]
                0.00    0.00    2300/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00    2300/2300        std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [646]
[1040]   0.0    0.00    0.00    2300         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back() [1040]
                0.00    0.00    2300/2422        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [1038]
                0.00    0.00    2300/2300        __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator-(long) const [1039]
                0.00    0.00    2300/202200      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [955]
-----------------------------------------------
                0.00    0.00    2300/2300        std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&) [647]
[1041]   0.0    0.00    0.00    2300         std::remove_reference<std::tuple<Math::Matrix, Math::Matrix>&>::type&& std::move<std::tuple<Math::Matrix, Math::Matrix>&>(std::tuple<Math::Matrix, Math::Matrix>&) [1041]
-----------------------------------------------
                0.00    0.00      22/222         void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
                0.00    0.00     200/222         FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[1042]   0.0    0.00    0.00     222         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() [1042]
                0.00    0.00     222/205094      __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [954]
-----------------------------------------------
                0.00    0.00     100/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::begin() const [1047]
                0.00    0.00     100/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const [630]
[1043]   0.0    0.00    0.00     200         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [1043]
-----------------------------------------------
                0.00    0.00     200/200         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const [590]
[1044]   0.0    0.00    0.00     200         std::__detail::__extent_storage<18446744073709551615ul>::_M_extent() const [1044]
-----------------------------------------------
                0.00    0.00       3/142         FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
                0.00    0.00      51/142         FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [79]
                0.00    0.00      88/142         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [1068]
[1045]   0.0    0.00    0.00     142         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const [1045]
-----------------------------------------------
                0.00    0.00     100/100         auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1050]
[1046]   0.0    0.00    0.00     100         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator->() const [1046]
-----------------------------------------------
                0.00    0.00     100/100         FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [3]
[1047]   0.0    0.00    0.00     100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::begin() const [1047]
                0.00    0.00     100/200         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [1043]
-----------------------------------------------
                0.00    0.00     100/100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [591]
[1048]   0.0    0.00    0.00     100         std::__detail::__extent_storage<18446744073709551615ul>::__extent_storage(unsigned long) [1048]
-----------------------------------------------
                0.00    0.00     100/100         std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [591]
[1049]   0.0    0.00    0.00     100         auto std::to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1049]
                0.00    0.00     100/100         auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1050]
-----------------------------------------------
                0.00    0.00     100/100         auto std::to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1049]
[1050]   0.0    0.00    0.00     100         auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1050]
                0.00    0.00     100/100         __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator->() const [1046]
                0.00    0.00     100/100         std::tuple<Math::Matrix, Math::Matrix>* std::__to_address<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [1051]
-----------------------------------------------
                0.00    0.00     100/100         auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [1050]
[1051]   0.0    0.00    0.00     100         std::tuple<Math::Matrix, Math::Matrix>* std::__to_address<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*) [1051]
-----------------------------------------------
                0.00    0.00      88/88          std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&) [667]
[1052]   0.0    0.00    0.00      88         std::tuple<Math::Matrix, Math::Matrix> const* std::__make_move_if_noexcept_iterator<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const*>(std::tuple<Math::Matrix, Math::Matrix>*) [1052]
-----------------------------------------------
                0.00    0.00       2/68          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector() [717]
                0.00    0.00      66/68          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[1053]   0.0    0.00    0.00      68         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() [1053]
-----------------------------------------------
                0.00    0.00       3/47          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
                0.00    0.00       4/47          std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
                0.00    0.00       4/47          decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [760]
                0.00    0.00       4/47          void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [759]
                0.00    0.00       4/47          std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
                0.00    0.00       4/47          std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1117]
                0.00    0.00       4/47          std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1118]
                0.00    0.00       4/47          std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1112]
                0.00    0.00       4/47          std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_Head_base<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1106]
                0.00    0.00       4/47          std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&) [1125]
                0.00    0.00       4/47          std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [11]
                0.00    0.00       4/47          void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [10]
[1054]   0.0    0.00    0.00      47         Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const [1056]
[1055]   0.0    0.00    0.00      44         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() const [1055]
-----------------------------------------------
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [1068]
[1056]   0.0    0.00    0.00      44         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const [1056]
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1058]
                0.00    0.00      44/44          std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() const [1055]
-----------------------------------------------
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1058]
[1057]   0.0    0.00    0.00      44         std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1057]
-----------------------------------------------
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const [1056]
[1058]   0.0    0.00    0.00      44         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1058]
                0.00    0.00      44/44          std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [1057]
                0.00    0.00      44/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
-----------------------------------------------
                0.00    0.00       1/33          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [621]
                0.00    0.00       3/33          std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [734]
                0.00    0.00       7/33          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [730]
                0.00    0.00      22/33          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [1068]
[1059]   0.0    0.00    0.00      33         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [1059]
-----------------------------------------------
                0.00    0.00       7/28          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() [1090]
                0.00    0.00       7/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator-(long) const [1085]
                0.00    0.00      14/28          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() [1072]
[1060]   0.0    0.00    0.00      28         __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&) [1060]
-----------------------------------------------
                0.00    0.00      14/28          void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
                0.00    0.00      14/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::difference_type __gnu_cxx::operator-<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [1083]
[1061]   0.0    0.00    0.00      28         __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [1061]
-----------------------------------------------
                0.00    0.00      28/28          Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&) [729]
[1062]   0.0    0.00    0.00      28         Math::Matrix const* std::__make_move_if_noexcept_iterator<Math::Matrix, Math::Matrix const*>(Math::Matrix*) [1062]
-----------------------------------------------
                0.00    0.00       7/28          Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
                0.00    0.00       7/28          decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&) [724]
                0.00    0.00       7/28          void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&) [723]
                0.00    0.00       7/28          void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[1063]   0.0    0.00    0.00      28         Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&) [1063]
-----------------------------------------------
                0.00    0.00      22/22          std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [747]
[1064]   0.0    0.00    0.00      22         __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [1064]
-----------------------------------------------
                0.00    0.00      22/22          std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long) [748]
[1065]   0.0    0.00    0.00      22         __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocate(unsigned long, void const*) [1065]
                0.00    0.00      22/22          __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::_M_max_size() const [1066]
-----------------------------------------------
                0.00    0.00      22/22          __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocate(unsigned long, void const*) [1065]
[1066]   0.0    0.00    0.00      22         __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::_M_max_size() const [1066]
-----------------------------------------------
                0.00    0.00       6/22          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
                0.00    0.00       6/22          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1131]
                0.00    0.00      10/22          bool __gnu_cxx::operator==<std::thread*, std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1100]
[1067]   0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [1067]
-----------------------------------------------
                0.00    0.00      22/22          void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [660]
[1068]   0.0    0.00    0.00      22         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [1068]
                0.00    0.00      88/142         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const [1045]
                0.00    0.00      44/44          std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const [1056]
                0.00    0.00      22/33          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [1059]
-----------------------------------------------
                0.00    0.00      18/18          std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [763]
[1069]   0.0    0.00    0.00      18         std::thread* std::__niter_base<std::thread*>(std::thread*) [1069]
-----------------------------------------------
                0.00    0.00       4/16          std::vector<std::thread, std::allocator<std::thread> >::begin() [1123]
                0.00    0.00       4/16          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const [1103]
                0.00    0.00       8/16          std::vector<std::thread, std::allocator<std::thread> >::end() [1080]
[1070]   0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [1070]
-----------------------------------------------
                0.00    0.00       3/14          std::thread::thread(std::thread&&) [1139]
                0.00    0.00       4/14          std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
                0.00    0.00       7/14          std::thread::joinable() const [1086]
[1071]   0.0    0.00    0.00      14         std::thread::id::id() [1071]
-----------------------------------------------
                0.00    0.00       7/14          Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
                0.00    0.00       7/14          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [1089]
[1072]   0.0    0.00    0.00      14         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() [1072]
                0.00    0.00      14/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&) [1060]
-----------------------------------------------
                0.00    0.00       3/13          void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
                0.00    0.00       4/13          void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [1195]
                0.00    0.00       6/13          std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [764]
[1073]   0.0    0.00    0.00      13         std::thread* std::__addressof<std::thread>(std::thread&) [1073]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [1144]
[1074]   0.0    0.00    0.00       9         std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&) [1074]
-----------------------------------------------
                0.00    0.00       4/8           Math::ThreadPool::stop() [741]
                0.00    0.00       4/8           std::vector<std::thread, std::allocator<std::thread> >::back() [1122]
[1075]   0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [1075]
-----------------------------------------------
                0.00    0.00       8/8           bool __gnu_cxx::operator==<int*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [1102]
[1076]   0.0    0.00    0.00       8         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [1076]
-----------------------------------------------
                0.00    0.00       8/8           std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1078]
[1077]   0.0    0.00    0.00       8         std::_Head_base<0ul, std::thread::_State*, false>::_M_head(std::_Head_base<0ul, std::thread::_State*, false>&) [1077]
-----------------------------------------------
                0.00    0.00       8/8           std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1081]
[1078]   0.0    0.00    0.00       8         std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1078]
                0.00    0.00       8/8           std::_Head_base<0ul, std::thread::_State*, false>::_M_head(std::_Head_base<0ul, std::thread::_State*, false>&) [1077]
-----------------------------------------------
                0.00    0.00       4/8           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [1109]
                0.00    0.00       4/8           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [1115]
[1079]   0.0    0.00    0.00       8         std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [1079]
                0.00    0.00       8/8           std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [1082]
-----------------------------------------------
                0.00    0.00       1/8           Math::ThreadPool::stop() [741]
                0.00    0.00       3/8           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
                0.00    0.00       4/8           std::vector<std::thread, std::allocator<std::thread> >::back() [1122]
[1080]   0.0    0.00    0.00       8         std::vector<std::thread, std::allocator<std::thread> >::end() [1080]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [1070]
-----------------------------------------------
                0.00    0.00       8/8           std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [1082]
[1081]   0.0    0.00    0.00       8         std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1081]
                0.00    0.00       8/8           std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1078]
-----------------------------------------------
                0.00    0.00       8/8           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [1079]
[1082]   0.0    0.00    0.00       8         std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [1082]
                0.00    0.00       8/8           std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [1081]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[1083]   0.0    0.00    0.00       7         __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::difference_type __gnu_cxx::operator-<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [1083]
                0.00    0.00      14/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [1061]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [1089]
[1084]   0.0    0.00    0.00       7         __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [1084]
-----------------------------------------------
                0.00    0.00       7/7           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [1089]
[1085]   0.0    0.00    0.00       7         __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator-(long) const [1085]
                0.00    0.00       7/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&) [1060]
-----------------------------------------------
                0.00    0.00       7/7           std::thread::~thread() [1088]
[1086]   0.0    0.00    0.00       7         std::thread::joinable() const [1086]
                0.00    0.00       7/14          std::thread::id::id() [1071]
                0.00    0.00       7/7           std::operator==(std::thread::id, std::thread::id) [1092]
-----------------------------------------------
                0.00    0.00       1/7           std::vector<std::thread, std::allocator<std::thread> >::~vector() [776]
                0.00    0.00       6/7           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[1087]   0.0    0.00    0.00       7         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [1087]
-----------------------------------------------
                0.00    0.00       7/7           void std::destroy_at<std::thread>(std::thread*) [1091]
[1088]   0.0    0.00    0.00       7         std::thread::~thread() [1088]
                0.00    0.00       7/7           std::thread::joinable() const [1086]
-----------------------------------------------
                0.00    0.00       7/7           Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [718]
[1089]   0.0    0.00    0.00       7         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [1089]
                0.00    0.00       7/14          std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() [1072]
                0.00    0.00       7/7           __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator-(long) const [1085]
                0.00    0.00       7/7           __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [1084]
-----------------------------------------------
                0.00    0.00       7/7           void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [719]
[1090]   0.0    0.00    0.00       7         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() [1090]
                0.00    0.00       7/28          __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&) [1060]
-----------------------------------------------
                0.00    0.00       3/7           void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*) [1137]
                0.00    0.00       4/7           void std::_Destroy<std::thread>(std::thread*) [1127]
[1091]   0.0    0.00    0.00       7         void std::destroy_at<std::thread>(std::thread*) [1091]
                0.00    0.00       7/7           std::thread::~thread() [1088]
-----------------------------------------------
                0.00    0.00       7/7           std::thread::joinable() const [1086]
[1092]   0.0    0.00    0.00       7         std::operator==(std::thread::id, std::thread::id) [1092]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [1094]
[1093]   0.0    0.00    0.00       6         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [1093]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [734]
[1094]   0.0    0.00    0.00       6         std::vector<std::thread, std::allocator<std::thread> >::max_size() const [1094]
                0.00    0.00       6/6           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [1093]
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [1097]
-----------------------------------------------
                0.00    0.00       1/6           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
                0.00    0.00       1/6           int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [774]
                0.00    0.00       2/6           std::vector<int, std::allocator<int> >::~vector() [548]
                0.00    0.00       2/6           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
[1095]   0.0    0.00    0.00       6         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [1095]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [1097]
[1096]   0.0    0.00    0.00       6         std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [1096]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [1094]
[1097]   0.0    0.00    0.00       6         std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&) [1097]
                0.00    0.00       6/6           std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [1096]
                0.00    0.00       6/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
-----------------------------------------------
                0.00    0.00       6/6           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1098]   0.0    0.00    0.00       6         std::vector<int, std::allocator<int> >::operator[](unsigned long) [1098]
-----------------------------------------------
                0.00    0.00       3/6           decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&) [766]
                0.00    0.00       3/6           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&) [765]
[1099]   0.0    0.00    0.00       6         std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&) [1099]
-----------------------------------------------
                0.00    0.00       5/5           Math::ThreadPool::stop() [741]
[1100]   0.0    0.00    0.00       5         bool __gnu_cxx::operator==<std::thread*, std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1100]
                0.00    0.00      10/22          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [1067]
-----------------------------------------------
                0.00    0.00       4/4           Math::ThreadPool::stop() [741]
[1101]   0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [1101]
-----------------------------------------------
                0.00    0.00       4/4           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1102]   0.0    0.00    0.00       4         bool __gnu_cxx::operator==<int*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [1102]
                0.00    0.00       8/8           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [1076]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<std::thread, std::allocator<std::thread> >::back() [1122]
[1103]   0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const [1103]
                0.00    0.00       4/16          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [1070]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [1110]
[1104]   0.0    0.00    0.00       4         std::_Head_base<0ul, std::thread::_State*, false>::_Head_base() [1104]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1111]
[1105]   0.0    0.00    0.00       4         std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_M_head(std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>&) [1105]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1112]
[1106]   0.0    0.00    0.00       4         std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_Head_base<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1106]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl() [1113]
[1107]   0.0    0.00    0.00       4         std::_Head_base<1ul, std::default_delete<std::thread::_State>, true>::_Head_base() [1107]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
[1108]   0.0    0.00    0.00       4         std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [1108]
                0.00    0.00       4/4           std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*) [1114]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
[1109]   0.0    0.00    0.00       4         std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [1109]
                0.00    0.00       4/8           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [1079]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>() [1116]
[1110]   0.0    0.00    0.00       4         std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [1110]
                0.00    0.00       4/4           std::_Head_base<0ul, std::thread::_State*, false>::_Head_base() [1104]
                0.00    0.00       4/4           std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl() [1113]
-----------------------------------------------
                0.00    0.00       4/4           Math::ThreadPool::start(unsigned long)::{lambda()#1}& std::__get_helper<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1124]
[1111]   0.0    0.00    0.00       4         std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1111]
                0.00    0.00       4/4           std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_M_head(std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>&) [1105]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1117]
[1112]   0.0    0.00    0.00       4         std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1112]
                0.00    0.00       4/4           std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_Head_base<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1106]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [1110]
[1113]   0.0    0.00    0.00       4         std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl() [1113]
                0.00    0.00       4/4           std::_Head_base<1ul, std::default_delete<std::thread::_State>, true>::_Head_base() [1107]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [1108]
[1114]   0.0    0.00    0.00       4         std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*) [1114]
                0.00    0.00       4/4           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [1115]
-----------------------------------------------
                0.00    0.00       4/4           std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*) [1114]
[1115]   0.0    0.00    0.00       4         std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [1115]
                0.00    0.00       4/4           std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>() [1116]
                0.00    0.00       4/8           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [1079]
-----------------------------------------------
                0.00    0.00       4/4           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [1115]
[1116]   0.0    0.00    0.00       4         std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>() [1116]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [1110]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1118]
[1117]   0.0    0.00    0.00       4         std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1117]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1112]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
[1118]   0.0    0.00    0.00       4         std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1118]
                0.00    0.00       4/4           std::thread::_State::_State() [1120]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
                0.00    0.00       4/4           std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1117]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::~_State_impl() [1458]
[1119]   0.0    0.00    0.00       4         std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::~_State_impl() [1119]
-----------------------------------------------
                0.00    0.00       4/4           std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1118]
[1120]   0.0    0.00    0.00       4         std::thread::_State::_State() [1120]
-----------------------------------------------
                0.00    0.00       4/4           decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [760]
[1121]   0.0    0.00    0.00       4         std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1121]
                0.00    0.00       4/14          std::thread::id::id() [1071]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
                0.00    0.00       4/4           std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1118]
                0.00    0.00       4/4           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [1108]
                0.00    0.00       4/4           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [1109]
-----------------------------------------------
                0.00    0.00       4/4           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [731]
[1122]   0.0    0.00    0.00       4         std::vector<std::thread, std::allocator<std::thread> >::back() [1122]
                0.00    0.00       4/8           std::vector<std::thread, std::allocator<std::thread> >::end() [1080]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const [1103]
                0.00    0.00       4/8           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [1075]
-----------------------------------------------
                0.00    0.00       1/4           Math::ThreadPool::stop() [741]
                0.00    0.00       3/4           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[1123]   0.0    0.00    0.00       4         std::vector<std::thread, std::allocator<std::thread> >::begin() [1123]
                0.00    0.00       4/16          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [1070]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&) [1125]
[1124]   0.0    0.00    0.00       4         Math::ThreadPool::start(unsigned long)::{lambda()#1}& std::__get_helper<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1124]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1111]
-----------------------------------------------
                0.00    0.00       4/4           void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [8]
[1125]   0.0    0.00    0.00       4         std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&) [1125]
                0.00    0.00       4/4           Math::ThreadPool::start(unsigned long)::{lambda()#1}& std::__get_helper<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1124]
                0.00    0.00       4/47          Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&) [1054]
-----------------------------------------------
                0.00    0.00       4/4           void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [8]
[1126]   0.0    0.00    0.00       4         std::remove_reference<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>::type&& std::move<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1126]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [1195]
[1127]   0.0    0.00    0.00       4         void std::_Destroy<std::thread>(std::thread*) [1127]
                0.00    0.00       4/7           void std::destroy_at<std::thread>(std::thread*) [1091]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long) [757]
[1128]   0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long) [1128]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long) [758]
[1129]   0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [1129]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::_M_max_size() const [1132]
-----------------------------------------------
                0.00    0.00       3/3           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1130]   0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [1130]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [733]
[1131]   0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [1131]
                0.00    0.00       6/22          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [1067]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [1129]
[1132]   0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread>::_M_max_size() const [1132]
-----------------------------------------------
                0.00    0.00       3/3           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1133]   0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [1133]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<int*>(int*, int*) [462]
[1134]   0.0    0.00    0.00       3         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1134]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base() [1136]
[1135]   0.0    0.00    0.00       3         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl() [1135]
                0.00    0.00       3/299938      std::allocator<Math::Matrix>::allocator() [942]
                0.00    0.00       3/693191      std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl_data::_Vector_impl_data() [898]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector() [1140]
[1136]   0.0    0.00    0.00       3         std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base() [1136]
                0.00    0.00       3/3           std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl() [1135]
-----------------------------------------------
                0.00    0.00       3/3           void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
[1137]   0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*) [1137]
                0.00    0.00       3/7           void std::destroy_at<std::thread>(std::thread*) [1091]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread(std::thread&&) [1139]
[1138]   0.0    0.00    0.00       3         std::thread::swap(std::thread&) [1138]
                0.00    0.00       3/3           std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [1144]
-----------------------------------------------
                0.00    0.00       3/3           decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&) [766]
[1139]   0.0    0.00    0.00       3         std::thread::thread(std::thread&&) [1139]
                0.00    0.00       3/14          std::thread::id::id() [1071]
                0.00    0.00       3/3           std::thread::swap(std::thread&) [1138]
-----------------------------------------------
                0.00    0.00       3/3           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1140]   0.0    0.00    0.00       3         std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector() [1140]
                0.00    0.00       3/3           std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base() [1136]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [1142]
[1141]   0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [1141]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [1203]
[1142]   0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [1142]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [1141]
-----------------------------------------------
                0.00    0.00       3/3           void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&) [767]
[1143]   0.0    0.00    0.00       3         std::remove_reference<std::thread&>::type&& std::move<std::thread&>(std::thread&) [1143]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::swap(std::thread&) [1138]
[1144]   0.0    0.00    0.00       3         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [1144]
                0.00    0.00       9/9           std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&) [1074]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [1154]
[1145]   0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [1145]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocator() [1156]
[1146]   0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::new_allocator() [1146]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [770]
[1147]   0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [1147]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [771]
[1148]   0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1148]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::_M_max_size() const [1151]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::begin() const [1186]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::end() const [1185]
[1149]   0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [1149]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::begin() [1210]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::end() [1209]
[1150]   0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [1150]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [1148]
[1151]   0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::_M_max_size() const [1151]
-----------------------------------------------
                0.00    0.00       2/2           int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [1169]
[1152]   0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [1152]
-----------------------------------------------
                0.00    0.00       1/2           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[1153]   0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::size() const [1153]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [592]
[1154]   0.0    0.00    0.00       2         std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [1154]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [1145]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [627]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [626]
[1155]   0.0    0.00    0.00       2         std::allocator<std::function<void ()>*>::~allocator() [1155]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl() [1159]
[1156]   0.0    0.00    0.00       2         std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocator() [1156]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::new_allocator() [1146]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::~_Vector_impl() [1160]
[1157]   0.0    0.00    0.00       2         std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::~allocator() [1157]
-----------------------------------------------
                0.00    0.00       2/2           int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) [773]
[1158]   0.0    0.00    0.00       2         int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [1158]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_base() [1162]
[1159]   0.0    0.00    0.00       2         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl() [1159]
                0.00    0.00       2/2           std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocator() [1156]
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl_data::_Vector_impl_data() [1161]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base() [775]
[1160]   0.0    0.00    0.00       2         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::~_Vector_impl() [1160]
                0.00    0.00       2/2           std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::~allocator() [1157]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl() [1159]
[1161]   0.0    0.00    0.00       2         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl_data::_Vector_impl_data() [1161]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::vector() [1165]
[1162]   0.0    0.00    0.00       2         std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_base() [1162]
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl() [1159]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [777]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [742]
[1163]   0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [1163]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [1194]
[1164]   0.0    0.00    0.00       2         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [1164]
-----------------------------------------------
                0.00    0.00       2/2           generateData(int) [611]
[1165]   0.0    0.00    0.00       2         std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::vector() [1165]
                0.00    0.00       2/2           std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_base() [1162]
-----------------------------------------------
                0.00    0.00       2/2           int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [789]
[1166]   0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [1166]
-----------------------------------------------
                0.00    0.00       2/2           int* std::copy<int const*, int*>(int const*, int const*, int*) [790]
[1167]   0.0    0.00    0.00       2         int const* std::__miter_base<int const*>(int const*) [1167]
-----------------------------------------------
                0.00    0.00       2/2           int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
[1168]   0.0    0.00    0.00       2         int const* std::__niter_base<int const*>(int const*) [1168]
-----------------------------------------------
                0.00    0.00       2/2           int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
[1169]   0.0    0.00    0.00       2         int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [1169]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [1152]
-----------------------------------------------
                0.00    0.00       1/2           int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
                0.00    0.00       1/2           int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
[1170]   0.0    0.00    0.00       2         int* std::__niter_base<int*>(int*) [1170]
-----------------------------------------------
                0.00    0.00       1/2           int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) [784]
                0.00    0.00       1/2           int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [783]
[1171]   0.0    0.00    0.00       2         int* std::__niter_wrap<int*>(int* const&, int*) [1171]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4Cost6L2Cost4funcEN4Math6MatrixES2_ [1216]
[1172]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1172]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z12generateDatai [1214]
[1173]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1173]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4FFNNC2ESt6vectorIiSaIiEEPN4Cost6CostFnEPN10Activation12ActivationFnE [1217]
[1174]   0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [1174]
-----------------------------------------------
                0.00    0.00       1/1           Activation::Sigmoid::Sigmoid() [1176]
[1175]   0.0    0.00    0.00       1         Activation::ActivationFn::ActivationFn() [1175]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1176]   0.0    0.00    0.00       1         Activation::Sigmoid::Sigmoid() [1176]
                0.00    0.00       1/1           Activation::ActivationFn::ActivationFn() [1175]
-----------------------------------------------
                0.00    0.00       1/1           Cost::L2Cost::L2Cost() [1178]
[1177]   0.0    0.00    0.00       1         Cost::CostFn::CostFn() [1177]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[1178]   0.0    0.00    0.00       1         Cost::L2Cost::L2Cost() [1178]
                0.00    0.00       1/1           Cost::CostFn::CostFn() [1177]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [779]
[1179]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long) [1179]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long) [780]
[1180]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*) [1180]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::_M_max_size() const [1184]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::thread>::allocator() [1188]
[1181]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::thread>::new_allocator() [1181]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::allocator() [1190]
[1182]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [1182]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[1183]   0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign() [1183]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*) [1180]
[1184]   0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::_M_max_size() const [1184]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[1185]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::end() const [1185]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [1149]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[1186]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::begin() const [1186]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [1149]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [617]
[1187]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::capacity() const [1187]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [1197]
[1188]   0.0    0.00    0.00       1         std::allocator<std::thread>::allocator() [1188]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::thread>::new_allocator() [1181]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [1198]
[1189]   0.0    0.00    0.00       1         std::allocator<std::thread>::~allocator() [1189]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [1192]
[1190]   0.0    0.00    0.00       1         std::allocator<std::function<void ()> >::allocator() [1190]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [1182]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [1193]
[1191]   0.0    0.00    0.00       1         std::allocator<std::function<void ()> >::~allocator() [1191]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [622]
[1192]   0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [1192]
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::allocator() [1190]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [1194]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [625]
[1193]   0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [1193]
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::~allocator() [1191]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [1192]
[1194]   0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [1194]
                0.00    0.00       2/2           std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [1164]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::thread*>(std::thread*, std::thread*) [791]
[1195]   0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [1195]
                0.00    0.00       4/4           void std::_Destroy<std::thread>(std::thread*) [1127]
                0.00    0.00       4/13          std::thread* std::__addressof<std::thread>(std::thread&) [1073]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [793]
[1196]   0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [1196]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [1200]
[1197]   0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [1197]
                0.00    0.00       1/1           std::allocator<std::thread>::allocator() [1188]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl_data::_Vector_impl_data() [1199]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [794]
[1198]   0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [1198]
                0.00    0.00       1/1           std::allocator<std::thread>::~allocator() [1189]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [1197]
[1199]   0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl_data::_Vector_impl_data() [1199]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::vector() [1207]
[1200]   0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [1200]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [1197]
-----------------------------------------------
                0.00    0.00       1/1           std::mutex::mutex() [1206]
[1201]   0.0    0.00    0.00       1         std::__mutex_base::__mutex_base() [1201]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1208]
[1202]   0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [1202]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [1204]
[1203]   0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [1203]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [1142]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [1205]
[1204]   0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [1204]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [1203]
-----------------------------------------------
                0.00    0.00       1/1           FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [2]
[1205]   0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [1205]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [1204]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::ThreadPool(unsigned long) [620]
[1206]   0.0    0.00    0.00       1         std::mutex::mutex() [1206]
                0.00    0.00       1/1           std::__mutex_base::__mutex_base() [1201]
-----------------------------------------------
                0.00    0.00       1/1           Math::ThreadPool::ThreadPool(unsigned long) [620]
[1207]   0.0    0.00    0.00       1         std::vector<std::thread, std::allocator<std::thread> >::vector() [1207]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [1200]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&) [754]
[1208]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [1208]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [1202]
                0.00    0.00       1/969352      unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [886]
-----------------------------------------------
                0.00    0.00       1/1           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1209]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::end() [1209]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [1150]
-----------------------------------------------
                0.00    0.00       1/1           FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [615]
[1210]   0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::begin() [1210]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [1150]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [1213]
[1211]   0.0    0.00    0.00       1         std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag) [1211]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [1213]
[1212]   0.0    0.00    0.00       1         std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&) [1212]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag) [752]
[1213]   0.0    0.00    0.00       1         std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [1213]
                0.00    0.00       1/1           std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&) [1212]
                0.00    0.00       1/1           std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag) [1211]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [411] _GLOBAL__sub_I__ZN10Activation7Sigmoid2fnEN4Math6MatrixE [1195] void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [1042] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin()
 [611] generateData(int)    [1196] void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [647] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::push_back(std::tuple<Math::Matrix, Math::Matrix>&&)
 [619] __static_initialization_and_destruction_0(int, int) [862] void std::_Destroy_aux<true>::__destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [1165] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::vector()
 [1172] __static_initialization_and_destruction_0(int, int) [562] void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [717] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~vector()
 [1173] __static_initialization_and_destruction_0(int, int) [1134] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [1097] std::vector<std::thread, std::allocator<std::thread> >::_S_max_size(std::allocator<std::thread> const&)
 [1174] __static_initialization_and_destruction_0(int, int) [669] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_allocate(unsigned long) [761] std::vector<std::thread, std::allocator<std::thread> >::_S_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
 [362] __gthread_once(int*, void (*)()) [900] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl(std::allocator<Math::Matrix> const&) [731] std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
 [348] __gthread_active_p() [1135] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::_Vector_impl() [762] std::vector<std::thread, std::allocator<std::thread> >::_S_do_relocate(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&, std::integral_constant<bool, true>)
 [409] __gthread_mutex_lock(pthread_mutex_t*) [896] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl::~_Vector_impl() [733] void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
 [299] __gthread_mutex_unlock(pthread_mutex_t*) [377] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_deallocate(Math::Matrix*, unsigned long) [1080] std::vector<std::thread, std::allocator<std::thread> >::end()
 [1175] Activation::ActivationFn::ActivationFn() [670] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_create_storage(unsigned long) [1122] std::vector<std::thread, std::allocator<std::thread> >::back()
 [192] Activation::Sigmoid::fn(Math::Matrix) [898] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_impl_data::_Vector_impl_data() [1123] std::vector<std::thread, std::allocator<std::thread> >::begin()
 [206] Activation::Sigmoid::fnDerv(Math::Matrix) [863] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() [1207] std::vector<std::thread, std::allocator<std::thread> >::vector()
 [1176] Activation::Sigmoid::Sigmoid() [671] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base(unsigned long, std::allocator<Math::Matrix> const&) [776] std::vector<std::thread, std::allocator<std::thread> >::~vector()
 [593] Activation::LeakyRelu::fnDerv(Math::Matrix) [1136] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_Vector_base() [912] std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)
 [1177] Cost::CostFn::CostFn() [378] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::~_Vector_base() [226] std::vector<double, std::allocator<double> >::_M_move_assign(std::vector<double, std::allocator<double> >&&, std::integral_constant<bool, true>)
 [555] Cost::L2Cost::func(Math::Matrix, Math::Matrix) [746] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_allocate(unsigned long) [416] std::vector<double, std::allocator<double> >::_S_check_init_len(unsigned long, std::allocator<double> const&)
 [323] Cost::L2Cost::funcDx(Math::Matrix, Math::Matrix) [1159] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::_Vector_impl() [735] std::vector<double, std::allocator<double> >::_M_fill_initialize(unsigned long, double const&)
 [1178] Cost::L2Cost::L2Cost() [1160] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl::~_Vector_impl() [689] void std::vector<double, std::allocator<double> >::_M_range_initialize<double const*>(double const*, double const*, std::forward_iterator_tag)
  [46] FFNN::feedForward(Math::Matrix) [745] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [56] double* std::vector<double, std::allocator<double> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(unsigned long, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  [81] FFNN::evaluateCost(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [1161] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_impl_data::_Vector_impl_data() [267] std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long)
   [4] FFNN::backPropagate(Math::Matrix const&, Math::Matrix const&) [1053] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() [470] std::vector<double, std::allocator<double> >::end()
   [3] FFNN::updateMiniBatch(std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> const&, double) [1162] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_Vector_base() [469] std::vector<double, std::allocator<double> >::begin()
   [2] FFNN::train(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >&, int, int, double, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [775] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::~_Vector_base() [725] std::vector<double, std::allocator<double> >::vector(unsigned long, double const&, std::allocator<double> const&)
  [79] FFNN::evaluate(std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > const&) [756] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long) [182] std::vector<double, std::allocator<double> >::vector()
 [615] FFNN::FFNN(std::vector<int, std::allocator<int> >, Cost::CostFn*, Activation::ActivationFn*) [1197] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [553] std::vector<double, std::allocator<double> >::vector(std::allocator<double> const&)
 [616] FFNN::~FFNN()        [1198] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [294] std::vector<double, std::allocator<double> >::vector(std::vector<double, std::allocator<double> > const&)
 [741] Math::ThreadPool::stop() [755] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long) [688] std::vector<double, std::allocator<double> >::vector(std::initializer_list<double>, std::allocator<double> const&)
 [732] Math::ThreadPool::start(unsigned long) [1199] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl_data::_Vector_impl_data() [171] std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&)
  [25] std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}) [1087] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [86] std::vector<double, std::allocator<double> >::~vector()
   [6] std::future<decltype ({parm#1}())> Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}) [1200] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [210] std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> >&&)
 [620] Math::ThreadPool::ThreadPool(unsigned long) [794] std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [27] std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
 [264] Math::Matrix::applyFnHere(std::function<double (double)>) [126] std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [436] std::vector<double, std::allocator<double> >::operator[](unsigned long)
 [722] Math::Matrix::generateRandom(int, int, double) [417] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [1208] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
   [5] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int) [321] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl() [754] std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)
 [163] Math::Matrix::hProd(Math::Matrix, Math::Matrix const&) [331] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [752] void std::vector<int, std::allocator<int> >::_M_range_initialize<int const*>(int const*, int const*, std::forward_iterator_tag)
  [35] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&) [217] std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [774] int* std::vector<int, std::allocator<int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  [15] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&) [369] std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [1209] std::vector<int, std::allocator<int> >::end()
  [33] Math::Matrix::Matrix(Math::Matrix const&) [388] std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_copy_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data const&) [1210] std::vector<int, std::allocator<int> >::begin()
 [679] Math::Matrix::Matrix(std::vector<double, std::allocator<double> > const&, bool) [370] std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_M_swap_data(std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data&) [750] std::vector<int, std::allocator<int> >::vector(std::initializer_list<int>, std::allocator<int> const&)
 [309] Math::Matrix::Matrix(int, int, std::vector<double, std::allocator<double> > const&) [474] std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data() [744] std::vector<int, std::allocator<int> >::vector()
 [164] Math::Matrix::Matrix() [227] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [548] std::vector<int, std::allocator<int> >::~vector()
 [117] Math::Matrix::~Matrix() [330] std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [617] std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  [75] Math::Matrix::operator=(Math::Matrix const&) [256] std::_Vector_base<double, std::allocator<double> >::_Vector_base() [1098] std::vector<int, std::allocator<int> >::operator[](unsigned long)
 [550] Math::Matrix::operator[](int) [552] std::_Vector_base<double, std::allocator<double> >::_Vector_base(std::allocator<double> const&) [598] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned long)
 [639] Math::Matrix::operator-=(Math::Matrix const&) [166] std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [1048] std::__detail::__extent_storage<18446744073709551615ul>::__extent_storage(unsigned long)
  [14] Math::Matrix::operator*=(Math::Matrix const&) [769] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [1008] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
 [721] Math::Matrix::operator*=(double const&) [777] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [1141] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [278] Math::Matrix::operator+=(Math::Matrix const&) [742] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [1009] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
 [406] Math::operator-(Math::Matrix, Math::Matrix const&) [753] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [1142] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
   [7] Math::operator*(Math::Matrix, Math::Matrix const&) [768] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [454] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
 [245] Math::operator+(Math::Matrix, Math::Matrix const&) [1163] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [374] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&)
 [538] __gnu_cxx::new_allocator<Math::Matrix>::deallocate(Math::Matrix*, unsigned long) [1095] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [190] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function()
 [899] __gnu_cxx::new_allocator<Math::Matrix>::allocate(unsigned long, void const*) [778] std::_Vector_base<int, std::allocator<int> >::_Vector_base(std::allocator<int> const&) [559] std::function<double (double)>::function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&)
 [865] __gnu_cxx::new_allocator<Math::Matrix>::new_allocator(__gnu_cxx::new_allocator<Math::Matrix> const&) [743] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [459] std::function<double (double)>::function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}, void>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&)
 [941] __gnu_cxx::new_allocator<Math::Matrix>::new_allocator() [751] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [408] std::function<double (double)>::~function()
 [1179] __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long) [1201] std::__mutex_base::__mutex_base() [998] std::function<void (int, int)>::function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&)
 [1180] __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long, void const*) [520] std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [962] std::function<void (int, int)>::function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&)
 [1145] __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [109] std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [582] std::function<void (int, int)>::function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}, void>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&)
 [815] __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<void ()> > const&) [260] std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [349] std::function<void (int, int)>::~function()
 [395] __gnu_cxx::new_allocator<std::packaged_task<void ()> >::new_allocator() [509] std::enable_if<!std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>::value, void>::type std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [254] std::function<void ()>::swap(std::function<void ()>&)
 [932] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [69] std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [142] std::function<void ()>::function(std::function<void ()>&&)
 [920] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [156] std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [399] std::function<void ()>::function()
 [574] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [237] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [176] std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
 [511] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [304] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [223] std::function<void ()>::function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}, void>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
 [510] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [65] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [73] std::function<void ()>::~function()
 [492] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [643] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [71] std::function<void ()>::operator=(std::function<void ()>&&)
 [503] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [661] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, (__gnu_cxx::_Lock_policy)2>&&) [805] std::_Any_data::_M_access()
 [357] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [502] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [933] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >()
 [824] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [847] std::enable_if<!std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<void ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<void ()>, std::packaged_task<void ()> >(std::packaged_task<void ()>*) [876] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >()
 [1064] __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::deallocate(std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [441] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>&&) [577] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>()
 [1065] __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocate(unsigned long, void const*) [293] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2> const&) [835] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>()
 [1146] __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::new_allocator() [53] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [965] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>()
 [1128] __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long) [28] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [940] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>()
 [1129] __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long, void const*) [41] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [934] Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>()
 [1181] __gnu_cxx::new_allocator<std::thread>::new_allocator() [852] std::__atomic_base<unsigned int>::__atomic_base(unsigned int) [525] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>()
 [966] __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long) [365] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [963] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>()
 [971] __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long, void const*) [642] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Impl::~_Impl() [494] std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
 [1182] __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [165] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run() [346] std::once_flag::_Prepare_execution::~_Prepare_execution()
 [479] __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [173] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [345] std::once_flag::once_flag()
 [252] __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [335] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::~_Task_state() [151] void std::_Construct<Math::Matrix>(Math::Matrix*)
 [488] __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [440] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::_Impl<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [147] void std::_Construct<Math::Matrix, Math::Matrix const&>(Math::Matrix*, Math::Matrix const&)
 [385] __gnu_cxx::new_allocator<double>::new_allocator() [608] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Impl::~_Impl() [663] void std::_Construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const&>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> const&)
 [1147] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [80] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run() [685] void std::_Construct<double>(double*)
 [1148] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [111] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [706] std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::__distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::random_access_iterator_tag)
 [495] __gnu_cxx::new_allocator<int>::new_allocator() [201] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::~_Task_state() [1033] std::iterator_traits<double const*>::difference_type std::__distance<double const*>(double const*, double const*, std::random_access_iterator_tag)
 [811] __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [112] std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [1211] std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag)
 [937] __gnu_cxx::__alloc_traits<std::allocator<Math::Matrix>, Math::Matrix>::_S_select_on_copy(std::allocator<Math::Matrix> const&) [231] std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [432] double* std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&, std::random_access_iterator_tag)
 [609] __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_select_on_copy(std::allocator<double> const&) [197] std::__future_base::_State_baseV2::_M_set_retrieved_flag() [95] std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
 [812] __gnu_cxx::__alloc_traits<std::allocator<double>, double>::_S_propagate_on_copy_assign() [379] void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<void ()> >(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [42] std::enable_if<is_invocable_r_v<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>, std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >::type std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
 [1183] __gnu_cxx::__alloc_traits<std::allocator<int>, int>::_S_propagate_on_copy_assign() [506] void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [371] std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&)
 [858] __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_ptr() [21] std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [656] std::enable_if<is_invocable_r_v<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>, double>::type std::__invoke_r<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&)
 [859] __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::_M_addr() [125] std::__future_base::_State_baseV2::_State_baseV2() [96] std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&)
 [819] __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_ptr() [205] std::__future_base::_State_baseV2::~_State_baseV2() [49] std::enable_if<is_invocable_r_v<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&)
 [818] __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::_M_addr() [519] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [146] std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
 [426] __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_ptr() [508] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&) [63] std::enable_if<is_invocable_r_v<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>, void>::type std::__invoke_r<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
 [816] __gnu_cxx::__aligned_buffer<std::packaged_task<void ()> >::_M_addr() [85] std::__future_base::_Task_state_base<void ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [258] std::enable_if<is_invocable_r_v<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [578] __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix const* const&) [172] std::__future_base::_Task_state_base<void ()>::~_Task_state_base() [263] std::enable_if<is_invocable_r_v<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [888] __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator++() [211] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<void, int>(std::allocator<int> const&) [124] std::enable_if<is_invocable_r_v<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>, void>::type std::__invoke_r<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [589] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix> const* const&) [289] std::__future_base::_Result<void>::_M_destroy() [248] void std::destroy_at<Math::Matrix>(Math::Matrix*)
 [1020] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++() [854] std::__future_base::_Result<void>::_Result() [336] void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*)
 [381] __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::__normal_iterator(double const* const&) [501] std::__future_base::_Result<void>::~_Result() [202] void std::destroy_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*)
 [1149] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [856] std::__future_base::_Result<void>::~_Result() [571] void std::destroy_at<std::packaged_task<void ()> >(std::packaged_task<void ()>*)
 [1060] __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::__normal_iterator(Math::Matrix* const&) [47] std::packaged_task<void ()>::get_future() [698] void std::destroy_at<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
 [1043] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [37] std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [1091] void std::destroy_at<std::thread>(std::thread*)
 [979] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator++() [78] std::packaged_task<void ()>::packaged_task<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, void>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [175] void std::destroy_at<std::function<void ()> >(std::function<void ()>*)
 [954] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::__normal_iterator(std::tuple<Math::Matrix, Math::Matrix>* const&) [82] std::packaged_task<void ()>::~packaged_task() [678] std::tuple<std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type, std::__strip_reference_wrapper<std::decay<Math::Matrix&>::type>::__type> std::make_tuple<Math::Matrix&, Math::Matrix&>(Math::Matrix&, Math::Matrix&)
 [975] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator++(int) [44] std::packaged_task<void ()>::operator()() [183] std::tuple<std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type, std::__strip_reference_wrapper<std::decay<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type>::__type> std::make_tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&)
 [1070] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [936] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [1049] auto std::to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
 [1101] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [935] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [928] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
 [817] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&) [648] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [573] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const* std::__addressof<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&)
 [1003] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++() [686] void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [893] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&)
 [1150] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [926] bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [907] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const* std::__addressof<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&)
 [1130] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++() [687] void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [830] Math::Matrix* std::__addressof<Math::Matrix>(Math::Matrix&)
 [909] __gnu_cxx::__ops::__iter_less_iter() [534] bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run_delayed(std::weak_ptr<std::__future_base::_State_baseV2>)::{lambda()#1}, void> const&) [883] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
 [869] bool __gnu_cxx::operator==<Math::Matrix const*, Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [877] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [837] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
 [1017] bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [402] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [825] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&)
 [974] bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> > const&) [297] std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_get_pointer(std::_Any_data const&) [840] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&)
 [1007] bool __gnu_cxx::operator==<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [596] void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&>(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [437] std::mutex* std::__addressof<std::mutex>(std::mutex&)
 [1100] bool __gnu_cxx::operator==<std::thread*, std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [543] void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_init_functor<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&) [1029] std::tuple<Math::Matrix, Math::Matrix>* std::__addressof<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&)
 [558] bool __gnu_cxx::operator==<double*, double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [507] bool std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_not_empty_function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const&) [1073] std::thread* std::__addressof<std::thread>(std::thread&)
 [1102] bool __gnu_cxx::operator==<int*, int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&) [607] void std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_create<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&&, std::integral_constant<bool, true>) [841] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&)
 [1083] __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::difference_type __gnu_cxx::operator-<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&, __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > const&) [524] std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [925] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
 [1006] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::difference_type __gnu_cxx::operator-<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&) [523] std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [572] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}* std::__addressof<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}&)
 [1131] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [634] std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [843] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
 [705] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&) [701] void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&) [493] bool* std::__addressof<bool>(bool&)
 [320] Math::ThreadPool::getPoolSize() const [947] bool std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const&) [918] double* std::__addressof<double>(double&)
 [864] Math::Matrix::getCols() const [702] void std::_Function_base::_Base_manager<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [48] std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
 [868] Math::Matrix::getRows() const [529] std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [23] std::shared_ptr<std::packaged_task<void ()> > std::make_shared<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
 [1015] Math::Matrix::getSize() const [528] std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [457] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [295] Math::Matrix::getVals() const [641] std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_get_pointer(std::_Any_data const&) [516] int const* std::min_element<int const*>(int const*, int const*)
 [213] Math::Matrix::operator[](int) const [546] void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_init_functor<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&) [983] Math::Matrix const& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&)
 [897] __gnu_cxx::new_allocator<Math::Matrix>::_M_max_size() const [964] bool std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_not_empty_function<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const&) [1018] Math::Matrix& std::__get_helper<0ul, Math::Matrix, Math::Matrix>(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&)
 [1184] __gnu_cxx::new_allocator<std::function<void ()>*>::_M_max_size() const [613] void std::_Function_base::_Base_manager<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_create<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::_Any_data&, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&&, std::integral_constant<bool, true>) [431] std::__future_base::_Result_base* const& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
 [921] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [242] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [475] std::__future_base::_Result_base*& std::__get_helper<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [873] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [241] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [382] std::__future_base::_Result<void>*& std::__get_helper<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
 [570] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::_M_max_size() const [446] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [1081] std::thread::_State*& std::__get_helper<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&)
 [1066] __gnu_cxx::new_allocator<std::tuple<Math::Matrix, Math::Matrix> >::_M_max_size() const [266] void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [993] std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
 [1132] __gnu_cxx::new_allocator<std::thread>::_M_max_size() const [930] bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1} const&) [1124] Math::ThreadPool::start(unsigned long)::{lambda()#1}& std::__get_helper<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&)
 [970] __gnu_cxx::new_allocator<std::function<void ()> >::_M_max_size() const [353] void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&, std::integral_constant<bool, false>) [977] Math::Matrix const& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix> const&)
 [466] __gnu_cxx::new_allocator<double>::_M_max_size() const [121] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [1021] Math::Matrix& std::__get_helper<1ul, Math::Matrix>(std::_Tuple_impl<1ul, Math::Matrix>&)
 [1151] __gnu_cxx::new_allocator<int>::_M_max_size() const [113] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [383] std::__future_base::_Result_base::_Deleter& std::__get_helper<1ul, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&)
 [831] __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [324] std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [988] std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::__get_helper<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >>&)
 [890] __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [191] void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_init_functor<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [801] __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
 [1004] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [870] bool std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_not_empty_function<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1} const&) [1166] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
 [533] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix> const*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [243] void std::_Function_base::_Base_manager<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_create<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::_Any_data&, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&, std::integral_constant<bool, false>) [1027] double const* std::__miter_base<double const*>(double const*)
 [800] __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base() const [999] std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [1167] int const* std::__miter_base<int const*>(int const*)
 [1152] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [1000] std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1005] std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**)
 [1061] __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::base() const [450] std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [1028] double const* std::__niter_base<double const*>(double const*)
 [1084] __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator*() const [995] void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&) [423] double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
 [1085] __gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::operator-(long) const [996] bool std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1} const&) [1168] int const* std::__niter_base<int const*>(int const*)
 [957] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::base() const [997] void std::_Function_base::_Base_manager<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [1169] int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
 [980] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul> >::operator*() const [532] std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [1002] std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**)
 [956] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::base() const [531] std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1069] std::thread* std::__niter_base<std::thread*>(std::thread*)
 [955] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator*() const [444] std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [813] double* std::__niter_base<double*>(double*)
 [1039] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator-(long) const [960] void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&) [361] double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [972] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator+(long) const [961] bool std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1} const&) [1170] int* std::__niter_base<int*>(int*)
 [1046] __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >::operator->() const [959] void std::_Function_base::_Base_manager<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [281] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)
 [1067] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [953] std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [1024] std::function<void ()>** std::__niter_wrap<std::function<void ()>**>(std::function<void ()>** const&, std::function<void ()>**)
 [1075] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [952] std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [467] double* std::__niter_wrap<double*>(double* const&, double*)
 [1103] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long) const [636] std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_get_pointer(std::_Any_data const&) [1171] int* std::__niter_wrap<int*>(int* const&, int*)
 [561] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const [945] void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_init_functor<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&) [763] std::thread* std::__relocate_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
 [584] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const [946] bool std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_not_empty_function<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1} const&) [1050] auto std::__to_address<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > const&)
 [424] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const [944] void std::_Function_base::_Base_manager<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_create<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::_Any_data&, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&&, std::integral_constant<bool, false>) [923] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
 [1076] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [806] std::_Function_base::_Function_base() [874] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*)
 [1133] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const [68] std::_Function_base::~_Function_base() [496] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*)
 [588] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const [828] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>&) [1051] std::tuple<Math::Matrix, Math::Matrix>* std::__to_address<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
 [914] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<int const*, int const*>(int const*, int const*) const [650] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<void ()> > const&) [724] decltype (::new ((void*)(0)) Math::Matrix((declval<Math::Matrix>)())) std::construct_at<Math::Matrix, Math::Matrix>(Math::Matrix*, Math::Matrix&&)
 [315] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [364] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<void ()> >, true>::~_Sp_ebo_helper() [169] decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
 [316] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [829] std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [110] decltype (::new ((void*)(0)) std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)(), (declval<std::allocator<int> const&>)())) std::construct_at<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
 [969] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [631] std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [77] decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
 [592] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [420] std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [36] decltype (::new ((void*)(0)) std::packaged_task<void ()>((declval<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>)())) std::construct_at<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
 [939] std::_Vector_base<Math::Matrix, std::allocator<Math::Matrix> >::_M_get_Tp_allocator() const [88] std::__basic_future<void>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [673] decltype (::new ((void*)(0)) std::tuple<Math::Matrix, Math::Matrix>((declval<std::tuple<Math::Matrix, Math::Matrix> >)())) std::construct_at<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&)
 [1055] std::_Vector_base<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_get_Tp_allocator() const [100] std::__basic_future<void>::~__basic_future() [766] decltype (::new ((void*)(0)) std::thread((declval<std::thread>)())) std::construct_at<std::thread, std::thread>(std::thread*, std::thread&&)
 [1093] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [567] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [760] decltype (::new ((void*)(0)) std::thread((declval<Math::ThreadPool::start(unsigned long)::{lambda()#1}>)())) std::construct_at<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
 [556] std::_Vector_base<double, std::allocator<double> >::get_allocator() const [149] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [221] decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&)
 [884] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [115] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [143] decltype (::new ((void*)(0)) std::function<void ()>((declval<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>)())) std::construct_at<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&)
 [347] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [822] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [177] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [860] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [74] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [114] double* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
 [489] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [55] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [783] int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
 [229] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [29] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::packaged_task<void ()>*&, std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [709] double* std::__copy_move_a<false, double const*, double*>(double const*, double const*, double*)
 [288] std::__shared_ptr<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [204] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [784] int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*)
 [228] std::__shared_ptr<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2>::get() const [557] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [714] std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [908] std::__atomic_base<int>::operator int() const [545] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [127] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
 [168] std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [486] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [57] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter> std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::__invoke_other, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&)
 [128] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [1164] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [421] double std::__invoke_impl<double, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&, double&&)
  [58] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>::operator()() const [549] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [682] double std::__invoke_impl<double, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double>(std::__invoke_other, Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&, double&&)
 [285] std::_Function_base::_M_empty() const [924] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [20] void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [430] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [882] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [98] void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&)
 [230] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [683] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [51] void std::__invoke_impl<void, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::__invoke_other, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&)
 [487] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [927] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [145] void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
 [317] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [875] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::get() [62] void std::__invoke_impl<void, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::__invoke_other, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
 [499] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [393] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*) [259] void std::__invoke_impl<void, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [1031] std::initializer_list<double>::end() const [373] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [262] void std::__invoke_impl<void, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [1032] std::initializer_list<double>::size() const [871] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [123] void std::__invoke_impl<void, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int, int>(std::__invoke_other, Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&, int&&, int&&)
 [1026] std::initializer_list<double>::begin() const [397] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [10] void std::__invoke_impl<void, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::__invoke_other, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
 [917] std::initializer_list<int>::end() const [826] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*) [458] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__max_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [916] std::initializer_list<int>::size() const [244] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [515] int const* std::__min_element<int const*, __gnu_cxx::__ops::_Iter_less_iter>(int const*, int const*, __gnu_cxx::__ops::_Iter_less_iter)
 [878] std::initializer_list<int>::begin() const [845] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [137] double* std::__copy_move_a1<false, double const*, double*>(double const*, double const*, double*)
 [291] std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [280] std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl() [772] int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*)
 [290] std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [196] std::__uniq_ptr_data<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [713] std::function<void ()>** std::__copy_move_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [390] std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [327] std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_data(std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>&&) [180] double* std::__copy_move_a2<false, double const*, double*>(double const*, double const*, double*)
 [391] std::__shared_ptr_access<std::__future_base::_Task_state_base<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [311] std::__uniq_ptr_data<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, true, true>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [773] int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*)
 [214] std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [1114] std::__uniq_ptr_data<std::thread::_State, std::default_delete<std::thread::_State>, true, true>::__uniq_ptr_impl(std::thread::_State*) [715] std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [296] std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [325] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [764] std::thread* std::__relocate_a_1<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
 [283] std::__shared_ptr_access<std::packaged_task<void ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [179] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [902] void std::__alloc_on_move<std::allocator<double> >(std::allocator<double>&, std::allocator<double>&)
 [973] std::uniform_int_distribution<unsigned long>::param_type::a() const [286] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [102] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
 [1010] std::uniform_int_distribution<unsigned long>::param_type::b() const [303] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [59] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> > std::allocate_shared<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int> const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
 [630] std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::end() const [209] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [50] std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&)
 [590] std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::size() const [305] std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [24] std::shared_ptr<std::packaged_task<void ()> > std::allocate_shared<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> > const&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&)
 [1047] std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::begin() const [189] std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [539] std::__deque_buf_size(unsigned long)
 [654] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::size() const [271] std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [919] std::__size_to_integer(unsigned long)
 [343] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [328] std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [680] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
 [583] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::max_size() const [312] std::__uniq_ptr_impl<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<void>*) [333] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&)
 [253] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [1079] std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [208] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&)
 [1086] std::thread::joinable() const [1115] std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [140] Math::Matrix* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*)
 [730] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_check_len(unsigned long, char const*) const [597] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy() [99] double* std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
 [632] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() const [40] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [785] int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
 [275] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::size() const [160] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [727] Math::Matrix* std::uninitialized_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*)
 [367] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() const [537] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [665] std::tuple<Math::Matrix, Math::Matrix>* std::uninitialized_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*)
 [739] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::max_size() const [427] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [710] double* std::uninitialized_copy<double const*, double*>(double const*, double const*, double*)
 [1068] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_check_len(unsigned long, char const*) const [376] std::allocator_traits<std::allocator<Math::Matrix> >::deallocate(std::allocator<Math::Matrix>&, Math::Matrix*, unsigned long) [786] int* std::uninitialized_copy<int const*, int*>(int const*, int const*, int*)
 [628] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() const [938] std::allocator_traits<std::allocator<Math::Matrix> >::select_on_container_copy_construction(std::allocator<Math::Matrix> const&) [84] std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&)
 [1045] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::size() const [668] std::allocator_traits<std::allocator<Math::Matrix> >::allocate(std::allocator<Math::Matrix>&, unsigned long) [43] std::shared_ptr<std::__future_base::_Task_state_base<void ()> > std::__create_task_state<void (), Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> >(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&)
 [629] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::begin() const [580] std::allocator_traits<std::allocator<Math::Matrix> >::max_size(std::allocator<Math::Matrix> const&) [1016] std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)
 [1056] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size() const [723] void std::allocator_traits<std::allocator<Math::Matrix> >::construct<Math::Matrix, Math::Matrix>(std::allocator<Math::Matrix>&, Math::Matrix*, Math::Matrix&&) [1034] std::iterator_traits<double const*>::iterator_category std::__iterator_category<double const*>(double const* const&)
 [734] std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long, char const*) const [779] std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long) [1212] std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&)
 [403] std::vector<std::thread, std::allocator<std::thread> >::size() const [780] std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long) [518] std::iterator_traits<double*>::iterator_category std::__iterator_category<double*>(double* const&)
 [1094] std::vector<std::thread, std::allocator<std::thread> >::max_size() const [500] void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::destroy<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*) [767] void std::__relocate_object_a<std::thread, std::thread, std::allocator<std::thread> >(std::thread*, std::thread*, std::allocator<std::thread>&)
 [292] std::vector<double, std::allocator<double> >::end() const [72] void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [737] double* std::uninitialized_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
 [339] std::vector<double, std::allocator<double> >::size() const [34] void std::allocator_traits<std::allocator<std::packaged_task<void ()> > >::construct<std::packaged_task<void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >&, std::packaged_task<void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [272] std::is_constant_evaluated()
 [355] std::vector<double, std::allocator<double> >::begin() const [684] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [601] std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(unsigned long, unsigned long, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
 [273] std::vector<double, std::allocator<double> >::capacity() const [681] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [139] Math::Matrix* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*, std::allocator<Math::Matrix>&)
 [340] std::vector<double, std::allocator<double> >::operator[](unsigned long) const [449] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [92] double* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, std::allocator<double>&)
 [1185] std::vector<int, std::allocator<int> >::end() const [372] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [787] int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&)
 [1153] std::vector<int, std::allocator<int> >::size() const [445] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long) [728] Math::Matrix* std::__uninitialized_copy_a<Math::Matrix const*, Math::Matrix*, Math::Matrix>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*, std::allocator<Math::Matrix>&)
 [1186] std::vector<int, std::allocator<int> >::begin() const [224] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) [666] std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy_a<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
 [1187] std::vector<int, std::allocator<int> >::capacity() const [747] std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::deallocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, unsigned long) [711] double* std::__uninitialized_copy_a<double const*, double*, double>(double const*, double const*, double*, std::allocator<double>&)
 [1044] std::__detail::__extent_storage<18446744073709551615ul>::_M_extent() const [748] std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::allocate(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, unsigned long) [788] int* std::__uninitialized_copy_a<int const*, int*, int>(int const*, int const*, int*, std::allocator<int>&)
  [30] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [1057] std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [535] std::function<void ()>** std::__copy_move_backward_a1<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [268] std::function<double (double)>::operator()(double) const [672] void std::allocator_traits<std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::construct<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> >(std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>&&) [738] double* std::__uninitialized_fill_n_a<double*, unsigned long, double, double>(double*, unsigned long, double const&, std::allocator<double>&)
  [70] std::function<void (int, int)>::operator()(int, int) const [757] std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long) [129] Math::Matrix* std::__uninitialized_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long)
  [31] std::function<void ()>::operator()() const [1137] void std::allocator_traits<std::allocator<std::thread> >::destroy<std::thread>(std::allocator<std::thread>&, std::thread*) [270] double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
 [542] std::function<void ()>::operator bool() const [758] std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long) [130] Math::Matrix* std::__uninitialized_default_n_a<Math::Matrix*, unsigned long, Math::Matrix>(Math::Matrix*, unsigned long, std::allocator<Math::Matrix>&)
 [384] std::_Any_data::_M_access() const [1096] std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [269] double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
 [649] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [765] void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, std::thread>(std::allocator<std::thread>&, std::thread*, std::thread&&) [1062] Math::Matrix const* std::__make_move_if_noexcept_iterator<Math::Matrix, Math::Matrix const*>(Math::Matrix*)
 [407] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >() const [759] void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::allocator<std::thread>&, std::thread*, Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1052] std::tuple<Math::Matrix, Math::Matrix> const* std::__make_move_if_noexcept_iterator<std::tuple<Math::Matrix, Math::Matrix>, std::tuple<Math::Matrix, Math::Matrix> const*>(std::tuple<Math::Matrix, Math::Matrix>*)
 [645] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}*>() const [703] std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long) [729] Math::Matrix* std::__uninitialized_move_if_noexcept_a<Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix> >(Math::Matrix*, Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&)
 [612] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}* const& std::_Any_data::_M_access<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}*>() const [174] void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [667] std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_move_if_noexcept_a<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
 [451] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}*>() const [704] std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long) [1035] std::abs(double)
 [443] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}*>() const [968] std::allocator_traits<std::allocator<std::function<void ()> > >::max_size(std::allocator<std::function<void ()> > const&) [984] std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&)
 [635] Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}* const& std::_Any_data::_M_access<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}*>() const [216] void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [1019] std::tuple_element<0ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<0ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&)
 [633] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>() const [141] void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::function<void ()>*, Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [318] std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
 [640] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1} const& std::_Any_data::_M_access<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>() const [282] std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [476] std::tuple_element<0ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [866] std::allocator<Math::Matrix>::allocator(std::allocator<Math::Matrix> const&) [610] std::allocator_traits<std::allocator<double> >::select_on_container_copy_construction(std::allocator<double> const&) [274] std::tuple_element<0ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
 [942] std::allocator<Math::Matrix>::allocator() [158] std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [1082] std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)
 [855] std::allocator<Math::Matrix>::~allocator() [913] std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [994] std::tuple_element<0ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
 [1154] std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [770] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [1125] std::tuple_element<0ul, std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::type&& std::get<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&&)
 [1155] std::allocator<std::function<void ()>*>::~allocator() [334] void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*) [978] std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type const& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix> const&)
 [566] std::allocator<std::packaged_task<void ()> >::allocator(std::allocator<std::packaged_task<void ()> > const&) [200] void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*) [1022] std::tuple_element<1ul, std::tuple<Math::Matrix, Math::Matrix> >::type& std::get<1ul, Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&)
 [358] std::allocator<std::packaged_task<void ()> >::allocator() [771] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [363] std::tuple_element<1ul, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [314] std::allocator<std::packaged_task<void ()> >::~allocator() [1202] std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&) [551] std::tuple_element<1ul, std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
 [575] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [154] void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [990] std::tuple_element<1ul, std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > > >::type& std::get<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >(std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&)
 [576] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [101] void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>*, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [915] int const& std::max<int>(int const&, int const&)
 [392] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [931] std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1059] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [836] std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2> >::~allocator() [93] std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [517] int std::min<int>(std::initializer_list<int>)
 [568] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<void ()> >(std::allocator<std::packaged_task<void ()> > const&) [401] std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [886] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 [827] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [38] std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::_M_invoke(std::_Any_data const&) [162] __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [1156] std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::allocator() [522] std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [107] double* std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*)
 [1157] std::allocator<std::tuple<Math::Matrix, Math::Matrix> >::~allocator() [322] std::_Function_handler<double (double), Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [789] int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*)
 [1188] std::allocator<std::thread>::allocator() [527] std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [712] double* std::copy<double const*, double*>(double const*, double const*, double*)
 [1189] std::allocator<std::thread>::~allocator() [614] std::_Function_handler<double (double), Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::_M_invoke(std::_Any_data const&, double&&) [790] int* std::copy<int const*, int*>(int const*, int const*, int*)
 [1190] std::allocator<std::function<void ()> >::allocator() [1001] std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [716] std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [1191] std::allocator<std::function<void ()> >::~allocator() [220] std::_Function_handler<void (int, int), Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [599] double* std::copy<double*, double*>(double*, double*, double*)
 [342] std::allocator<double>::allocator(std::allocator<double> const&) [530] std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [904] std::remove_reference<Math::Matrix&>::type&& std::move<Math::Matrix&>(Math::Matrix&)
 [386] std::allocator<double>::allocator() [203] std::_Function_handler<void (int, int), Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [482] std::remove_reference<std::__future_base::_Result_base::_Deleter&>::type&& std::move<std::__future_base::_Result_base::_Deleter&>(std::__future_base::_Result_base::_Deleter&)
 [313] std::allocator<double>::~allocator() [526] std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [1074] std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)
 [477] std::allocator<int>::allocator(std::allocator<int> const&) [118] std::_Function_handler<void (int, int), Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::_M_invoke(std::_Any_data const&, int&&, int&&) [565] std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
 [255] std::allocator<int>::allocator() [240] std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [564] std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
 [341] std::allocator<int>::~allocator() [83] std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [478] std::remove_reference<std::__future_base::_Result_base*&>::type&& std::move<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&)
 [985] std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false> const&) [106] std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation) [903] std::remove_reference<std::allocator<double>&>::type&& std::move<std::allocator<double>&>(std::allocator<double>&)
 [948] std::_Head_base<0ul, Math::Matrix, false>::_M_head(std::_Head_base<0ul, Math::Matrix, false>&) [45] std::_Function_handler<void (), Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [929] std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&)
 [690] std::_Head_base<0ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [521] void std::condition_variable::wait<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}>(std::unique_lock<std::mutex>&, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}) [400] std::remove_reference<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>::type&& std::move<std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&)
 [691] std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false>&&) [150] void std::condition_variable::wait<Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}>(std::unique_lock<std::mutex>&, Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}) [848] std::remove_reference<std::shared_ptr<std::packaged_task<void ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<void ()> >&>(std::shared_ptr<std::packaged_task<void ()> >&)
 [605] std::_Head_base<0ul, Math::Matrix, false>::_Head_base(std::_Head_base<0ul, Math::Matrix, false> const&) [148] Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*>(__gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, __gnu_cxx::__normal_iterator<Math::Matrix const*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix*) [491] std::remove_reference<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&)
 [657] std::_Head_base<0ul, Math::Matrix, false>::~_Head_base() [726] Math::Matrix* std::__uninitialized_copy<false>::__uninit_copy<Math::Matrix const*, Math::Matrix*>(Math::Matrix const*, Math::Matrix const*, Math::Matrix*) [1041] std::remove_reference<std::tuple<Math::Matrix, Math::Matrix>&>::type&& std::move<std::tuple<Math::Matrix, Math::Matrix>&>(std::tuple<Math::Matrix, Math::Matrix>&)
 [901] std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false> const&) [664] std::tuple<Math::Matrix, Math::Matrix>* std::__uninitialized_copy<false>::__uninit_copy<std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix> const*, std::tuple<Math::Matrix, Math::Matrix>*) [398] std::remove_reference<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&)
 [809] std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result_base*, false>&) [108] double* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*) [1126] std::remove_reference<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>::type&& std::move<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&>(std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>&)
 [602] std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [781] int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) [1143] std::remove_reference<std::thread&>::type&& std::move<std::thread&>(std::thread&)
 [846] std::_Head_base<0ul, std::__future_base::_Result_base*, false>::_Head_base() [708] double* std::__uninitialized_copy<true>::__uninit_copy<double const*, double*>(double const*, double const*, double*) [513] std::remove_reference<std::vector<double, std::allocator<double> >&>::type&& std::move<std::vector<double, std::allocator<double> >&>(std::vector<double, std::allocator<double> >&)
 [804] std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_M_head(std::_Head_base<0ul, std::__future_base::_Result<void>*, false>&) [782] int* std::__uninitialized_copy<true>::__uninit_copy<int const*, int*>(int const*, int const*, int*) [820] std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
 [844] std::_Head_base<0ul, std::__future_base::_Result<void>*, false>::_Head_base() [736] double* std::__uninitialized_fill_n<true>::__uninit_fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [480] std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
 [1077] std::_Head_base<0ul, std::thread::_State*, false>::_M_head(std::_Head_base<0ul, std::thread::_State*, false>&) [442] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [922] std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&)
 [1104] std::_Head_base<0ul, std::thread::_State*, false>::_Head_base() [277] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [512] std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&& std::move<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&)
 [992] std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [885] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [187] std::enable_if<std::__and_<std::__is_swappable<Math::Matrix>, std::__is_swappable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix, Math::Matrix>(std::tuple<Math::Matrix, Math::Matrix>&, std::tuple<Math::Matrix, Math::Matrix>&)
 [298] std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [453] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [184] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Math::Matrix> >, std::is_move_constructible<Math::Matrix>, std::is_move_assignable<Math::Matrix> >::value, void>::type std::swap<Math::Matrix>(Math::Matrix&, Math::Matrix&)
 [380] std::_Head_base<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [606] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [429] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base::_Deleter> >, std::is_move_constructible<std::__future_base::_Result_base::_Deleter>, std::is_move_assignable<std::__future_base::_Result_base::_Deleter> >::value, void>::type std::swap<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&, std::__future_base::_Result_base::_Deleter&)
 [1105] std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_M_head(std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>&) [504] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [1144] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
 [1106] std::_Head_base<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}, false>::_Head_base<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [119] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [569] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
 [982] std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false> const&) [544] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [428] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
 [950] std::_Head_base<1ul, Math::Matrix, false>::_M_head(std::_Head_base<1ul, Math::Matrix, false>&) [195] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [410] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_Result_base*> >, std::is_move_constructible<std::__future_base::_Result_base*>, std::is_move_assignable<std::__future_base::_Result_base*> >::value, void>::type std::swap<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&, std::__future_base::_Result_base*&)
 [692] std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false>&&) [167] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [394] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
 [604] std::_Head_base<1ul, Math::Matrix, false>::_Head_base(std::_Head_base<1ul, Math::Matrix, false> const&) [838] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [359] double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
 [693] std::_Head_base<1ul, Math::Matrix, false>::_Head_base<Math::Matrix&>(Math::Matrix&) [644] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<int>) [485] void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
 [659] std::_Head_base<1ul, Math::Matrix, false>::~_Head_base() [452] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [1063] Math::Matrix&& std::forward<Math::Matrix>(std::remove_reference<Math::Matrix>::type&)
 [807] std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>&) [821] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [405] std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&)
 [823] std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [87] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [857] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&)
 [618] std::_Head_base<1ul, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [404] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [484] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void> >::type&)
 [1107] std::_Head_base<1ul, std::default_delete<std::thread::_State>, true>::_Head_base() [352] std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, std::allocator<int>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [387] std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&)
 [989] std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_M_head(std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>&) [155] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [481] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&)
 [307] std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::_Head_base<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [236] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [814] bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&)
 [456] std::_Head_base<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, false>::~_Head_base() [389] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [889] Math::Matrix const& std::forward<Math::Matrix const&>(std::remove_reference<Math::Matrix const&>::type&)
 [105] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&, std::allocator<int> const&) [447] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<void ()> >) [803] std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&)
 [233] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >::~shared_ptr() [326] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [1037] std::tuple<Math::Matrix, Math::Matrix> const& std::forward<std::tuple<Math::Matrix, Math::Matrix> const&>(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> const&>::type&)
  [66] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::shared_ptr<std::allocator<int>, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int> const&>(std::_Sp_alloc_shared_tag<std::allocator<int> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&, std::allocator<int> const&) [287] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [1025] Math::Matrix& std::forward<Math::Matrix&>(std::remove_reference<Math::Matrix&>::type&)
 [157] std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >::~shared_ptr() [67] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [880] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&)
 [239] std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [32] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [833] std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>& std::forward<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>(std::remove_reference<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}, void>&>::type&)
 [238] std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<void ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<void ()> > const&) [219] std::_Sp_counted_ptr_inplace<std::packaged_task<void ()>, std::allocator<std::packaged_task<void ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [425] std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&)
  [64] std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [344] std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [887] std::vector<Math::Matrix, std::allocator<Math::Matrix> >& std::forward<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::remove_reference<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>::type&)
 [332] std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()> >&&) [1011] std::uniform_int_distribution<unsigned long>::param_type::param_type(unsigned long, unsigned long) [505] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&>::type&)
 [662] std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>, void>(std::shared_ptr<std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()> >&&) [1012] std::uniform_int_distribution<unsigned long>::uniform_int_distribution(unsigned long, unsigned long) [867] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&>::type&)
 [498] std::shared_ptr<std::__future_base::_Task_state_base<void ()> >::~shared_ptr() [586] unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [879] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&>::type&)
 [232] std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> > const&) [587] unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<unsigned long>::param_type const&) [832] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&>::type&)
  [52] std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&&) [1203] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [881] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&>::type&)
  [26] std::shared_ptr<std::packaged_task<void ()> >::shared_ptr<std::allocator<std::packaged_task<void ()> >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::_Sp_alloc_shared_tag<std::allocator<std::packaged_task<void ()> > >, Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&&) [1204] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [834] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&>::type&)
 [302] std::shared_ptr<std::packaged_task<void ()> >::shared_ptr(std::shared_ptr<std::packaged_task<void ()> >&&) [1205] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [895] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
  [39] std::shared_ptr<std::packaged_task<void ()> >::~shared_ptr() [585] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [872] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
 [419] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [131] Math::Matrix* std::__uninitialized_default_n_1<false>::__uninit_default_n<Math::Matrix*, unsigned long>(Math::Matrix*, unsigned long) [861] Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&>::type&)
 [178] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [354] double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [1030] std::tuple<Math::Matrix, Math::Matrix>&& std::forward<std::tuple<Math::Matrix, Math::Matrix> >(std::remove_reference<std::tuple<Math::Matrix, Math::Matrix> >::type&)
  [94] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [1013] std::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, true>(unsigned long&&, unsigned long&&) [1099] std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&)
 [265] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [591] std::span<std::tuple<Math::Matrix, Math::Matrix>, 18446744073709551615ul>::span<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >) [894] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}>::type&)
 [104] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [967] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_S_max_size(std::allocator<std::function<void ()> > const&) [514] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}&& std::forward<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>(std::remove_reference<Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}>::type&)
 [306] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::get_deleter() [135] std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [1054] Math::ThreadPool::start(unsigned long)::{lambda()#1}&& std::forward<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(std::remove_reference<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type&)
 [251] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::release() [91] std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [468] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>::type&)
 [329] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>&&) [422] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [536] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&& std::forward<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(std::remove_reference<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>::type&)
 [212] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<void>*) [438] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [319] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>::type&)
 [234] std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [218] void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [435] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}&& std::forward<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(std::remove_reference<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>::type&)
 [1108] std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [655] void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [943] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}>::type&)
 [1109] std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [554] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long, bool) [905] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}>::type&)
 [1192] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [464] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [891] Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}&& std::forward<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>(std::remove_reference<Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}>::type&)
 [1193] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [375] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long) [563] double&& std::forward<double>(std::remove_reference<double>::type&)
 [626] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long) [360] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [802] int&& std::forward<int>(std::remove_reference<int>::type&)
 [749] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [225] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [958] unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&)
 [1194] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl_data::_Deque_impl_data() [560] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [181] void std::shuffle<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&>(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
 [651] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [461] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [249] void std::_Destroy<Math::Matrix>(Math::Matrix*)
 [740] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [152] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [652] void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [627] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long) [623] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [448] void std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::allocator<double>&)
 [621] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long) [413] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [247] void std::_Destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*)
 [547] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [350] std::mutex::lock() [246] void std::_Destroy<Math::Matrix*, Math::Matrix>(Math::Matrix*, Math::Matrix*, std::allocator<Math::Matrix>&)
 [839] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [300] std::mutex::unlock() [696] void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*)
 [622] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [1206] std::mutex::mutex() [697] void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*, std::allocator<std::tuple<Math::Matrix, Math::Matrix> >&)
 [625] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [136] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [791] void std::_Destroy<std::thread*>(std::thread*, std::thread*)
 [986] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [460] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [792] void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&)
 [949] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_head(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [134] decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}&&) [793] void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
 [185] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_swap(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [90] decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}>(Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}&&) [465] void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&)
 [976] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_M_tail(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&) [624] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [215] void std::_Destroy<double*>(double*, double*)
 [541] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix> const&) [414] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [170] void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
 [674] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>&&) [186] std::tuple<Math::Matrix, Math::Matrix>::swap(std::tuple<Math::Matrix, Math::Matrix>&) [462] void std::_Destroy<int*>(int*, int*)
 [675] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::_Tuple_impl<Math::Matrix&, Math::Matrix&, void>(Math::Matrix&, Math::Matrix&) [540] std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix> const&) [463] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [637] std::_Tuple_impl<0ul, Math::Matrix, Math::Matrix>::~_Tuple_impl() [676] std::tuple<Math::Matrix, Math::Matrix>::tuple(std::tuple<Math::Matrix, Math::Matrix>&&) [699] void std::_Destroy<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>*)
 [579] std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [677] std::tuple<Math::Matrix, Math::Matrix>::tuple<Math::Matrix&, Math::Matrix&, true>(Math::Matrix&, Math::Matrix&) [1127] void std::_Destroy<std::thread>(std::thread*)
 [810] std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [638] std::tuple<Math::Matrix, Math::Matrix>::~tuple() [434] void std::__fill_a<double*, double>(double*, double*, double const&)
 [415] std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [351] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [19] std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [276] std::_Tuple_impl<0ul, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [235] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [11] std::__invoke_result<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::type std::__invoke<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&)
 [594] std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter> const&) [851] std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [707] std::iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >::difference_type std::distance<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
 [473] std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&) [366] std::tuple<std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::tuple<true, true>() [1036] std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*)
 [439] std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [1116] std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<true, true>() [1213] std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*)
 [849] std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ul, std::__future_base::_Result<void>*, std::__future_base::_Result_base::_Deleter>&&) [194] std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, true>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [433] __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double>(double*, double*, double const&)
 [1078] std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >&) [337] std::tuple<std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~tuple() [161] void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [1110] std::_Tuple_impl<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [1117] std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}>::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}, true, true>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [188] void std::iter_swap<__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > > >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, __gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >)
 [991] std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [396] std::atomic<unsigned int>::atomic(unsigned int) [1014] std::pair<std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type, std::__strip_reference_wrapper<std::decay<unsigned long>::type>::__type> std::make_pair<unsigned long, unsigned long>(unsigned long&&, unsigned long&&)
 [198] std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, void>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&, std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [89] std::future<void>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [910] std::operator&(std::memory_order, std::__memory_order_modifier)
 [338] std::_Tuple_impl<0ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> >, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [97] std::future<void>::~future() [1092] std::operator==(std::thread::id, std::thread::id)
 [1111] std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_M_head(std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>&) [1118] std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::_State_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [490] std::operator==(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
 [1112] std::_Tuple_impl<0ul, Math::ThreadPool::start(unsigned long)::{lambda()#1}>::_Tuple_impl<Math::ThreadPool::start(unsigned long)::{lambda()#1}>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [1119] std::thread::_State_impl<std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> > >::~_State_impl() [653] std::operator-(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
 [981] std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix> const&) [1071] std::thread::id::id() [892] Activation::Sigmoid::fn(Math::Matrix)::{lambda(double)#1}::operator()(double) const
 [951] std::_Tuple_impl<1ul, Math::Matrix>::_M_head(std::_Tuple_impl<1ul, Math::Matrix>&) [1138] std::thread::swap(std::thread&) [906] Activation::Sigmoid::fnDerv(Math::Matrix)::{lambda(double)#1}::operator()(double) const
 [279] std::_Tuple_impl<1ul, Math::Matrix>::_M_swap(std::_Tuple_impl<1ul, Math::Matrix>&) [1120] std::thread::_State::_State() [12] Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const
 [694] std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix>&&) [8] void std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) [103] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::operator()() const
 [603] std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl(std::_Tuple_impl<1ul, Math::Matrix> const&) [9] std::thread::_Invoker<std::tuple<Math::ThreadPool::start(unsigned long)::{lambda()#1}> >::operator()() [368] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::future({lambda()#1}&&)
 [695] std::_Tuple_impl<1ul, Math::Matrix>::_Tuple_impl<Math::Matrix&>(Math::Matrix&) [1121] std::thread::thread<Math::ThreadPool::start(unsigned long)::{lambda()#1}, , void>(Math::ThreadPool::start(unsigned long)::{lambda()#1}&&) [159] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2})::{lambda()#1}::~future()
 [658] std::_Tuple_impl<1ul, Math::Matrix>::~_Tuple_impl() [1139] std::thread::thread(std::thread&&) [54] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::operator()() const
 [808] std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&) [1088] std::thread::~thread() [310] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::future({lambda()#1}&&)
 [356] std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [581] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_max_size(std::allocator<Math::Matrix> const&) [76] Math::ThreadPool::enqueue<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}>(Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1})::{lambda()#1}::~future()
 [850] std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>&&) [718] Math::Matrix& std::vector<Math::Matrix, std::allocator<Math::Matrix> >::emplace_back<Math::Matrix>(Math::Matrix&&) [144] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}::operator()() const
 [418] std::_Tuple_impl<1ul, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [719] void std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_realloc_insert<Math::Matrix>(__gnu_cxx::__normal_iterator<Math::Matrix*, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >, Math::Matrix&&) [911] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#3}::operator()() const
 [1113] std::_Tuple_impl<1ul, std::default_delete<std::thread::_State> >::_Tuple_impl() [600] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_S_check_init_len(unsigned long, std::allocator<Math::Matrix> const&) [60] Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}::operator()() const
 [987] std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_M_head(std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >&) [132] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::_M_default_initialize(unsigned long) [257] Math::Matrix::iProd(Math::Matrix, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
 [308] std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::_Tuple_impl<std::vector<Math::Matrix, std::allocator<Math::Matrix> >&>(std::vector<Math::Matrix, std::allocator<Math::Matrix> >&) [1072] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::end() [261] Math::Matrix::oProd(Math::Matrix const&, Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
 [455] std::_Tuple_impl<1ul, std::vector<Math::Matrix, std::allocator<Math::Matrix> > >::~_Tuple_impl() [1089] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::back() [122] Math::Matrix::operator*=(Math::Matrix const&)::{lambda(int, int)#1}::operator()(int, int) const
 [595] double* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<double const*, double*>(double const*, double const*, double*) [1090] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::begin() [138] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#2}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const
 [1023] std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [720] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::push_back(Math::Matrix&&) [61] std::__future_base::_Task_state<Math::Matrix::threadPoolProcess(std::function<void (int, int)>, int)::{lambda()#1}, std::allocator<int>, void ()>::_M_run()::{lambda()#1}::operator()() const
 [284] double* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [1140] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector() [17] std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator()() const
 [1158] int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) [116] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(std::vector<Math::Matrix, std::allocator<Math::Matrix> > const&) [842] std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::operator void (*)()() const
 [853] std::atomic_flag::_S_init(bool) [120] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::vector(unsigned long, std::allocator<Math::Matrix> const&) [16] std::once_flag::_Prepare_execution::_Prepare_execution<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))::{lambda()#1}::_FUN()
 [497] std::atomic_flag::atomic_flag(bool) [199] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::~vector() [18] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const
 [301] std::unique_lock<std::mutex>::lock() [483] std::vector<Math::Matrix, std::allocator<Math::Matrix> >::operator[](unsigned long) [193] Math::ThreadPool::start(unsigned long)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const
 [207] std::unique_lock<std::mutex>::unlock() [1058] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_S_max_size(std::allocator<std::tuple<Math::Matrix, Math::Matrix> > const&) [472] operator new(unsigned long, void*)
 [133] std::unique_lock<std::mutex>::unique_lock(std::mutex&) [646] std::tuple<Math::Matrix, Math::Matrix>& std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::emplace_back<std::tuple<Math::Matrix, Math::Matrix> >(std::tuple<Math::Matrix, Math::Matrix>&&) [222] _init
 [153] std::unique_lock<std::mutex>::~unique_lock() [660] void std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::_M_realloc_insert<std::tuple<Math::Matrix, Math::Matrix> >(__gnu_cxx::__normal_iterator<std::tuple<Math::Matrix, Math::Matrix>*, std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > > >, std::tuple<Math::Matrix, Math::Matrix>&&) [471] frame_dummy
 [250] void std::_Destroy_aux<false>::__destroy<Math::Matrix*>(Math::Matrix*, Math::Matrix*) [1038] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::end() [22] <cycle 1>
 [700] void std::_Destroy_aux<false>::__destroy<std::tuple<Math::Matrix, Math::Matrix>*>(std::tuple<Math::Matrix, Math::Matrix>*, std::tuple<Math::Matrix, Math::Matrix>*) [1040] std::vector<std::tuple<Math::Matrix, Math::Matrix>, std::allocator<std::tuple<Math::Matrix, Math::Matrix> > >::back()
